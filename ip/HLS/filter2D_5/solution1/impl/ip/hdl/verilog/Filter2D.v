// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_V,
        p_src_cols_V,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_0_dout,
        p_kernel_val_0_V_0_empty_n,
        p_kernel_val_0_V_0_read,
        p_kernel_val_0_V_1_dout,
        p_kernel_val_0_V_1_empty_n,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_dout,
        p_kernel_val_0_V_2_empty_n,
        p_kernel_val_0_V_2_read,
        p_kernel_val_0_V_3_dout,
        p_kernel_val_0_V_3_empty_n,
        p_kernel_val_0_V_3_read,
        p_kernel_val_0_V_4_dout,
        p_kernel_val_0_V_4_empty_n,
        p_kernel_val_0_V_4_read,
        p_kernel_val_1_V_0_dout,
        p_kernel_val_1_V_0_empty_n,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_1_dout,
        p_kernel_val_1_V_1_empty_n,
        p_kernel_val_1_V_1_read,
        p_kernel_val_1_V_2_dout,
        p_kernel_val_1_V_2_empty_n,
        p_kernel_val_1_V_2_read,
        p_kernel_val_1_V_3_dout,
        p_kernel_val_1_V_3_empty_n,
        p_kernel_val_1_V_3_read,
        p_kernel_val_1_V_4_dout,
        p_kernel_val_1_V_4_empty_n,
        p_kernel_val_1_V_4_read,
        p_kernel_val_2_V_0_dout,
        p_kernel_val_2_V_0_empty_n,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_dout,
        p_kernel_val_2_V_1_empty_n,
        p_kernel_val_2_V_1_read,
        p_kernel_val_2_V_2_dout,
        p_kernel_val_2_V_2_empty_n,
        p_kernel_val_2_V_2_read,
        p_kernel_val_2_V_3_dout,
        p_kernel_val_2_V_3_empty_n,
        p_kernel_val_2_V_3_read,
        p_kernel_val_2_V_4_dout,
        p_kernel_val_2_V_4_empty_n,
        p_kernel_val_2_V_4_read,
        p_kernel_val_3_V_0_dout,
        p_kernel_val_3_V_0_empty_n,
        p_kernel_val_3_V_0_read,
        p_kernel_val_3_V_1_dout,
        p_kernel_val_3_V_1_empty_n,
        p_kernel_val_3_V_1_read,
        p_kernel_val_3_V_2_dout,
        p_kernel_val_3_V_2_empty_n,
        p_kernel_val_3_V_2_read,
        p_kernel_val_3_V_3_dout,
        p_kernel_val_3_V_3_empty_n,
        p_kernel_val_3_V_3_read,
        p_kernel_val_3_V_4_dout,
        p_kernel_val_3_V_4_empty_n,
        p_kernel_val_3_V_4_read,
        p_kernel_val_4_V_0_dout,
        p_kernel_val_4_V_0_empty_n,
        p_kernel_val_4_V_0_read,
        p_kernel_val_4_V_1_dout,
        p_kernel_val_4_V_1_empty_n,
        p_kernel_val_4_V_1_read,
        p_kernel_val_4_V_2_dout,
        p_kernel_val_4_V_2_empty_n,
        p_kernel_val_4_V_2_read,
        p_kernel_val_4_V_3_dout,
        p_kernel_val_4_V_3_empty_n,
        p_kernel_val_4_V_3_read,
        p_kernel_val_4_V_4_dout,
        p_kernel_val_4_V_4_empty_n,
        p_kernel_val_4_V_4_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state19 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V;
input  [31:0] p_src_cols_V;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [7:0] p_kernel_val_0_V_0_dout;
input   p_kernel_val_0_V_0_empty_n;
output   p_kernel_val_0_V_0_read;
input  [7:0] p_kernel_val_0_V_1_dout;
input   p_kernel_val_0_V_1_empty_n;
output   p_kernel_val_0_V_1_read;
input  [7:0] p_kernel_val_0_V_2_dout;
input   p_kernel_val_0_V_2_empty_n;
output   p_kernel_val_0_V_2_read;
input  [7:0] p_kernel_val_0_V_3_dout;
input   p_kernel_val_0_V_3_empty_n;
output   p_kernel_val_0_V_3_read;
input  [7:0] p_kernel_val_0_V_4_dout;
input   p_kernel_val_0_V_4_empty_n;
output   p_kernel_val_0_V_4_read;
input  [7:0] p_kernel_val_1_V_0_dout;
input   p_kernel_val_1_V_0_empty_n;
output   p_kernel_val_1_V_0_read;
input  [7:0] p_kernel_val_1_V_1_dout;
input   p_kernel_val_1_V_1_empty_n;
output   p_kernel_val_1_V_1_read;
input  [7:0] p_kernel_val_1_V_2_dout;
input   p_kernel_val_1_V_2_empty_n;
output   p_kernel_val_1_V_2_read;
input  [7:0] p_kernel_val_1_V_3_dout;
input   p_kernel_val_1_V_3_empty_n;
output   p_kernel_val_1_V_3_read;
input  [7:0] p_kernel_val_1_V_4_dout;
input   p_kernel_val_1_V_4_empty_n;
output   p_kernel_val_1_V_4_read;
input  [7:0] p_kernel_val_2_V_0_dout;
input   p_kernel_val_2_V_0_empty_n;
output   p_kernel_val_2_V_0_read;
input  [7:0] p_kernel_val_2_V_1_dout;
input   p_kernel_val_2_V_1_empty_n;
output   p_kernel_val_2_V_1_read;
input  [7:0] p_kernel_val_2_V_2_dout;
input   p_kernel_val_2_V_2_empty_n;
output   p_kernel_val_2_V_2_read;
input  [7:0] p_kernel_val_2_V_3_dout;
input   p_kernel_val_2_V_3_empty_n;
output   p_kernel_val_2_V_3_read;
input  [7:0] p_kernel_val_2_V_4_dout;
input   p_kernel_val_2_V_4_empty_n;
output   p_kernel_val_2_V_4_read;
input  [7:0] p_kernel_val_3_V_0_dout;
input   p_kernel_val_3_V_0_empty_n;
output   p_kernel_val_3_V_0_read;
input  [7:0] p_kernel_val_3_V_1_dout;
input   p_kernel_val_3_V_1_empty_n;
output   p_kernel_val_3_V_1_read;
input  [7:0] p_kernel_val_3_V_2_dout;
input   p_kernel_val_3_V_2_empty_n;
output   p_kernel_val_3_V_2_read;
input  [7:0] p_kernel_val_3_V_3_dout;
input   p_kernel_val_3_V_3_empty_n;
output   p_kernel_val_3_V_3_read;
input  [7:0] p_kernel_val_3_V_4_dout;
input   p_kernel_val_3_V_4_empty_n;
output   p_kernel_val_3_V_4_read;
input  [7:0] p_kernel_val_4_V_0_dout;
input   p_kernel_val_4_V_0_empty_n;
output   p_kernel_val_4_V_0_read;
input  [7:0] p_kernel_val_4_V_1_dout;
input   p_kernel_val_4_V_1_empty_n;
output   p_kernel_val_4_V_1_read;
input  [7:0] p_kernel_val_4_V_2_dout;
input   p_kernel_val_4_V_2_empty_n;
output   p_kernel_val_4_V_2_read;
input  [7:0] p_kernel_val_4_V_3_dout;
input   p_kernel_val_4_V_3_empty_n;
output   p_kernel_val_4_V_3_read;
input  [7:0] p_kernel_val_4_V_4_dout;
input   p_kernel_val_4_V_4_empty_n;
output   p_kernel_val_4_V_4_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;
reg p_kernel_val_0_V_0_read;
reg p_kernel_val_0_V_1_read;
reg p_kernel_val_0_V_2_read;
reg p_kernel_val_0_V_3_read;
reg p_kernel_val_0_V_4_read;
reg p_kernel_val_1_V_0_read;
reg p_kernel_val_1_V_1_read;
reg p_kernel_val_1_V_2_read;
reg p_kernel_val_1_V_3_read;
reg p_kernel_val_1_V_4_read;
reg p_kernel_val_2_V_0_read;
reg p_kernel_val_2_V_1_read;
reg p_kernel_val_2_V_2_read;
reg p_kernel_val_2_V_3_read;
reg p_kernel_val_2_V_4_read;
reg p_kernel_val_3_V_0_read;
reg p_kernel_val_3_V_1_read;
reg p_kernel_val_3_V_2_read;
reg p_kernel_val_3_V_3_read;
reg p_kernel_val_3_V_4_read;
reg p_kernel_val_4_V_0_read;
reg p_kernel_val_4_V_1_read;
reg p_kernel_val_4_V_2_read;
reg p_kernel_val_4_V_3_read;
reg p_kernel_val_4_V_4_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_i_reg_3576;
reg   [0:0] ap_reg_pp0_iter1_exitcond388_i_i_reg_3576;
reg   [0:0] or_cond_i_i_i_reg_3607;
reg   [0:0] tmp_17_i_reg_3405;
reg   [0:0] tmp_2_i_reg_3396;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter13;
reg   [0:0] or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter12_or_cond_i_i_reg_3603;
reg    p_kernel_val_0_V_0_blk_n;
reg    p_kernel_val_0_V_1_blk_n;
reg    p_kernel_val_0_V_2_blk_n;
reg    p_kernel_val_0_V_3_blk_n;
reg    p_kernel_val_0_V_4_blk_n;
reg    p_kernel_val_1_V_0_blk_n;
reg    p_kernel_val_1_V_1_blk_n;
reg    p_kernel_val_1_V_2_blk_n;
reg    p_kernel_val_1_V_3_blk_n;
reg    p_kernel_val_1_V_4_blk_n;
reg    p_kernel_val_2_V_0_blk_n;
reg    p_kernel_val_2_V_1_blk_n;
reg    p_kernel_val_2_V_2_blk_n;
reg    p_kernel_val_2_V_3_blk_n;
reg    p_kernel_val_2_V_4_blk_n;
reg    p_kernel_val_3_V_0_blk_n;
reg    p_kernel_val_3_V_1_blk_n;
reg    p_kernel_val_3_V_2_blk_n;
reg    p_kernel_val_3_V_3_blk_n;
reg    p_kernel_val_3_V_4_blk_n;
reg    p_kernel_val_4_V_0_blk_n;
reg    p_kernel_val_4_V_1_blk_n;
reg    p_kernel_val_4_V_2_blk_n;
reg    p_kernel_val_4_V_3_blk_n;
reg    p_kernel_val_4_V_4_blk_n;
reg   [10:0] t_V_1_reg_950;
reg   [7:0] reg_961;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_predicate_op312_read_state7;
reg    ap_predicate_op313_read_state7;
reg    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
wire    ap_block_state14_pp0_stage0_iter9;
wire    ap_block_state15_pp0_stage0_iter10;
wire    ap_block_state16_pp0_stage0_iter11;
wire    ap_block_state17_pp0_stage0_iter12;
reg    ap_block_state18_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] ap_reg_pp0_iter3_reg_961;
wire   [11:0] tmp_7_fu_970_p1;
reg    ap_block_state1;
wire   [10:0] tmp_8_fu_974_p1;
wire   [11:0] tmp_9_fu_978_p1;
wire   [10:0] tmp_i_fu_986_p2;
wire   [10:0] tmp_1_i_fu_992_p2;
wire   [2:0] tmp_14_fu_1002_p1;
wire   [12:0] tmp_135_cast_cast_i_fu_1024_p1;
wire   [2:0] tmp_fu_1028_p2;
wire  signed [15:0] OP2_V_0_i_fu_1046_p1;
reg  signed [15:0] OP2_V_0_i_reg_3245;
wire  signed [15:0] OP2_V_0_1_i_fu_1050_p1;
reg  signed [15:0] OP2_V_0_1_i_reg_3250;
wire  signed [15:0] OP2_V_0_2_i_fu_1054_p1;
reg  signed [15:0] OP2_V_0_2_i_reg_3255;
wire  signed [15:0] OP2_V_0_3_i_fu_1058_p1;
reg  signed [15:0] OP2_V_0_3_i_reg_3260;
wire  signed [15:0] OP2_V_0_4_i_fu_1062_p1;
reg  signed [15:0] OP2_V_0_4_i_reg_3265;
wire  signed [15:0] OP2_V_1_i_fu_1066_p1;
reg  signed [15:0] OP2_V_1_i_reg_3270;
wire  signed [15:0] OP2_V_1_1_i_fu_1070_p1;
reg  signed [15:0] OP2_V_1_1_i_reg_3275;
wire  signed [15:0] OP2_V_1_2_i_fu_1074_p1;
reg  signed [15:0] OP2_V_1_2_i_reg_3280;
wire  signed [15:0] OP2_V_1_3_i_fu_1078_p1;
reg  signed [15:0] OP2_V_1_3_i_reg_3285;
wire  signed [15:0] OP2_V_1_4_i_fu_1082_p1;
reg  signed [15:0] OP2_V_1_4_i_reg_3290;
wire  signed [15:0] OP2_V_2_i_fu_1086_p1;
reg  signed [15:0] OP2_V_2_i_reg_3295;
wire  signed [15:0] OP2_V_2_1_i_fu_1090_p1;
reg  signed [15:0] OP2_V_2_1_i_reg_3300;
wire  signed [15:0] OP2_V_2_2_i_fu_1094_p1;
reg  signed [15:0] OP2_V_2_2_i_reg_3305;
wire  signed [15:0] OP2_V_2_3_i_fu_1098_p1;
reg  signed [15:0] OP2_V_2_3_i_reg_3310;
wire  signed [15:0] OP2_V_2_4_i_fu_1102_p1;
reg  signed [15:0] OP2_V_2_4_i_reg_3315;
wire  signed [15:0] OP2_V_3_i_fu_1106_p1;
reg  signed [15:0] OP2_V_3_i_reg_3320;
wire  signed [15:0] OP2_V_3_1_i_fu_1110_p1;
reg  signed [15:0] OP2_V_3_1_i_reg_3325;
wire  signed [15:0] OP2_V_3_2_i_fu_1114_p1;
reg  signed [15:0] OP2_V_3_2_i_reg_3330;
wire  signed [15:0] OP2_V_3_3_i_fu_1118_p1;
reg  signed [15:0] OP2_V_3_3_i_reg_3335;
wire  signed [15:0] OP2_V_3_4_i_fu_1122_p1;
reg  signed [15:0] OP2_V_3_4_i_reg_3340;
wire  signed [15:0] OP2_V_4_i_fu_1126_p1;
reg  signed [15:0] OP2_V_4_i_reg_3345;
wire  signed [15:0] OP2_V_4_1_i_fu_1130_p1;
reg  signed [15:0] OP2_V_4_1_i_reg_3350;
wire  signed [15:0] OP2_V_4_2_i_fu_1134_p1;
reg  signed [15:0] OP2_V_4_2_i_reg_3355;
wire  signed [15:0] OP2_V_4_3_i_fu_1138_p1;
reg  signed [15:0] OP2_V_4_3_i_reg_3360;
wire  signed [15:0] OP2_V_4_4_i_fu_1142_p1;
reg  signed [15:0] OP2_V_4_4_i_reg_3365;
wire   [12:0] tmp_10_cast_cast_i_fu_1160_p1;
wire   [2:0] tmp_3_fu_1164_p2;
wire   [2:0] tmp_s_fu_1170_p2;
wire   [10:0] i_V_fu_1185_p2;
reg   [10:0] i_V_reg_3391;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_2_i_fu_1191_p2;
wire   [0:0] exitcond389_i_i_fu_1180_p2;
wire   [0:0] ult_fu_1196_p2;
reg   [0:0] ult_reg_3400;
wire   [0:0] tmp_17_i_fu_1201_p2;
wire   [0:0] tmp_93_i_fu_1207_p2;
reg   [0:0] tmp_93_i_reg_3410;
wire   [0:0] tmp_93_1_i_fu_1213_p2;
reg   [0:0] tmp_93_1_i_reg_3414;
wire   [0:0] tmp_93_2_i_fu_1219_p2;
reg   [0:0] tmp_93_2_i_reg_3418;
wire   [0:0] tmp_115_i_fu_1225_p2;
reg   [0:0] tmp_115_i_reg_3422;
wire   [11:0] tmp_118_i_fu_1230_p2;
reg   [11:0] tmp_118_i_reg_3431;
reg   [0:0] tmp_28_reg_3439;
wire   [11:0] p_assign_7_i_fu_1244_p2;
reg   [11:0] p_assign_7_i_reg_3444;
wire   [11:0] p_assign_6_1_i_fu_1250_p2;
reg   [11:0] p_assign_6_1_i_reg_3449;
reg   [0:0] tmp_34_reg_3457;
wire   [11:0] p_assign_7_1_i_fu_1264_p2;
reg   [11:0] p_assign_7_1_i_reg_3462;
wire   [11:0] p_assign_6_2_i_fu_1270_p2;
reg   [11:0] p_assign_6_2_i_reg_3467;
reg   [0:0] tmp_43_reg_3475;
wire   [11:0] p_assign_7_2_i_fu_1284_p2;
reg   [11:0] p_assign_7_2_i_reg_3480;
wire   [11:0] p_assign_6_3_i_fu_1290_p2;
reg   [11:0] p_assign_6_3_i_reg_3485;
reg   [0:0] tmp_50_reg_3493;
wire   [11:0] p_assign_7_3_i_fu_1304_p2;
reg   [11:0] p_assign_7_3_i_reg_3498;
wire   [11:0] p_assign_6_4_i_fu_1310_p2;
reg   [11:0] p_assign_6_4_i_reg_3503;
reg   [0:0] tmp_53_reg_3511;
wire   [11:0] p_assign_7_4_i_fu_1324_p2;
reg   [11:0] p_assign_7_4_i_reg_3516;
wire   [2:0] tmp_60_fu_1539_p3;
reg   [2:0] tmp_60_reg_3521;
wire    ap_CS_fsm_state3;
wire   [2:0] tmp_5_fu_1563_p3;
reg   [2:0] tmp_5_reg_3526;
wire   [2:0] tmp_13_fu_1587_p3;
reg   [2:0] tmp_13_reg_3531;
wire   [2:0] tmp_25_fu_1611_p3;
reg   [2:0] tmp_25_reg_3536;
wire   [2:0] tmp_31_fu_1635_p3;
reg   [2:0] tmp_31_reg_3541;
wire   [0:0] rev_fu_1643_p2;
reg   [0:0] rev_reg_3546;
wire    ap_CS_fsm_state4;
wire   [2:0] tmp_61_fu_1653_p2;
reg   [2:0] tmp_61_reg_3551;
wire   [2:0] row_assign_8_1_t_i_fu_1658_p2;
reg   [2:0] row_assign_8_1_t_i_reg_3556;
wire   [2:0] row_assign_8_2_t_i_fu_1662_p2;
reg   [2:0] row_assign_8_2_t_i_reg_3561;
wire   [2:0] row_assign_8_3_t_i_fu_1666_p2;
reg   [2:0] row_assign_8_3_t_i_reg_3566;
wire   [2:0] row_assign_8_4_t_i_fu_1670_p2;
reg   [2:0] row_assign_8_4_t_i_reg_3571;
wire   [0:0] exitcond388_i_i_fu_1678_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_reg_pp0_iter2_exitcond388_i_i_reg_3576;
reg   [0:0] ap_reg_pp0_iter3_exitcond388_i_i_reg_3576;
reg   [0:0] ap_reg_pp0_iter4_exitcond388_i_i_reg_3576;
reg   [0:0] ap_reg_pp0_iter5_exitcond388_i_i_reg_3576;
reg   [0:0] ap_reg_pp0_iter6_exitcond388_i_i_reg_3576;
reg   [0:0] ap_reg_pp0_iter7_exitcond388_i_i_reg_3576;
reg   [0:0] ap_reg_pp0_iter8_exitcond388_i_i_reg_3576;
wire   [10:0] j_V_fu_1683_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] ImagLoc_x_fu_1705_p2;
reg   [11:0] ImagLoc_x_reg_3585;
reg   [0:0] tmp_67_reg_3591;
wire   [11:0] p_p2_i_i_i_fu_1733_p3;
reg   [11:0] p_p2_i_i_i_reg_3597;
wire   [0:0] or_cond_i_i_fu_1741_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter4_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter5_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter6_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter7_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter8_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter9_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter10_or_cond_i_i_reg_3603;
reg   [0:0] ap_reg_pp0_iter11_or_cond_i_i_reg_3603;
wire   [0:0] or_cond_i_i_i_fu_1758_p2;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607;
wire   [12:0] x_fu_1801_p3;
reg   [12:0] x_reg_3611;
wire   [2:0] tmp_69_fu_1809_p1;
reg   [2:0] tmp_69_reg_3616;
wire   [0:0] brmerge_i_fu_1813_p2;
reg   [0:0] brmerge_i_reg_3621;
reg   [0:0] ap_reg_pp0_iter2_brmerge_i_reg_3621;
reg   [10:0] k_buf_0_val_5_addr_reg_3630;
wire   [2:0] col_assign_1_t_i_fu_1830_p2;
reg   [2:0] col_assign_1_t_i_reg_3636;
reg   [10:0] k_buf_0_val_6_addr_reg_3645;
reg   [10:0] ap_reg_pp0_iter3_k_buf_0_val_6_addr_reg_3645;
reg   [10:0] k_buf_0_val_7_addr_reg_3651;
reg   [10:0] ap_reg_pp0_iter3_k_buf_0_val_7_addr_reg_3651;
reg   [10:0] k_buf_0_val_8_addr_reg_3657;
reg   [10:0] ap_reg_pp0_iter3_k_buf_0_val_8_addr_reg_3657;
reg   [10:0] k_buf_0_val_9_addr_reg_3663;
reg   [10:0] ap_reg_pp0_iter3_k_buf_0_val_9_addr_reg_3663;
wire   [7:0] k_buf_0_val_5_q0;
reg   [7:0] k_buf_0_val_5_load_reg_3669;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] col_buf_0_val_0_0_fu_1894_p3;
reg   [7:0] col_buf_0_val_0_0_reg_3674;
wire   [7:0] k_buf_0_val_6_q0;
reg   [7:0] k_buf_0_val_6_load_reg_3684;
wire   [7:0] col_buf_0_val_1_0_fu_1916_p3;
reg   [7:0] col_buf_0_val_1_0_reg_3689;
wire   [7:0] k_buf_0_val_7_q0;
reg   [7:0] k_buf_0_val_7_load_reg_3699;
wire   [7:0] col_buf_0_val_2_0_fu_1938_p3;
reg   [7:0] col_buf_0_val_2_0_reg_3704;
wire   [7:0] k_buf_0_val_8_q0;
reg   [7:0] k_buf_0_val_8_load_reg_3714;
wire   [7:0] col_buf_0_val_3_0_fu_1960_p3;
reg   [7:0] col_buf_0_val_3_0_reg_3719;
wire   [7:0] col_buf_0_val_4_0_fu_1982_p3;
reg   [7:0] col_buf_0_val_4_0_reg_3729;
wire   [7:0] src_kernel_win_0_va_20_fu_2092_p3;
reg   [7:0] src_kernel_win_0_va_20_reg_3739;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_20_reg_3739;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_20_reg_3739;
reg   [7:0] ap_reg_pp0_iter7_src_kernel_win_0_va_20_reg_3739;
wire   [7:0] src_kernel_win_0_va_21_fu_2108_p3;
reg   [7:0] src_kernel_win_0_va_21_reg_3745;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_21_reg_3745;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_21_reg_3745;
reg   [7:0] ap_reg_pp0_iter7_src_kernel_win_0_va_21_reg_3745;
wire   [7:0] src_kernel_win_0_va_22_fu_2124_p3;
reg   [7:0] src_kernel_win_0_va_22_reg_3750;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_22_reg_3750;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_22_reg_3750;
wire   [7:0] src_kernel_win_0_va_23_fu_2140_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_3756;
wire   [7:0] src_kernel_win_0_va_24_fu_2156_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_3761;
reg   [7:0] src_kernel_win_0_va_29_reg_3766;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_29_reg_3766;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_29_reg_3766;
reg   [7:0] ap_reg_pp0_iter7_src_kernel_win_0_va_29_reg_3766;
reg   [7:0] src_kernel_win_0_va_30_reg_3771;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_30_reg_3771;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_30_reg_3771;
reg   [7:0] ap_reg_pp0_iter7_src_kernel_win_0_va_30_reg_3771;
reg   [7:0] src_kernel_win_0_va_31_reg_3776;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_31_reg_3776;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_31_reg_3776;
reg   [7:0] ap_reg_pp0_iter7_src_kernel_win_0_va_31_reg_3776;
reg   [7:0] ap_reg_pp0_iter8_src_kernel_win_0_va_31_reg_3776;
reg   [7:0] src_kernel_win_0_va_42_reg_3781;
reg   [7:0] src_kernel_win_0_va_43_reg_3786;
reg   [7:0] src_kernel_win_0_va_55_reg_3816;
reg   [7:0] src_kernel_win_0_va_33_reg_3821;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_33_reg_3821;
reg   [7:0] src_kernel_win_0_va_34_reg_3826;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_34_reg_3826;
wire   [15:0] r_V_2_0_1_i_fu_2307_p2;
reg  signed [15:0] r_V_2_0_1_i_reg_3831;
wire   [15:0] r_V_2_0_2_i_fu_2315_p2;
reg  signed [15:0] r_V_2_0_2_i_reg_3836;
wire   [15:0] r_V_2_1_1_i_fu_2331_p2;
reg  signed [15:0] r_V_2_1_1_i_reg_3851;
wire   [15:0] r_V_2_1_4_i_fu_2339_p2;
reg  signed [15:0] r_V_2_1_4_i_reg_3856;
wire   [15:0] r_V_2_2_1_i_fu_2352_p2;
reg  signed [15:0] r_V_2_2_1_i_reg_3866;
wire  signed [16:0] grp_fu_2903_p3;
reg  signed [16:0] p_Val2_4_0_1_i_reg_3871;
reg    ap_enable_reg_pp0_iter6;
wire  signed [16:0] grp_fu_2910_p3;
reg  signed [16:0] tmp35_reg_3876;
wire  signed [16:0] grp_fu_2917_p3;
reg  signed [16:0] tmp37_reg_3881;
wire  signed [16:0] grp_fu_2924_p3;
reg  signed [16:0] tmp47_reg_3886;
reg  signed [16:0] ap_reg_pp0_iter7_tmp47_reg_3886;
wire  signed [16:0] grp_fu_2931_p3;
reg  signed [16:0] tmp48_reg_3891;
wire  signed [18:0] grp_fu_2938_p3;
reg  signed [18:0] tmp36_reg_3896;
reg    ap_enable_reg_pp0_iter7;
wire  signed [17:0] grp_fu_2945_p3;
reg  signed [17:0] tmp38_reg_3901;
wire   [15:0] r_V_2_2_2_i_fu_2434_p2;
reg   [15:0] r_V_2_2_2_i_reg_3906;
wire   [15:0] r_V_2_2_3_i_fu_2442_p2;
reg   [15:0] r_V_2_2_3_i_reg_3912;
wire   [15:0] r_V_2_2_4_i_fu_2450_p2;
reg   [15:0] r_V_2_2_4_i_reg_3917;
wire   [7:0] tmp_72_fu_2455_p1;
reg   [7:0] tmp_72_reg_3923;
reg   [7:0] ap_reg_pp0_iter8_tmp_72_reg_3923;
wire  signed [17:0] grp_fu_2952_p3;
reg  signed [17:0] tmp49_reg_3928;
wire   [7:0] tmp_73_fu_2489_p1;
reg   [7:0] tmp_73_reg_3933;
wire   [19:0] tmp39_fu_2493_p2;
reg   [19:0] tmp39_reg_3938;
wire   [16:0] tmp45_fu_2503_p2;
reg   [16:0] tmp45_reg_3943;
wire   [7:0] tmp_74_fu_2509_p1;
reg   [7:0] tmp_74_reg_3948;
wire   [18:0] tmp50_fu_2519_p2;
reg   [18:0] tmp50_reg_3953;
wire   [7:0] tmp_75_fu_2525_p1;
reg   [7:0] tmp_75_reg_3958;
reg   [7:0] ap_reg_pp0_iter9_tmp_75_reg_3958;
wire   [15:0] r_V_2_3_2_i_fu_2532_p2;
reg   [15:0] r_V_2_3_2_i_reg_3963;
wire   [7:0] tmp_77_fu_2537_p1;
reg   [7:0] tmp_77_reg_3968;
wire   [15:0] r_V_2_3_3_i_fu_2544_p2;
reg   [15:0] r_V_2_3_3_i_reg_3973;
wire   [7:0] tmp_78_fu_2549_p1;
reg   [7:0] tmp_78_reg_3978;
wire   [15:0] r_V_2_3_4_i_fu_2556_p2;
reg   [15:0] r_V_2_3_4_i_reg_3983;
reg   [15:0] ap_reg_pp0_iter9_r_V_2_3_4_i_reg_3983;
wire   [7:0] tmp_79_fu_2561_p1;
reg   [7:0] tmp_79_reg_3988;
wire   [15:0] r_V_2_4_2_i_fu_2569_p2;
reg   [15:0] r_V_2_4_2_i_reg_3993;
reg   [15:0] ap_reg_pp0_iter9_r_V_2_4_2_i_reg_3993;
wire   [7:0] tmp_82_fu_2574_p1;
reg   [7:0] tmp_82_reg_3998;
wire   [15:0] r_V_2_4_3_i_fu_2582_p2;
reg   [15:0] r_V_2_4_3_i_reg_4003;
reg   [15:0] ap_reg_pp0_iter9_r_V_2_4_3_i_reg_4003;
wire   [7:0] tmp_83_fu_2587_p1;
reg   [7:0] tmp_83_reg_4008;
wire   [15:0] r_V_2_4_4_i_fu_2594_p2;
reg   [15:0] r_V_2_4_4_i_reg_4013;
wire   [7:0] tmp_84_fu_2599_p1;
reg   [7:0] tmp_84_reg_4018;
reg   [7:0] src_kernel_win_0_va_46_reg_4023;
wire   [7:0] tmp_40_fu_2639_p2;
reg   [7:0] tmp_40_reg_4028;
wire   [19:0] p_Val2_4_3_i_fu_2644_p2;
reg   [19:0] p_Val2_4_3_i_reg_4033;
wire   [15:0] r_V_2_3_1_i_fu_2653_p2;
reg   [15:0] r_V_2_3_1_i_reg_4038;
wire   [7:0] tmp_76_fu_2658_p1;
reg   [7:0] tmp_76_reg_4043;
wire   [15:0] r_V_2_4_i_fu_2672_p2;
reg   [15:0] r_V_2_4_i_reg_4048;
wire   [7:0] tmp_80_fu_2677_p1;
reg   [7:0] tmp_80_reg_4053;
wire   [15:0] r_V_2_4_1_i_fu_2685_p2;
reg   [15:0] r_V_2_4_1_i_reg_4058;
wire   [7:0] tmp_81_fu_2690_p1;
reg   [7:0] tmp_81_reg_4063;
wire   [17:0] tmp57_fu_2707_p2;
reg   [17:0] tmp57_reg_4068;
wire   [7:0] tmp61_fu_2717_p2;
reg   [7:0] tmp61_reg_4073;
reg   [7:0] ap_reg_pp0_iter10_tmp61_reg_4073;
wire   [7:0] tmp65_fu_2726_p2;
reg   [7:0] tmp65_reg_4078;
wire   [20:0] tmp51_fu_2768_p2;
reg   [20:0] tmp51_reg_4083;
wire   [17:0] tmp53_fu_2784_p2;
reg   [17:0] tmp53_reg_4088;
wire   [18:0] tmp58_fu_2803_p2;
reg   [18:0] tmp58_reg_4093;
wire   [7:0] tmp59_fu_2809_p2;
reg   [7:0] tmp59_reg_4098;
wire   [7:0] tmp66_fu_2818_p2;
reg   [7:0] tmp66_reg_4103;
reg   [0:0] isneg_reg_4108;
wire   [7:0] p_Val2_1_fu_2852_p2;
reg   [7:0] p_Val2_1_reg_4114;
reg   [12:0] p_Result_3_i_i_i_reg_4119;
wire   [7:0] p_Val2_s_fu_2896_p3;
reg   [7:0] p_Val2_s_reg_4124;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_condition_pp0_exit_iter3_state8;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
wire   [10:0] k_buf_0_val_6_address0;
reg    k_buf_0_val_6_ce0;
reg    k_buf_0_val_6_ce1;
reg    k_buf_0_val_6_we1;
reg   [7:0] k_buf_0_val_6_d1;
wire   [10:0] k_buf_0_val_7_address0;
reg    k_buf_0_val_7_ce0;
reg    k_buf_0_val_7_ce1;
reg    k_buf_0_val_7_we1;
reg   [7:0] k_buf_0_val_7_d1;
wire   [10:0] k_buf_0_val_8_address0;
reg    k_buf_0_val_8_ce0;
reg    k_buf_0_val_8_ce1;
reg    k_buf_0_val_8_we1;
reg   [7:0] k_buf_0_val_8_d1;
wire   [10:0] k_buf_0_val_9_address0;
reg    k_buf_0_val_9_ce0;
wire   [7:0] k_buf_0_val_9_q0;
reg    k_buf_0_val_9_ce1;
reg    k_buf_0_val_9_we1;
reg   [7:0] k_buf_0_val_9_d1;
reg   [10:0] t_V_reg_939;
wire    ap_CS_fsm_state19;
wire   [63:0] tmp_58_i_fu_1821_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_534;
reg   [7:0] src_kernel_win_0_va_1_fu_538;
reg   [7:0] src_kernel_win_0_va_2_fu_542;
reg   [7:0] src_kernel_win_0_va_3_fu_546;
reg   [7:0] src_kernel_win_0_va_4_fu_550;
reg   [7:0] src_kernel_win_0_va_5_fu_554;
reg   [7:0] src_kernel_win_0_va_6_fu_558;
reg   [7:0] src_kernel_win_0_va_7_fu_562;
reg   [7:0] src_kernel_win_0_va_8_fu_566;
reg   [7:0] src_kernel_win_0_va_9_fu_570;
reg   [7:0] src_kernel_win_0_va_10_fu_574;
reg   [7:0] src_kernel_win_0_va_11_fu_578;
reg   [7:0] src_kernel_win_0_va_12_fu_582;
reg   [7:0] src_kernel_win_0_va_13_fu_586;
reg   [7:0] src_kernel_win_0_va_14_fu_590;
reg   [7:0] src_kernel_win_0_va_15_fu_594;
reg   [7:0] src_kernel_win_0_va_16_fu_598;
reg   [7:0] src_kernel_win_0_va_17_fu_602;
reg   [7:0] src_kernel_win_0_va_18_fu_606;
reg   [7:0] src_kernel_win_0_va_19_fu_610;
reg   [7:0] right_border_buf_0_s_fu_614;
reg   [7:0] right_border_buf_0_1_fu_618;
reg   [7:0] right_border_buf_0_2_fu_622;
reg   [7:0] right_border_buf_0_3_fu_626;
reg   [7:0] right_border_buf_0_4_fu_630;
reg   [7:0] right_border_buf_0_5_fu_634;
reg   [7:0] right_border_buf_0_6_fu_638;
reg   [7:0] right_border_buf_0_7_fu_642;
reg   [7:0] right_border_buf_0_8_fu_646;
reg   [7:0] right_border_buf_0_9_fu_650;
reg   [7:0] right_border_buf_0_10_fu_654;
reg   [7:0] right_border_buf_0_11_fu_658;
reg   [7:0] right_border_buf_0_12_fu_662;
reg   [7:0] right_border_buf_0_13_fu_666;
reg   [7:0] right_border_buf_0_14_fu_670;
wire   [10:0] tmp_10_fu_982_p1;
wire   [11:0] tmp_134_i_fu_1010_p3;
wire   [11:0] tmp_135_i_fu_1018_p2;
wire   [2:0] tmp_12_fu_998_p1;
wire   [1:0] tmp_22_fu_1034_p1;
wire   [11:0] tmp_9_i_fu_1146_p3;
wire   [11:0] tmp_10_i_fu_1154_p2;
wire   [2:0] tmp_1_fu_1038_p3;
wire   [2:0] tmp_15_fu_1006_p1;
wire   [11:0] t_V_cast_i_fu_1176_p1;
wire   [0:0] tmp_26_fu_1330_p3;
wire   [0:0] tmp_120_i_fu_1343_p2;
wire   [0:0] rev1_fu_1337_p2;
wire   [11:0] p_p2_i425_i_i_fu_1353_p3;
wire  signed [12:0] p_p2_i425_i_cast_cast_fu_1358_p1;
wire   [0:0] tmp_32_fu_1372_p3;
wire   [0:0] tmp_120_1_i_fu_1385_p2;
wire   [0:0] rev2_fu_1379_p2;
wire   [11:0] p_p2_i425_i_1_i_fu_1395_p3;
wire   [0:0] tmp_42_fu_1409_p3;
wire   [0:0] tmp_120_2_i_fu_1422_p2;
wire   [0:0] rev3_fu_1416_p2;
wire   [11:0] p_p2_i425_i_2_i_fu_1432_p3;
wire   [0:0] tmp_48_fu_1446_p3;
wire   [0:0] tmp_120_3_i_fu_1459_p2;
wire   [0:0] rev4_fu_1453_p2;
wire   [11:0] p_p2_i425_i_3_i_fu_1469_p3;
wire   [0:0] tmp_52_fu_1483_p3;
wire   [0:0] tmp_120_4_i_fu_1496_p2;
wire   [0:0] rev5_fu_1490_p2;
wire   [11:0] p_p2_i425_i_4_i_fu_1506_p3;
wire   [12:0] p_assign_8_i_fu_1367_p2;
wire   [0:0] tmp_132_i_fu_1362_p2;
wire   [2:0] tmp_57_fu_1523_p1;
wire   [2:0] tmp_58_fu_1527_p1;
wire   [0:0] or_cond_i424_i_i_fu_1347_p2;
wire   [2:0] tmp_56_fu_1520_p1;
wire   [2:0] tmp_59_fu_1531_p3;
wire   [2:0] tmp_38_fu_1405_p1;
wire   [0:0] tmp_132_1_i_fu_1400_p2;
wire   [2:0] tmp_2_fu_1547_p2;
wire   [0:0] or_cond_i424_i_1_i_fu_1389_p2;
wire   [2:0] tmp_62_fu_1560_p1;
wire   [2:0] tmp_4_fu_1552_p3;
wire   [2:0] tmp_45_fu_1442_p1;
wire   [0:0] tmp_132_2_i_fu_1437_p2;
wire   [2:0] tmp_6_fu_1571_p2;
wire   [0:0] or_cond_i424_i_2_i_fu_1426_p2;
wire   [2:0] tmp_63_fu_1584_p1;
wire   [2:0] tmp_11_fu_1576_p3;
wire   [2:0] tmp_51_fu_1479_p1;
wire   [0:0] tmp_132_3_i_fu_1474_p2;
wire   [2:0] tmp_23_fu_1595_p2;
wire   [0:0] or_cond_i424_i_3_i_fu_1463_p2;
wire   [2:0] tmp_64_fu_1608_p1;
wire   [2:0] tmp_24_fu_1600_p3;
wire   [2:0] tmp_54_fu_1516_p1;
wire   [0:0] tmp_132_4_i_fu_1511_p2;
wire   [2:0] tmp_29_fu_1619_p2;
wire   [0:0] or_cond_i424_i_4_i_fu_1500_p2;
wire   [2:0] tmp_65_fu_1632_p1;
wire   [2:0] tmp_30_fu_1624_p3;
wire   [2:0] tmp_55_fu_1648_p2;
wire   [8:0] tmp_66_fu_1689_p4;
wire   [11:0] t_V_1_cast_i_fu_1674_p1;
wire   [0:0] tmp_68_fu_1719_p3;
wire   [11:0] p_assign_1_fu_1727_p2;
wire   [0:0] icmp_fu_1699_p2;
wire   [0:0] tmp_6_i_fu_1754_p2;
wire   [0:0] rev6_fu_1749_p2;
wire  signed [12:0] p_p2_i_i_cast_cast39_s_fu_1764_p1;
wire  signed [12:0] ImagLoc_x_cast_cast_s_fu_1746_p1;
wire   [12:0] p_assign_2_fu_1771_p2;
wire   [0:0] tmp_6_i_not_fu_1784_p2;
wire   [0:0] tmp_8_i_fu_1767_p2;
wire   [0:0] sel_tmp1_fu_1790_p2;
wire   [0:0] sel_tmp2_fu_1795_p2;
wire   [12:0] sel_tmp_fu_1776_p3;
wire  signed [31:0] col_assign_cast_i_fu_1818_p1;
wire   [7:0] tmp_16_fu_1879_p7;
wire   [7:0] tmp_17_fu_1901_p7;
wire   [7:0] tmp_18_fu_1923_p7;
wire   [7:0] tmp_19_fu_1945_p7;
wire   [7:0] tmp_20_fu_1967_p7;
wire   [7:0] tmp_21_fu_2082_p7;
wire   [7:0] tmp_27_fu_2098_p7;
wire   [7:0] tmp_33_fu_2114_p7;
wire   [7:0] tmp_35_fu_2130_p7;
wire   [7:0] tmp_36_fu_2146_p7;
wire  signed [7:0] r_V_2_0_1_i_fu_2307_p0;
wire   [7:0] r_V_2_0_1_i_fu_2307_p1;
wire  signed [7:0] r_V_2_0_2_i_fu_2315_p0;
wire   [7:0] r_V_2_0_2_i_fu_2315_p1;
wire  signed [7:0] r_V_2_1_1_i_fu_2331_p0;
wire   [7:0] r_V_2_1_1_i_fu_2331_p1;
wire  signed [7:0] r_V_2_1_4_i_fu_2339_p0;
wire   [7:0] r_V_2_1_4_i_fu_2339_p1;
wire  signed [7:0] r_V_2_2_1_i_fu_2352_p0;
wire   [7:0] r_V_2_2_1_i_fu_2352_p1;
wire  signed [17:0] tmp38_cast_fu_2415_p1;
wire  signed [17:0] p_Val2_4_0_1_cast_s_fu_2412_p1;
wire  signed [17:0] p_Val2_4_0_3_i_fu_2418_p2;
wire  signed [7:0] r_V_2_2_2_i_fu_2434_p0;
wire   [7:0] r_V_2_2_2_i_fu_2434_p1;
wire  signed [7:0] r_V_2_2_3_i_fu_2442_p0;
wire   [7:0] r_V_2_2_3_i_fu_2442_p1;
wire  signed [7:0] r_V_2_2_4_i_fu_2450_p0;
wire   [7:0] r_V_2_2_4_i_fu_2450_p1;
wire  signed [18:0] tmp40_cast_fu_2468_p1;
(* use_dsp48 = "no" *) wire   [18:0] p_Val2_4_1_2_i_fu_2471_p2;
wire  signed [19:0] p_Val2_4_1_2_cast_s_fu_2476_p1;
wire  signed [19:0] tmp_140_2_3_cast_i_fu_2483_p1;
wire  signed [16:0] tmp_140_2_4_cast_i_c_fu_2486_p1;
wire  signed [16:0] tmp_140_2_2_cast_i_c_fu_2480_p1;
wire   [15:0] tmp_37_fu_2499_p2;
wire  signed [18:0] tmp53_cast_fu_2516_p1;
wire  signed [18:0] tmp52_cast_fu_2513_p1;
wire  signed [7:0] r_V_2_3_2_i_fu_2532_p0;
wire   [7:0] r_V_2_3_2_i_fu_2532_p1;
wire  signed [7:0] r_V_2_3_3_i_fu_2544_p0;
wire   [7:0] r_V_2_3_3_i_fu_2544_p1;
wire  signed [7:0] r_V_2_3_4_i_fu_2556_p0;
wire   [7:0] r_V_2_3_4_i_fu_2556_p1;
wire  signed [7:0] r_V_2_4_2_i_fu_2569_p0;
wire   [7:0] r_V_2_4_2_i_fu_2569_p1;
wire  signed [7:0] r_V_2_4_3_i_fu_2582_p0;
wire   [7:0] r_V_2_4_3_i_fu_2582_p1;
wire  signed [7:0] r_V_2_4_4_i_fu_2594_p0;
wire   [7:0] r_V_2_4_4_i_fu_2594_p1;
wire  signed [19:0] tmp50_cast_fu_2624_p1;
wire   [7:0] tmp_39_fu_2627_p2;
wire  signed [19:0] tmp51_cast_fu_2636_p1;
wire   [19:0] tmp46_fu_2631_p2;
wire  signed [7:0] r_V_2_3_1_i_fu_2653_p0;
wire   [7:0] r_V_2_3_1_i_fu_2653_p1;
wire  signed [7:0] r_V_2_4_i_fu_2672_p0;
wire   [7:0] r_V_2_4_i_fu_2672_p1;
wire  signed [7:0] r_V_2_4_1_i_fu_2685_p0;
wire   [7:0] r_V_2_4_1_i_fu_2685_p1;
wire  signed [16:0] tmp_140_3_2_i_cast_fu_2662_p1;
wire  signed [16:0] tmp_140_4_4_i_cast_fu_2694_p1;
wire   [16:0] tmp56_fu_2697_p2;
wire  signed [17:0] tmp69_cast_fu_2703_p1;
wire  signed [17:0] tmp_140_3_3_i_cast_fu_2665_p1;
wire   [7:0] tmp60_fu_2713_p2;
wire   [7:0] tmp64_fu_2722_p2;
wire  signed [20:0] p_Val2_4_3_cast_i_fu_2743_p1;
wire  signed [20:0] tmp_140_4_2_i_fu_2762_p1;
wire  signed [16:0] tmp_140_4_1_i_cast_fu_2759_p1;
wire  signed [16:0] tmp_140_4_i_cast_fu_2756_p1;
wire   [16:0] tmp52_fu_2774_p2;
wire  signed [17:0] tmp65_cast_fu_2780_p1;
wire  signed [17:0] tmp_140_4_3_i_cast_fu_2765_p1;
wire  signed [16:0] tmp_140_3_4_i_cast_fu_2753_p1;
wire  signed [16:0] tmp_140_3_1_i_cast_fu_2746_p1;
wire   [16:0] tmp55_fu_2790_p2;
wire  signed [18:0] tmp68_cast_fu_2800_p1;
wire  signed [18:0] tmp67_cast_fu_2796_p1;
wire   [7:0] tmp_41_fu_2749_p2;
wire   [7:0] tmp63_fu_2814_p2;
wire  signed [20:0] tmp64_cast_fu_2823_p1;
wire  signed [20:0] tmp66_cast_fu_2831_p1;
wire   [20:0] tmp54_fu_2826_p2;
wire   [20:0] p_Val2_2_fu_2834_p2;
wire   [7:0] tmp62_fu_2848_p2;
wire   [0:0] not_i_i_i_i_fu_2872_p2;
wire   [0:0] tmp_2_i_i_i_fu_2867_p2;
wire   [0:0] overflow_fu_2877_p2;
wire   [0:0] tmp_i_i_i_fu_2891_p2;
wire   [7:0] p_mux_i_i_cast_i_fu_2883_p3;
wire  signed [7:0] grp_fu_2903_p0;
wire   [7:0] grp_fu_2903_p1;
wire  signed [7:0] grp_fu_2910_p0;
wire   [7:0] grp_fu_2910_p1;
wire  signed [7:0] grp_fu_2917_p0;
wire   [7:0] grp_fu_2917_p1;
wire  signed [7:0] grp_fu_2924_p0;
wire   [7:0] grp_fu_2924_p1;
wire  signed [7:0] grp_fu_2931_p0;
wire   [7:0] grp_fu_2931_p1;
wire  signed [7:0] grp_fu_2938_p0;
wire   [7:0] grp_fu_2938_p1;
wire  signed [7:0] grp_fu_2945_p0;
wire   [7:0] grp_fu_2945_p1;
wire  signed [7:0] grp_fu_2952_p0;
wire   [7:0] grp_fu_2952_p1;
reg    grp_fu_2903_ce;
reg    grp_fu_2910_ce;
reg    grp_fu_2917_ce;
reg    grp_fu_2924_ce;
reg    grp_fu_2931_ce;
reg    grp_fu_2938_ce;
reg    grp_fu_2945_ce;
reg    grp_fu_2952_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_2903_p10;
wire   [15:0] grp_fu_2910_p10;
wire   [15:0] grp_fu_2917_p10;
wire   [15:0] grp_fu_2924_p10;
wire   [15:0] grp_fu_2931_p10;
wire   [15:0] grp_fu_2938_p10;
wire   [15:0] grp_fu_2945_p10;
wire   [15:0] grp_fu_2952_p10;
wire   [15:0] r_V_2_0_1_i_fu_2307_p10;
wire   [15:0] r_V_2_0_2_i_fu_2315_p10;
wire   [15:0] r_V_2_1_1_i_fu_2331_p10;
wire   [15:0] r_V_2_1_4_i_fu_2339_p10;
wire   [15:0] r_V_2_2_1_i_fu_2352_p10;
wire   [15:0] r_V_2_2_2_i_fu_2434_p10;
wire   [15:0] r_V_2_2_3_i_fu_2442_p10;
wire   [15:0] r_V_2_2_4_i_fu_2450_p10;
wire   [15:0] r_V_2_3_1_i_fu_2653_p10;
wire   [15:0] r_V_2_3_2_i_fu_2532_p10;
wire   [15:0] r_V_2_3_3_i_fu_2544_p10;
wire   [15:0] r_V_2_3_4_i_fu_2556_p10;
wire   [15:0] r_V_2_4_1_i_fu_2685_p10;
wire   [15:0] r_V_2_4_2_i_fu_2569_p10;
wire   [15:0] r_V_2_4_3_i_fu_2582_p10;
wire   [15:0] r_V_2_4_4_i_fu_2594_p10;
wire   [15:0] r_V_2_4_i_fu_2672_p10;
reg    ap_condition_2388;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_3630),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(reg_961)
);

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_6_address0),
    .ce0(k_buf_0_val_6_ce0),
    .q0(k_buf_0_val_6_q0),
    .address1(ap_reg_pp0_iter3_k_buf_0_val_6_addr_reg_3645),
    .ce1(k_buf_0_val_6_ce1),
    .we1(k_buf_0_val_6_we1),
    .d1(k_buf_0_val_6_d1)
);

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_7_address0),
    .ce0(k_buf_0_val_7_ce0),
    .q0(k_buf_0_val_7_q0),
    .address1(ap_reg_pp0_iter3_k_buf_0_val_7_addr_reg_3651),
    .ce1(k_buf_0_val_7_ce1),
    .we1(k_buf_0_val_7_we1),
    .d1(k_buf_0_val_7_d1)
);

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_8_address0),
    .ce0(k_buf_0_val_8_ce0),
    .q0(k_buf_0_val_8_q0),
    .address1(ap_reg_pp0_iter3_k_buf_0_val_8_addr_reg_3657),
    .ce1(k_buf_0_val_8_ce1),
    .we1(k_buf_0_val_8_we1),
    .d1(k_buf_0_val_8_d1)
);

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_9_address0),
    .ce0(k_buf_0_val_9_ce0),
    .q0(k_buf_0_val_9_q0),
    .address1(ap_reg_pp0_iter3_k_buf_0_val_9_addr_reg_3663),
    .ce1(k_buf_0_val_9_ce1),
    .we1(k_buf_0_val_9_we1),
    .d1(k_buf_0_val_9_d1)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U36(
    .din0(right_border_buf_0_s_fu_614),
    .din1(right_border_buf_0_1_fu_618),
    .din2(right_border_buf_0_2_fu_622),
    .din3(8'd0),
    .din4(8'd0),
    .din5(col_assign_1_t_i_reg_3636),
    .dout(tmp_16_fu_1879_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U37(
    .din0(right_border_buf_0_5_fu_634),
    .din1(right_border_buf_0_6_fu_638),
    .din2(right_border_buf_0_7_fu_642),
    .din3(8'd0),
    .din4(8'd0),
    .din5(col_assign_1_t_i_reg_3636),
    .dout(tmp_17_fu_1901_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U38(
    .din0(right_border_buf_0_10_fu_654),
    .din1(right_border_buf_0_11_fu_658),
    .din2(right_border_buf_0_12_fu_662),
    .din3(8'd0),
    .din4(8'd0),
    .din5(col_assign_1_t_i_reg_3636),
    .dout(tmp_18_fu_1923_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U39(
    .din0(right_border_buf_0_14_fu_670),
    .din1(right_border_buf_0_13_fu_666),
    .din2(right_border_buf_0_9_fu_650),
    .din3(8'd0),
    .din4(8'd0),
    .din5(col_assign_1_t_i_reg_3636),
    .dout(tmp_19_fu_1945_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U40(
    .din0(right_border_buf_0_8_fu_646),
    .din1(right_border_buf_0_4_fu_630),
    .din2(right_border_buf_0_3_fu_626),
    .din3(8'd0),
    .din4(8'd0),
    .din5(col_assign_1_t_i_reg_3636),
    .dout(tmp_20_fu_1967_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U41(
    .din0(col_buf_0_val_0_0_reg_3674),
    .din1(col_buf_0_val_1_0_reg_3689),
    .din2(col_buf_0_val_2_0_reg_3704),
    .din3(col_buf_0_val_3_0_reg_3719),
    .din4(col_buf_0_val_4_0_reg_3729),
    .din5(tmp_61_reg_3551),
    .dout(tmp_21_fu_2082_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U42(
    .din0(col_buf_0_val_0_0_reg_3674),
    .din1(col_buf_0_val_1_0_reg_3689),
    .din2(col_buf_0_val_2_0_reg_3704),
    .din3(col_buf_0_val_3_0_reg_3719),
    .din4(col_buf_0_val_4_0_reg_3729),
    .din5(row_assign_8_1_t_i_reg_3556),
    .dout(tmp_27_fu_2098_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U43(
    .din0(col_buf_0_val_0_0_reg_3674),
    .din1(col_buf_0_val_1_0_reg_3689),
    .din2(col_buf_0_val_2_0_reg_3704),
    .din3(col_buf_0_val_3_0_reg_3719),
    .din4(col_buf_0_val_4_0_reg_3729),
    .din5(row_assign_8_2_t_i_reg_3561),
    .dout(tmp_33_fu_2114_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U44(
    .din0(col_buf_0_val_0_0_reg_3674),
    .din1(col_buf_0_val_1_0_reg_3689),
    .din2(col_buf_0_val_2_0_reg_3704),
    .din3(col_buf_0_val_3_0_reg_3719),
    .din4(col_buf_0_val_4_0_reg_3729),
    .din5(row_assign_8_3_t_i_reg_3566),
    .dout(tmp_35_fu_2130_p7)
);

filter2D_hls_5_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
filter2D_hls_5_muhbi_U45(
    .din0(col_buf_0_val_0_0_reg_3674),
    .din1(col_buf_0_val_1_0_reg_3689),
    .din2(col_buf_0_val_2_0_reg_3704),
    .din3(col_buf_0_val_3_0_reg_3719),
    .din4(col_buf_0_val_4_0_reg_3729),
    .din5(row_assign_8_4_t_i_reg_3571),
    .dout(tmp_36_fu_2146_p7)
);

filter2D_hls_5_maibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_5_maibs_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2903_p0),
    .din1(grp_fu_2903_p1),
    .din2(r_V_2_0_1_i_reg_3831),
    .ce(grp_fu_2903_ce),
    .dout(grp_fu_2903_p3)
);

filter2D_hls_5_maibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_5_maibs_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2910_p0),
    .din1(grp_fu_2910_p1),
    .din2(r_V_2_0_2_i_reg_3836),
    .ce(grp_fu_2910_ce),
    .dout(grp_fu_2910_p3)
);

filter2D_hls_5_maibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_5_maibs_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2917_p0),
    .din1(grp_fu_2917_p1),
    .din2(r_V_2_1_1_i_reg_3851),
    .ce(grp_fu_2917_ce),
    .dout(grp_fu_2917_p3)
);

filter2D_hls_5_maibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_5_maibs_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2924_p0),
    .din1(grp_fu_2924_p1),
    .din2(r_V_2_2_1_i_reg_3866),
    .ce(grp_fu_2924_ce),
    .dout(grp_fu_2924_p3)
);

filter2D_hls_5_maibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_5_maibs_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2931_p0),
    .din1(grp_fu_2931_p1),
    .din2(r_V_2_1_4_i_reg_3856),
    .ce(grp_fu_2931_ce),
    .dout(grp_fu_2931_p3)
);

filter2D_hls_5_majbC #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
filter2D_hls_5_majbC_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2938_p0),
    .din1(grp_fu_2938_p1),
    .din2(p_Val2_4_0_3_i_fu_2418_p2),
    .ce(grp_fu_2938_ce),
    .dout(grp_fu_2938_p3)
);

filter2D_hls_5_makbM #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
filter2D_hls_5_makbM_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2945_p0),
    .din1(grp_fu_2945_p1),
    .din2(tmp37_reg_3881),
    .ce(grp_fu_2945_ce),
    .dout(grp_fu_2945_p3)
);

filter2D_hls_5_makbM #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
filter2D_hls_5_makbM_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2952_p0),
    .din1(grp_fu_2952_p1),
    .din2(tmp48_reg_3891),
    .ce(grp_fu_2952_ce),
    .dout(grp_fu_2952_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond389_i_i_fu_1180_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond388_i_i_fu_1678_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state8)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond388_i_i_fu_1678_p2 == 1'd0))) begin
        t_V_1_reg_950 <= j_V_fu_1683_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_1_reg_950 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        t_V_reg_939 <= i_V_reg_3391;
    end else if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_939 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond388_i_i_fu_1678_p2 == 1'd0))) begin
        ImagLoc_x_reg_3585 <= ImagLoc_x_fu_1705_p2;
        or_cond_i_i_reg_3603 <= or_cond_i_i_fu_1741_p2;
        p_p2_i_i_i_reg_3597 <= p_p2_i_i_i_fu_1733_p3;
        tmp_67_reg_3591 <= ImagLoc_x_fu_1705_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_i_reg_3250 <= OP2_V_0_1_i_fu_1050_p1;
        OP2_V_0_2_i_reg_3255 <= OP2_V_0_2_i_fu_1054_p1;
        OP2_V_0_3_i_reg_3260 <= OP2_V_0_3_i_fu_1058_p1;
        OP2_V_0_4_i_reg_3265 <= OP2_V_0_4_i_fu_1062_p1;
        OP2_V_0_i_reg_3245 <= OP2_V_0_i_fu_1046_p1;
        OP2_V_1_1_i_reg_3275 <= OP2_V_1_1_i_fu_1070_p1;
        OP2_V_1_2_i_reg_3280 <= OP2_V_1_2_i_fu_1074_p1;
        OP2_V_1_3_i_reg_3285 <= OP2_V_1_3_i_fu_1078_p1;
        OP2_V_1_4_i_reg_3290 <= OP2_V_1_4_i_fu_1082_p1;
        OP2_V_1_i_reg_3270 <= OP2_V_1_i_fu_1066_p1;
        OP2_V_2_1_i_reg_3300 <= OP2_V_2_1_i_fu_1090_p1;
        OP2_V_2_2_i_reg_3305 <= OP2_V_2_2_i_fu_1094_p1;
        OP2_V_2_3_i_reg_3310 <= OP2_V_2_3_i_fu_1098_p1;
        OP2_V_2_4_i_reg_3315 <= OP2_V_2_4_i_fu_1102_p1;
        OP2_V_2_i_reg_3295 <= OP2_V_2_i_fu_1086_p1;
        OP2_V_3_1_i_reg_3325 <= OP2_V_3_1_i_fu_1110_p1;
        OP2_V_3_2_i_reg_3330 <= OP2_V_3_2_i_fu_1114_p1;
        OP2_V_3_3_i_reg_3335 <= OP2_V_3_3_i_fu_1118_p1;
        OP2_V_3_4_i_reg_3340 <= OP2_V_3_4_i_fu_1122_p1;
        OP2_V_3_i_reg_3320 <= OP2_V_3_i_fu_1106_p1;
        OP2_V_4_1_i_reg_3350 <= OP2_V_4_1_i_fu_1130_p1;
        OP2_V_4_2_i_reg_3355 <= OP2_V_4_2_i_fu_1134_p1;
        OP2_V_4_3_i_reg_3360 <= OP2_V_4_3_i_fu_1138_p1;
        OP2_V_4_4_i_reg_3365 <= OP2_V_4_4_i_fu_1142_p1;
        OP2_V_4_i_reg_3345 <= OP2_V_4_i_fu_1126_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter9_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter10_tmp61_reg_4073 <= tmp61_reg_4073;
        ap_reg_pp0_iter11_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter10_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter12_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter11_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter2_brmerge_i_reg_3621 <= brmerge_i_reg_3621;
        ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 <= ap_reg_pp0_iter1_exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607 <= or_cond_i_i_i_reg_3607;
        ap_reg_pp0_iter2_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter1_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter3_exitcond388_i_i_reg_3576 <= ap_reg_pp0_iter2_exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter3_k_buf_0_val_6_addr_reg_3645 <= k_buf_0_val_6_addr_reg_3645;
        ap_reg_pp0_iter3_k_buf_0_val_7_addr_reg_3651 <= k_buf_0_val_7_addr_reg_3651;
        ap_reg_pp0_iter3_k_buf_0_val_8_addr_reg_3657 <= k_buf_0_val_8_addr_reg_3657;
        ap_reg_pp0_iter3_k_buf_0_val_9_addr_reg_3663 <= k_buf_0_val_9_addr_reg_3663;
        ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 <= ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607;
        ap_reg_pp0_iter3_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter2_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter3_reg_961 <= reg_961;
        ap_reg_pp0_iter4_exitcond388_i_i_reg_3576 <= ap_reg_pp0_iter3_exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter4_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter3_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter5_exitcond388_i_i_reg_3576 <= ap_reg_pp0_iter4_exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter5_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter4_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter5_src_kernel_win_0_va_20_reg_3739 <= src_kernel_win_0_va_20_reg_3739;
        ap_reg_pp0_iter5_src_kernel_win_0_va_21_reg_3745 <= src_kernel_win_0_va_21_reg_3745;
        ap_reg_pp0_iter5_src_kernel_win_0_va_22_reg_3750 <= src_kernel_win_0_va_22_reg_3750;
        ap_reg_pp0_iter5_src_kernel_win_0_va_29_reg_3766 <= src_kernel_win_0_va_29_reg_3766;
        ap_reg_pp0_iter5_src_kernel_win_0_va_30_reg_3771 <= src_kernel_win_0_va_30_reg_3771;
        ap_reg_pp0_iter5_src_kernel_win_0_va_31_reg_3776 <= src_kernel_win_0_va_31_reg_3776;
        ap_reg_pp0_iter6_exitcond388_i_i_reg_3576 <= ap_reg_pp0_iter5_exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter6_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter5_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter6_src_kernel_win_0_va_20_reg_3739 <= ap_reg_pp0_iter5_src_kernel_win_0_va_20_reg_3739;
        ap_reg_pp0_iter6_src_kernel_win_0_va_21_reg_3745 <= ap_reg_pp0_iter5_src_kernel_win_0_va_21_reg_3745;
        ap_reg_pp0_iter6_src_kernel_win_0_va_22_reg_3750 <= ap_reg_pp0_iter5_src_kernel_win_0_va_22_reg_3750;
        ap_reg_pp0_iter6_src_kernel_win_0_va_29_reg_3766 <= ap_reg_pp0_iter5_src_kernel_win_0_va_29_reg_3766;
        ap_reg_pp0_iter6_src_kernel_win_0_va_30_reg_3771 <= ap_reg_pp0_iter5_src_kernel_win_0_va_30_reg_3771;
        ap_reg_pp0_iter6_src_kernel_win_0_va_31_reg_3776 <= ap_reg_pp0_iter5_src_kernel_win_0_va_31_reg_3776;
        ap_reg_pp0_iter6_src_kernel_win_0_va_33_reg_3821 <= src_kernel_win_0_va_33_reg_3821;
        ap_reg_pp0_iter6_src_kernel_win_0_va_34_reg_3826 <= src_kernel_win_0_va_34_reg_3826;
        ap_reg_pp0_iter7_exitcond388_i_i_reg_3576 <= ap_reg_pp0_iter6_exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter7_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter6_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter7_src_kernel_win_0_va_20_reg_3739 <= ap_reg_pp0_iter6_src_kernel_win_0_va_20_reg_3739;
        ap_reg_pp0_iter7_src_kernel_win_0_va_21_reg_3745 <= ap_reg_pp0_iter6_src_kernel_win_0_va_21_reg_3745;
        ap_reg_pp0_iter7_src_kernel_win_0_va_29_reg_3766 <= ap_reg_pp0_iter6_src_kernel_win_0_va_29_reg_3766;
        ap_reg_pp0_iter7_src_kernel_win_0_va_30_reg_3771 <= ap_reg_pp0_iter6_src_kernel_win_0_va_30_reg_3771;
        ap_reg_pp0_iter7_src_kernel_win_0_va_31_reg_3776 <= ap_reg_pp0_iter6_src_kernel_win_0_va_31_reg_3776;
        ap_reg_pp0_iter7_tmp47_reg_3886 <= tmp47_reg_3886;
        ap_reg_pp0_iter8_exitcond388_i_i_reg_3576 <= ap_reg_pp0_iter7_exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter8_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter7_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter8_src_kernel_win_0_va_31_reg_3776 <= ap_reg_pp0_iter7_src_kernel_win_0_va_31_reg_3776;
        ap_reg_pp0_iter8_tmp_72_reg_3923 <= tmp_72_reg_3923;
        ap_reg_pp0_iter9_or_cond_i_i_reg_3603 <= ap_reg_pp0_iter8_or_cond_i_i_reg_3603;
        ap_reg_pp0_iter9_r_V_2_3_4_i_reg_3983 <= r_V_2_3_4_i_reg_3983;
        ap_reg_pp0_iter9_r_V_2_4_2_i_reg_3993 <= r_V_2_4_2_i_reg_3993;
        ap_reg_pp0_iter9_r_V_2_4_3_i_reg_4003 <= r_V_2_4_3_i_reg_4003;
        ap_reg_pp0_iter9_tmp_75_reg_3958 <= tmp_75_reg_3958;
        src_kernel_win_0_va_20_reg_3739 <= src_kernel_win_0_va_20_fu_2092_p3;
        src_kernel_win_0_va_21_reg_3745 <= src_kernel_win_0_va_21_fu_2108_p3;
        src_kernel_win_0_va_22_reg_3750 <= src_kernel_win_0_va_22_fu_2124_p3;
        src_kernel_win_0_va_23_reg_3756 <= src_kernel_win_0_va_23_fu_2140_p3;
        src_kernel_win_0_va_24_reg_3761 <= src_kernel_win_0_va_24_fu_2156_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_exitcond388_i_i_reg_3576 <= exitcond388_i_i_reg_3576;
        ap_reg_pp0_iter1_or_cond_i_i_reg_3603 <= or_cond_i_i_reg_3603;
        exitcond388_i_i_reg_3576 <= exitcond388_i_i_fu_1678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond388_i_i_reg_3576 == 1'd0))) begin
        brmerge_i_reg_3621 <= brmerge_i_fu_1813_p2;
        or_cond_i_i_i_reg_3607 <= or_cond_i_i_i_fu_1758_p2;
        tmp_69_reg_3616 <= tmp_69_fu_1809_p1;
        x_reg_3611 <= x_fu_1801_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_exitcond388_i_i_reg_3576 == 1'd0))) begin
        col_assign_1_t_i_reg_3636 <= col_assign_1_t_i_fu_1830_p2;
        k_buf_0_val_5_addr_reg_3630 <= tmp_58_i_fu_1821_p1;
        k_buf_0_val_6_addr_reg_3645 <= tmp_58_i_fu_1821_p1;
        k_buf_0_val_7_addr_reg_3651 <= tmp_58_i_fu_1821_p1;
        k_buf_0_val_8_addr_reg_3657 <= tmp_58_i_fu_1821_p1;
        k_buf_0_val_9_addr_reg_3663 <= tmp_58_i_fu_1821_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 == 1'd0))) begin
        col_buf_0_val_0_0_reg_3674 <= col_buf_0_val_0_0_fu_1894_p3;
        col_buf_0_val_1_0_reg_3689 <= col_buf_0_val_1_0_fu_1916_p3;
        col_buf_0_val_2_0_reg_3704 <= col_buf_0_val_2_0_fu_1938_p3;
        col_buf_0_val_3_0_reg_3719 <= col_buf_0_val_3_0_fu_1960_p3;
        col_buf_0_val_4_0_reg_3729 <= col_buf_0_val_4_0_fu_1982_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_3391 <= i_V_fu_1185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter10_or_cond_i_i_reg_3603 == 1'd1))) begin
        isneg_reg_4108 <= p_Val2_2_fu_2834_p2[32'd20];
        p_Result_3_i_i_i_reg_4119 <= {{p_Val2_2_fu_2834_p2[20:8]}};
        p_Val2_1_reg_4114 <= p_Val2_1_fu_2852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 == 1'd0))) begin
        k_buf_0_val_5_load_reg_3669 <= k_buf_0_val_5_q0;
        k_buf_0_val_6_load_reg_3684 <= k_buf_0_val_6_q0;
        k_buf_0_val_7_load_reg_3699 <= k_buf_0_val_7_q0;
        k_buf_0_val_8_load_reg_3714 <= k_buf_0_val_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (ap_reg_pp0_iter5_or_cond_i_i_reg_3603 == 1'd1))) begin
        p_Val2_4_0_1_i_reg_3871 <= grp_fu_2903_p3;
        tmp35_reg_3876 <= grp_fu_2910_p3;
        tmp37_reg_3881 <= grp_fu_2917_p3;
        tmp47_reg_3886 <= grp_fu_2924_p3;
        tmp48_reg_3891 <= grp_fu_2931_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter8_or_cond_i_i_reg_3603 == 1'd1))) begin
        p_Val2_4_3_i_reg_4033 <= p_Val2_4_3_i_fu_2644_p2;
        r_V_2_3_1_i_reg_4038 <= r_V_2_3_1_i_fu_2653_p2;
        r_V_2_4_1_i_reg_4058 <= r_V_2_4_1_i_fu_2685_p2;
        r_V_2_4_i_reg_4048 <= r_V_2_4_i_fu_2672_p2;
        tmp57_reg_4068 <= tmp57_fu_2707_p2;
        tmp61_reg_4073 <= tmp61_fu_2717_p2;
        tmp65_reg_4078 <= tmp65_fu_2726_p2;
        tmp_40_reg_4028 <= tmp_40_fu_2639_p2;
        tmp_76_reg_4043 <= tmp_76_fu_2658_p1;
        tmp_80_reg_4053 <= tmp_80_fu_2677_p1;
        tmp_81_reg_4063 <= tmp_81_fu_2690_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter11_or_cond_i_i_reg_3603 == 1'd1))) begin
        p_Val2_s_reg_4124 <= p_Val2_s_fu_2896_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond389_i_i_fu_1180_p2 == 1'd0))) begin
        p_assign_6_1_i_reg_3449 <= p_assign_6_1_i_fu_1250_p2;
        p_assign_6_2_i_reg_3467 <= p_assign_6_2_i_fu_1270_p2;
        p_assign_6_3_i_reg_3485 <= p_assign_6_3_i_fu_1290_p2;
        p_assign_6_4_i_reg_3503 <= p_assign_6_4_i_fu_1310_p2;
        p_assign_7_1_i_reg_3462 <= p_assign_7_1_i_fu_1264_p2;
        p_assign_7_2_i_reg_3480 <= p_assign_7_2_i_fu_1284_p2;
        p_assign_7_3_i_reg_3498 <= p_assign_7_3_i_fu_1304_p2;
        p_assign_7_4_i_reg_3516 <= p_assign_7_4_i_fu_1324_p2;
        p_assign_7_i_reg_3444 <= p_assign_7_i_fu_1244_p2;
        tmp_115_i_reg_3422 <= tmp_115_i_fu_1225_p2;
        tmp_118_i_reg_3431 <= tmp_118_i_fu_1230_p2;
        tmp_17_i_reg_3405 <= tmp_17_i_fu_1201_p2;
        tmp_28_reg_3439 <= tmp_118_i_fu_1230_p2[32'd11];
        tmp_2_i_reg_3396 <= tmp_2_i_fu_1191_p2;
        tmp_34_reg_3457 <= p_assign_6_1_i_fu_1250_p2[32'd11];
        tmp_43_reg_3475 <= p_assign_6_2_i_fu_1270_p2[32'd11];
        tmp_50_reg_3493 <= p_assign_6_3_i_fu_1290_p2[32'd11];
        tmp_53_reg_3511 <= p_assign_6_4_i_fu_1310_p2[32'd11];
        tmp_93_1_i_reg_3414 <= tmp_93_1_i_fu_1213_p2;
        tmp_93_2_i_reg_3418 <= tmp_93_2_i_fu_1219_p2;
        tmp_93_i_reg_3410 <= tmp_93_i_fu_1207_p2;
        ult_reg_3400 <= ult_fu_1196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter4_or_cond_i_i_reg_3603 == 1'd1))) begin
        r_V_2_0_1_i_reg_3831 <= r_V_2_0_1_i_fu_2307_p2;
        r_V_2_0_2_i_reg_3836 <= r_V_2_0_2_i_fu_2315_p2;
        r_V_2_1_1_i_reg_3851 <= r_V_2_1_1_i_fu_2331_p2;
        r_V_2_1_4_i_reg_3856 <= r_V_2_1_4_i_fu_2339_p2;
        r_V_2_2_1_i_reg_3866 <= r_V_2_2_1_i_fu_2352_p2;
        src_kernel_win_0_va_33_reg_3821 <= src_kernel_win_0_va_8_fu_566;
        src_kernel_win_0_va_34_reg_3826 <= src_kernel_win_0_va_9_fu_570;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter6_or_cond_i_i_reg_3603 == 1'd1))) begin
        r_V_2_2_2_i_reg_3906 <= r_V_2_2_2_i_fu_2434_p2;
        r_V_2_2_3_i_reg_3912 <= r_V_2_2_3_i_fu_2442_p2;
        r_V_2_2_4_i_reg_3917 <= r_V_2_2_4_i_fu_2450_p2;
        tmp_72_reg_3923 <= tmp_72_fu_2455_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter7_or_cond_i_i_reg_3603 == 1'd1))) begin
        r_V_2_3_2_i_reg_3963 <= r_V_2_3_2_i_fu_2532_p2;
        r_V_2_3_3_i_reg_3973 <= r_V_2_3_3_i_fu_2544_p2;
        r_V_2_3_4_i_reg_3983 <= r_V_2_3_4_i_fu_2556_p2;
        r_V_2_4_2_i_reg_3993 <= r_V_2_4_2_i_fu_2569_p2;
        r_V_2_4_3_i_reg_4003 <= r_V_2_4_3_i_fu_2582_p2;
        r_V_2_4_4_i_reg_4013 <= r_V_2_4_4_i_fu_2594_p2;
        tmp39_reg_3938 <= tmp39_fu_2493_p2;
        tmp45_reg_3943 <= tmp45_fu_2503_p2;
        tmp50_reg_3953 <= tmp50_fu_2519_p2;
        tmp_73_reg_3933 <= tmp_73_fu_2489_p1;
        tmp_74_reg_3948 <= tmp_74_fu_2509_p1;
        tmp_75_reg_3958 <= tmp_75_fu_2525_p1;
        tmp_77_reg_3968 <= tmp_77_fu_2537_p1;
        tmp_78_reg_3978 <= tmp_78_fu_2549_p1;
        tmp_79_reg_3988 <= tmp_79_fu_2561_p1;
        tmp_82_reg_3998 <= tmp_82_fu_2574_p1;
        tmp_83_reg_4008 <= tmp_83_fu_2587_p1;
        tmp_84_reg_4018 <= tmp_84_fu_2599_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op313_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op312_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        reg_961 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        rev_reg_3546 <= rev_fu_1643_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 == 1'd0))) begin
        right_border_buf_0_10_fu_654 <= col_buf_0_val_2_0_fu_1938_p3;
        right_border_buf_0_11_fu_658 <= right_border_buf_0_10_fu_654;
        right_border_buf_0_12_fu_662 <= right_border_buf_0_11_fu_658;
        right_border_buf_0_13_fu_666 <= right_border_buf_0_14_fu_670;
        right_border_buf_0_14_fu_670 <= col_buf_0_val_3_0_fu_1960_p3;
        right_border_buf_0_1_fu_618 <= right_border_buf_0_s_fu_614;
        right_border_buf_0_2_fu_622 <= right_border_buf_0_1_fu_618;
        right_border_buf_0_3_fu_626 <= right_border_buf_0_4_fu_630;
        right_border_buf_0_4_fu_630 <= right_border_buf_0_8_fu_646;
        right_border_buf_0_5_fu_634 <= col_buf_0_val_1_0_fu_1916_p3;
        right_border_buf_0_6_fu_638 <= right_border_buf_0_5_fu_634;
        right_border_buf_0_7_fu_642 <= right_border_buf_0_6_fu_638;
        right_border_buf_0_8_fu_646 <= col_buf_0_val_4_0_fu_1982_p3;
        right_border_buf_0_9_fu_650 <= right_border_buf_0_13_fu_666;
        right_border_buf_0_s_fu_614 <= col_buf_0_val_0_0_fu_1894_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_115_i_reg_3422 == 1'd1))) begin
        row_assign_8_1_t_i_reg_3556 <= row_assign_8_1_t_i_fu_1658_p2;
        row_assign_8_2_t_i_reg_3561 <= row_assign_8_2_t_i_fu_1662_p2;
        row_assign_8_3_t_i_reg_3566 <= row_assign_8_3_t_i_fu_1666_p2;
        row_assign_8_4_t_i_reg_3571 <= row_assign_8_4_t_i_fu_1670_p2;
        tmp_61_reg_3551 <= tmp_61_fu_1653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_reg_pp0_iter4_exitcond388_i_i_reg_3576 == 1'd0))) begin
        src_kernel_win_0_va_10_fu_574 <= src_kernel_win_0_va_9_fu_570;
        src_kernel_win_0_va_11_fu_578 <= src_kernel_win_0_va_10_fu_574;
        src_kernel_win_0_va_14_fu_590 <= src_kernel_win_0_va_55_reg_3816;
        src_kernel_win_0_va_15_fu_594 <= src_kernel_win_0_va_14_fu_590;
        src_kernel_win_0_va_8_fu_566 <= src_kernel_win_0_va_22_reg_3750;
        src_kernel_win_0_va_9_fu_570 <= src_kernel_win_0_va_8_fu_566;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_exitcond388_i_i_reg_3576 == 1'd0))) begin
        src_kernel_win_0_va_12_fu_582 <= src_kernel_win_0_va_23_fu_2140_p3;
        src_kernel_win_0_va_13_fu_586 <= src_kernel_win_0_va_12_fu_582;
        src_kernel_win_0_va_16_fu_598 <= src_kernel_win_0_va_24_fu_2156_p3;
        src_kernel_win_0_va_17_fu_602 <= src_kernel_win_0_va_16_fu_598;
        src_kernel_win_0_va_18_fu_606 <= src_kernel_win_0_va_17_fu_602;
        src_kernel_win_0_va_19_fu_610 <= src_kernel_win_0_va_18_fu_606;
        src_kernel_win_0_va_4_fu_550 <= src_kernel_win_0_va_21_fu_2108_p3;
        src_kernel_win_0_va_5_fu_554 <= src_kernel_win_0_va_4_fu_550;
        src_kernel_win_0_va_6_fu_558 <= src_kernel_win_0_va_5_fu_554;
        src_kernel_win_0_va_7_fu_562 <= src_kernel_win_0_va_6_fu_558;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_reg_pp0_iter7_exitcond388_i_i_reg_3576 == 1'd0))) begin
        src_kernel_win_0_va_1_fu_538 <= src_kernel_win_0_va_fu_534;
        src_kernel_win_0_va_fu_534 <= ap_reg_pp0_iter7_src_kernel_win_0_va_20_reg_3739;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter3_or_cond_i_i_reg_3603 == 1'd1))) begin
        src_kernel_win_0_va_29_reg_3766 <= src_kernel_win_0_va_4_fu_550;
        src_kernel_win_0_va_30_reg_3771 <= src_kernel_win_0_va_5_fu_554;
        src_kernel_win_0_va_31_reg_3776 <= src_kernel_win_0_va_6_fu_558;
        src_kernel_win_0_va_42_reg_3781 <= src_kernel_win_0_va_17_fu_602;
        src_kernel_win_0_va_43_reg_3786 <= src_kernel_win_0_va_18_fu_606;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_reg_pp0_iter8_exitcond388_i_i_reg_3576 == 1'd0))) begin
        src_kernel_win_0_va_2_fu_542 <= src_kernel_win_0_va_46_reg_4023;
        src_kernel_win_0_va_3_fu_546 <= src_kernel_win_0_va_2_fu_542;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter7_exitcond388_i_i_reg_3576 == 1'd0))) begin
        src_kernel_win_0_va_46_reg_4023 <= src_kernel_win_0_va_1_fu_538;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter3_exitcond388_i_i_reg_3576 == 1'd0))) begin
        src_kernel_win_0_va_55_reg_3816 <= src_kernel_win_0_va_13_fu_586;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (ap_reg_pp0_iter6_or_cond_i_i_reg_3603 == 1'd1))) begin
        tmp36_reg_3896 <= grp_fu_2938_p3;
        tmp38_reg_3901 <= grp_fu_2945_p3;
        tmp49_reg_3928 <= grp_fu_2952_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter9_or_cond_i_i_reg_3603 == 1'd1))) begin
        tmp51_reg_4083 <= tmp51_fu_2768_p2;
        tmp53_reg_4088 <= tmp53_fu_2784_p2;
        tmp58_reg_4093 <= tmp58_fu_2803_p2;
        tmp59_reg_4098 <= tmp59_fu_2809_p2;
        tmp66_reg_4103 <= tmp66_fu_2818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_115_i_reg_3422 == 1'd1))) begin
        tmp_13_reg_3531 <= tmp_13_fu_1587_p3;
        tmp_25_reg_3536 <= tmp_25_fu_1611_p3;
        tmp_31_reg_3541 <= tmp_31_fu_1635_p3;
        tmp_5_reg_3526 <= tmp_5_fu_1563_p3;
        tmp_60_reg_3521 <= tmp_60_fu_1539_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_condition_pp0_exit_iter3_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond389_i_i_fu_1180_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond389_i_i_fu_1180_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2903_ce = 1'b1;
    end else begin
        grp_fu_2903_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2910_ce = 1'b1;
    end else begin
        grp_fu_2910_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2917_ce = 1'b1;
    end else begin
        grp_fu_2917_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2924_ce = 1'b1;
    end else begin
        grp_fu_2924_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2931_ce = 1'b1;
    end else begin
        grp_fu_2931_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2938_ce = 1'b1;
    end else begin
        grp_fu_2938_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2945_ce = 1'b1;
    end else begin
        grp_fu_2945_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2952_ce = 1'b1;
    end else begin
        grp_fu_2952_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_i_reg_3410 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 == 1'd0) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_reg_pp0_iter2_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_i_reg_3410 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_i_reg_3576 == 1'd0) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_6_ce0 = 1'b1;
    end else begin
        k_buf_0_val_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_1_i_reg_3414 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_6_ce1 = 1'b1;
    end else begin
        k_buf_0_val_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2388)) begin
        if (((tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1))) begin
            k_buf_0_val_6_d1 = k_buf_0_val_5_load_reg_3669;
        end else if (((tmp_93_1_i_reg_3414 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0))) begin
            k_buf_0_val_6_d1 = ap_reg_pp0_iter3_reg_961;
        end else begin
            k_buf_0_val_6_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_1_i_reg_3414 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_6_we1 = 1'b1;
    end else begin
        k_buf_0_val_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_7_ce0 = 1'b1;
    end else begin
        k_buf_0_val_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_2_i_reg_3418 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_7_ce1 = 1'b1;
    end else begin
        k_buf_0_val_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2388)) begin
        if (((tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1))) begin
            k_buf_0_val_7_d1 = k_buf_0_val_6_load_reg_3684;
        end else if (((tmp_93_2_i_reg_3418 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0))) begin
            k_buf_0_val_7_d1 = ap_reg_pp0_iter3_reg_961;
        end else begin
            k_buf_0_val_7_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_2_i_reg_3418 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_7_we1 = 1'b1;
    end else begin
        k_buf_0_val_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_8_ce0 = 1'b1;
    end else begin
        k_buf_0_val_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_1_i_reg_3414 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_8_ce1 = 1'b1;
    end else begin
        k_buf_0_val_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2388)) begin
        if (((tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1))) begin
            k_buf_0_val_8_d1 = k_buf_0_val_7_load_reg_3699;
        end else if (((tmp_93_1_i_reg_3414 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0))) begin
            k_buf_0_val_8_d1 = ap_reg_pp0_iter3_reg_961;
        end else begin
            k_buf_0_val_8_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_1_i_reg_3414 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_8_we1 = 1'b1;
    end else begin
        k_buf_0_val_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_9_ce0 = 1'b1;
    end else begin
        k_buf_0_val_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_i_reg_3410 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_9_ce1 = 1'b1;
    end else begin
        k_buf_0_val_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2388)) begin
        if (((tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1))) begin
            k_buf_0_val_9_d1 = k_buf_0_val_8_load_reg_3714;
        end else if (((tmp_93_i_reg_3410 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0))) begin
            k_buf_0_val_9_d1 = ap_reg_pp0_iter3_reg_961;
        end else begin
            k_buf_0_val_9_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_93_i_reg_3410 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0)))) begin
        k_buf_0_val_9_we1 = 1'b1;
    end else begin
        k_buf_0_val_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (ap_reg_pp0_iter12_or_cond_i_i_reg_3603 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_reg_pp0_iter12_or_cond_i_i_reg_3603 == 1'd1))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_0_blk_n = p_kernel_val_0_V_0_empty_n;
    end else begin
        p_kernel_val_0_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_0_read = 1'b1;
    end else begin
        p_kernel_val_0_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_1_blk_n = p_kernel_val_0_V_1_empty_n;
    end else begin
        p_kernel_val_0_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_1_read = 1'b1;
    end else begin
        p_kernel_val_0_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_2_blk_n = p_kernel_val_0_V_2_empty_n;
    end else begin
        p_kernel_val_0_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_2_read = 1'b1;
    end else begin
        p_kernel_val_0_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_3_blk_n = p_kernel_val_0_V_3_empty_n;
    end else begin
        p_kernel_val_0_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_3_read = 1'b1;
    end else begin
        p_kernel_val_0_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_4_blk_n = p_kernel_val_0_V_4_empty_n;
    end else begin
        p_kernel_val_0_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_4_read = 1'b1;
    end else begin
        p_kernel_val_0_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_0_blk_n = p_kernel_val_1_V_0_empty_n;
    end else begin
        p_kernel_val_1_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_0_read = 1'b1;
    end else begin
        p_kernel_val_1_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_1_blk_n = p_kernel_val_1_V_1_empty_n;
    end else begin
        p_kernel_val_1_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_1_read = 1'b1;
    end else begin
        p_kernel_val_1_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_2_blk_n = p_kernel_val_1_V_2_empty_n;
    end else begin
        p_kernel_val_1_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_2_read = 1'b1;
    end else begin
        p_kernel_val_1_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_3_blk_n = p_kernel_val_1_V_3_empty_n;
    end else begin
        p_kernel_val_1_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_3_read = 1'b1;
    end else begin
        p_kernel_val_1_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_4_blk_n = p_kernel_val_1_V_4_empty_n;
    end else begin
        p_kernel_val_1_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_4_read = 1'b1;
    end else begin
        p_kernel_val_1_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_0_blk_n = p_kernel_val_2_V_0_empty_n;
    end else begin
        p_kernel_val_2_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_0_read = 1'b1;
    end else begin
        p_kernel_val_2_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_1_blk_n = p_kernel_val_2_V_1_empty_n;
    end else begin
        p_kernel_val_2_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_1_read = 1'b1;
    end else begin
        p_kernel_val_2_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_2_blk_n = p_kernel_val_2_V_2_empty_n;
    end else begin
        p_kernel_val_2_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_2_read = 1'b1;
    end else begin
        p_kernel_val_2_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_3_blk_n = p_kernel_val_2_V_3_empty_n;
    end else begin
        p_kernel_val_2_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_3_read = 1'b1;
    end else begin
        p_kernel_val_2_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_4_blk_n = p_kernel_val_2_V_4_empty_n;
    end else begin
        p_kernel_val_2_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_4_read = 1'b1;
    end else begin
        p_kernel_val_2_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_0_blk_n = p_kernel_val_3_V_0_empty_n;
    end else begin
        p_kernel_val_3_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_0_read = 1'b1;
    end else begin
        p_kernel_val_3_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_1_blk_n = p_kernel_val_3_V_1_empty_n;
    end else begin
        p_kernel_val_3_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_1_read = 1'b1;
    end else begin
        p_kernel_val_3_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_2_blk_n = p_kernel_val_3_V_2_empty_n;
    end else begin
        p_kernel_val_3_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_2_read = 1'b1;
    end else begin
        p_kernel_val_3_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_3_blk_n = p_kernel_val_3_V_3_empty_n;
    end else begin
        p_kernel_val_3_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_3_read = 1'b1;
    end else begin
        p_kernel_val_3_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_4_blk_n = p_kernel_val_3_V_4_empty_n;
    end else begin
        p_kernel_val_3_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_3_V_4_read = 1'b1;
    end else begin
        p_kernel_val_3_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_0_blk_n = p_kernel_val_4_V_0_empty_n;
    end else begin
        p_kernel_val_4_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_0_read = 1'b1;
    end else begin
        p_kernel_val_4_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_1_blk_n = p_kernel_val_4_V_1_empty_n;
    end else begin
        p_kernel_val_4_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_1_read = 1'b1;
    end else begin
        p_kernel_val_4_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_2_blk_n = p_kernel_val_4_V_2_empty_n;
    end else begin
        p_kernel_val_4_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_2_read = 1'b1;
    end else begin
        p_kernel_val_4_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_3_blk_n = p_kernel_val_4_V_3_empty_n;
    end else begin
        p_kernel_val_4_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_3_read = 1'b1;
    end else begin
        p_kernel_val_4_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_4_blk_n = p_kernel_val_4_V_4_empty_n;
    end else begin
        p_kernel_val_4_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_4_V_4_read = 1'b1;
    end else begin
        p_kernel_val_4_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1) & (or_cond_i_i_i_reg_3607 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_i_reg_3576 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_i_reg_3576 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op313_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op312_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond389_i_i_fu_1180_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)) & ~((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_cast_s_fu_1746_p1 = $signed(ImagLoc_x_reg_3585);

assign ImagLoc_x_fu_1705_p2 = ($signed(12'd4094) + $signed(t_V_1_cast_i_fu_1674_p1));

assign OP2_V_0_1_i_fu_1050_p1 = $signed(p_kernel_val_0_V_1_dout);

assign OP2_V_0_2_i_fu_1054_p1 = $signed(p_kernel_val_0_V_2_dout);

assign OP2_V_0_3_i_fu_1058_p1 = $signed(p_kernel_val_0_V_3_dout);

assign OP2_V_0_4_i_fu_1062_p1 = $signed(p_kernel_val_0_V_4_dout);

assign OP2_V_0_i_fu_1046_p1 = $signed(p_kernel_val_0_V_0_dout);

assign OP2_V_1_1_i_fu_1070_p1 = $signed(p_kernel_val_1_V_1_dout);

assign OP2_V_1_2_i_fu_1074_p1 = $signed(p_kernel_val_1_V_2_dout);

assign OP2_V_1_3_i_fu_1078_p1 = $signed(p_kernel_val_1_V_3_dout);

assign OP2_V_1_4_i_fu_1082_p1 = $signed(p_kernel_val_1_V_4_dout);

assign OP2_V_1_i_fu_1066_p1 = $signed(p_kernel_val_1_V_0_dout);

assign OP2_V_2_1_i_fu_1090_p1 = $signed(p_kernel_val_2_V_1_dout);

assign OP2_V_2_2_i_fu_1094_p1 = $signed(p_kernel_val_2_V_2_dout);

assign OP2_V_2_3_i_fu_1098_p1 = $signed(p_kernel_val_2_V_3_dout);

assign OP2_V_2_4_i_fu_1102_p1 = $signed(p_kernel_val_2_V_4_dout);

assign OP2_V_2_i_fu_1086_p1 = $signed(p_kernel_val_2_V_0_dout);

assign OP2_V_3_1_i_fu_1110_p1 = $signed(p_kernel_val_3_V_1_dout);

assign OP2_V_3_2_i_fu_1114_p1 = $signed(p_kernel_val_3_V_2_dout);

assign OP2_V_3_3_i_fu_1118_p1 = $signed(p_kernel_val_3_V_3_dout);

assign OP2_V_3_4_i_fu_1122_p1 = $signed(p_kernel_val_3_V_4_dout);

assign OP2_V_3_i_fu_1106_p1 = $signed(p_kernel_val_3_V_0_dout);

assign OP2_V_4_1_i_fu_1130_p1 = $signed(p_kernel_val_4_V_1_dout);

assign OP2_V_4_2_i_fu_1134_p1 = $signed(p_kernel_val_4_V_2_dout);

assign OP2_V_4_3_i_fu_1138_p1 = $signed(p_kernel_val_4_V_3_dout);

assign OP2_V_4_4_i_fu_1142_p1 = $signed(p_kernel_val_4_V_4_dout);

assign OP2_V_4_i_fu_1126_p1 = $signed(p_kernel_val_4_V_0_dout);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_reg_pp0_iter12_or_cond_i_i_reg_3603 == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op313_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op312_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_reg_pp0_iter12_or_cond_i_i_reg_3603 == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op313_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op312_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_reg_pp0_iter12_or_cond_i_i_reg_3603 == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op313_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op312_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((p_kernel_val_2_V_4_empty_n == 1'b0) | (p_kernel_val_2_V_3_empty_n == 1'b0) | (p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_4_empty_n == 1'b0) | (p_kernel_val_1_V_3_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_4_empty_n == 1'b0) | (p_kernel_val_0_V_3_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (p_kernel_val_4_V_4_empty_n == 1'b0) | (p_kernel_val_4_V_3_empty_n == 1'b0) | (p_kernel_val_4_V_2_empty_n == 1'b0) | (p_kernel_val_4_V_1_empty_n == 1'b0) | (p_kernel_val_4_V_0_empty_n == 1'b0) | (p_kernel_val_3_V_4_empty_n == 1'b0) | (p_kernel_val_3_V_3_empty_n == 1'b0) | (ap_start == 1'b0) | (p_kernel_val_3_V_2_empty_n == 1'b0) | (p_kernel_val_3_V_1_empty_n == 1'b0) | (p_kernel_val_3_V_0_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter13 = ((p_dst_data_stream_V_full_n == 1'b0) & (ap_reg_pp0_iter12_or_cond_i_i_reg_3603 == 1'd1));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op313_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op312_read_state7 == 1'b1)));
end

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2388 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_or_cond_i_i_i_reg_3607 == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op312_read_state7 = ((or_cond_i_i_i_reg_3607 == 1'd1) & (tmp_17_i_reg_3405 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_i_reg_3576 == 1'd0));
end

always @ (*) begin
    ap_predicate_op313_read_state7 = ((tmp_2_i_reg_3396 == 1'd1) & (tmp_17_i_reg_3405 == 1'd1) & (or_cond_i_i_i_reg_3607 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_i_reg_3576 == 1'd0));
end

assign brmerge_i_fu_1813_p2 = (tmp_6_i_fu_1754_p2 | rev_reg_3546);

assign col_assign_1_t_i_fu_1830_p2 = (tmp_s_fu_1170_p2 - tmp_69_reg_3616);

assign col_assign_cast_i_fu_1818_p1 = $signed(x_reg_3611);

assign col_buf_0_val_0_0_fu_1894_p3 = ((ap_reg_pp0_iter2_brmerge_i_reg_3621[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_16_fu_1879_p7);

assign col_buf_0_val_1_0_fu_1916_p3 = ((ap_reg_pp0_iter2_brmerge_i_reg_3621[0:0] === 1'b1) ? k_buf_0_val_6_q0 : tmp_17_fu_1901_p7);

assign col_buf_0_val_2_0_fu_1938_p3 = ((ap_reg_pp0_iter2_brmerge_i_reg_3621[0:0] === 1'b1) ? k_buf_0_val_7_q0 : tmp_18_fu_1923_p7);

assign col_buf_0_val_3_0_fu_1960_p3 = ((ap_reg_pp0_iter2_brmerge_i_reg_3621[0:0] === 1'b1) ? k_buf_0_val_8_q0 : tmp_19_fu_1945_p7);

assign col_buf_0_val_4_0_fu_1982_p3 = ((ap_reg_pp0_iter2_brmerge_i_reg_3621[0:0] === 1'b1) ? k_buf_0_val_9_q0 : tmp_20_fu_1967_p7);

assign exitcond388_i_i_fu_1678_p2 = ((t_V_1_reg_950 == tmp_i_fu_986_p2) ? 1'b1 : 1'b0);

assign exitcond389_i_i_fu_1180_p2 = ((t_V_reg_939 == tmp_1_i_fu_992_p2) ? 1'b1 : 1'b0);

assign grp_fu_2903_p0 = OP2_V_0_i_reg_3245;

assign grp_fu_2903_p1 = grp_fu_2903_p10;

assign grp_fu_2903_p10 = src_kernel_win_0_va_19_fu_610;

assign grp_fu_2910_p0 = OP2_V_0_3_i_reg_3260;

assign grp_fu_2910_p1 = grp_fu_2910_p10;

assign grp_fu_2910_p10 = src_kernel_win_0_va_16_fu_598;

assign grp_fu_2917_p0 = OP2_V_1_2_i_reg_3280;

assign grp_fu_2917_p1 = grp_fu_2917_p10;

assign grp_fu_2917_p10 = src_kernel_win_0_va_13_fu_586;

assign grp_fu_2924_p0 = OP2_V_1_3_i_reg_3285;

assign grp_fu_2924_p1 = grp_fu_2924_p10;

assign grp_fu_2924_p10 = src_kernel_win_0_va_12_fu_582;

assign grp_fu_2931_p0 = OP2_V_3_i_reg_3320;

assign grp_fu_2931_p1 = grp_fu_2931_p10;

assign grp_fu_2931_p10 = src_kernel_win_0_va_7_fu_562;

assign grp_fu_2938_p0 = OP2_V_0_4_i_reg_3265;

assign grp_fu_2938_p1 = grp_fu_2938_p10;

assign grp_fu_2938_p10 = src_kernel_win_0_va_24_reg_3761;

assign grp_fu_2945_p0 = OP2_V_1_i_reg_3270;

assign grp_fu_2945_p1 = grp_fu_2945_p10;

assign grp_fu_2945_p10 = src_kernel_win_0_va_15_fu_594;

assign grp_fu_2952_p0 = OP2_V_2_i_reg_3295;

assign grp_fu_2952_p1 = grp_fu_2952_p10;

assign grp_fu_2952_p10 = src_kernel_win_0_va_11_fu_578;

assign i_V_fu_1185_p2 = (t_V_reg_939 + 11'd1);

assign icmp_fu_1699_p2 = ((tmp_66_fu_1689_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_1683_p2 = (t_V_1_reg_950 + 11'd1);

assign k_buf_0_val_5_address0 = tmp_58_i_fu_1821_p1;

assign k_buf_0_val_6_address0 = tmp_58_i_fu_1821_p1;

assign k_buf_0_val_7_address0 = tmp_58_i_fu_1821_p1;

assign k_buf_0_val_8_address0 = tmp_58_i_fu_1821_p1;

assign k_buf_0_val_9_address0 = tmp_58_i_fu_1821_p1;

assign not_i_i_i_i_fu_2872_p2 = ((p_Result_3_i_i_i_reg_4119 != 13'd0) ? 1'b1 : 1'b0);

assign or_cond_i424_i_1_i_fu_1389_p2 = (tmp_120_1_i_fu_1385_p2 & rev2_fu_1379_p2);

assign or_cond_i424_i_2_i_fu_1426_p2 = (tmp_120_2_i_fu_1422_p2 & rev3_fu_1416_p2);

assign or_cond_i424_i_3_i_fu_1463_p2 = (tmp_120_3_i_fu_1459_p2 & rev4_fu_1453_p2);

assign or_cond_i424_i_4_i_fu_1500_p2 = (tmp_120_4_i_fu_1496_p2 & rev5_fu_1490_p2);

assign or_cond_i424_i_i_fu_1347_p2 = (tmp_120_i_fu_1343_p2 & rev1_fu_1337_p2);

assign or_cond_i_i_fu_1741_p2 = (tmp_17_i_reg_3405 & icmp_fu_1699_p2);

assign or_cond_i_i_i_fu_1758_p2 = (tmp_6_i_fu_1754_p2 & rev6_fu_1749_p2);

assign overflow_fu_2877_p2 = (tmp_2_i_i_i_fu_2867_p2 & not_i_i_i_i_fu_2872_p2);

assign p_Val2_1_fu_2852_p2 = (tmp66_reg_4103 + tmp62_fu_2848_p2);

assign p_Val2_2_fu_2834_p2 = ($signed(tmp66_cast_fu_2831_p1) + $signed(tmp54_fu_2826_p2));

assign p_Val2_4_0_1_cast_s_fu_2412_p1 = p_Val2_4_0_1_i_reg_3871;

assign p_Val2_4_0_3_i_fu_2418_p2 = ($signed(tmp38_cast_fu_2415_p1) + $signed(p_Val2_4_0_1_cast_s_fu_2412_p1));

assign p_Val2_4_1_2_cast_s_fu_2476_p1 = $signed(p_Val2_4_1_2_i_fu_2471_p2);

assign p_Val2_4_1_2_i_fu_2471_p2 = ($signed(tmp40_cast_fu_2468_p1) + $signed(tmp36_reg_3896));

assign p_Val2_4_3_cast_i_fu_2743_p1 = $signed(p_Val2_4_3_i_reg_4033);

assign p_Val2_4_3_i_fu_2644_p2 = ($signed(tmp51_cast_fu_2636_p1) + $signed(tmp46_fu_2631_p2));

assign p_Val2_s_fu_2896_p3 = ((tmp_i_i_i_fu_2891_p2[0:0] === 1'b1) ? p_mux_i_i_cast_i_fu_2883_p3 : p_Val2_1_reg_4114);

assign p_assign_1_fu_1727_p2 = (12'd2 - t_V_1_cast_i_fu_1674_p1);

assign p_assign_2_fu_1771_p2 = ($signed(tmp_10_cast_cast_i_fu_1160_p1) - $signed(p_p2_i_i_cast_cast39_s_fu_1764_p1));

assign p_assign_6_1_i_fu_1250_p2 = ($signed(t_V_cast_i_fu_1176_p1) + $signed(12'd4094));

assign p_assign_6_2_i_fu_1270_p2 = ($signed(t_V_cast_i_fu_1176_p1) + $signed(12'd4093));

assign p_assign_6_3_i_fu_1290_p2 = ($signed(t_V_cast_i_fu_1176_p1) + $signed(12'd4092));

assign p_assign_6_4_i_fu_1310_p2 = ($signed(t_V_cast_i_fu_1176_p1) + $signed(12'd4091));

assign p_assign_7_1_i_fu_1264_p2 = (12'd2 - t_V_cast_i_fu_1176_p1);

assign p_assign_7_2_i_fu_1284_p2 = (12'd3 - t_V_cast_i_fu_1176_p1);

assign p_assign_7_3_i_fu_1304_p2 = (12'd4 - t_V_cast_i_fu_1176_p1);

assign p_assign_7_4_i_fu_1324_p2 = (12'd5 - t_V_cast_i_fu_1176_p1);

assign p_assign_7_i_fu_1244_p2 = (12'd1 - t_V_cast_i_fu_1176_p1);

assign p_assign_8_i_fu_1367_p2 = ($signed(tmp_135_cast_cast_i_fu_1024_p1) - $signed(p_p2_i425_i_cast_cast_fu_1358_p1));

assign p_dst_data_stream_V_din = p_Val2_s_reg_4124;

assign p_mux_i_i_cast_i_fu_2883_p3 = ((tmp_2_i_i_i_fu_2867_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i425_i_1_i_fu_1395_p3 = ((tmp_34_reg_3457[0:0] === 1'b1) ? p_assign_7_1_i_reg_3462 : p_assign_6_1_i_reg_3449);

assign p_p2_i425_i_2_i_fu_1432_p3 = ((tmp_43_reg_3475[0:0] === 1'b1) ? p_assign_7_2_i_reg_3480 : p_assign_6_2_i_reg_3467);

assign p_p2_i425_i_3_i_fu_1469_p3 = ((tmp_50_reg_3493[0:0] === 1'b1) ? p_assign_7_3_i_reg_3498 : p_assign_6_3_i_reg_3485);

assign p_p2_i425_i_4_i_fu_1506_p3 = ((tmp_53_reg_3511[0:0] === 1'b1) ? p_assign_7_4_i_reg_3516 : p_assign_6_4_i_reg_3503);

assign p_p2_i425_i_cast_cast_fu_1358_p1 = $signed(p_p2_i425_i_i_fu_1353_p3);

assign p_p2_i425_i_i_fu_1353_p3 = ((tmp_28_reg_3439[0:0] === 1'b1) ? p_assign_7_i_reg_3444 : tmp_118_i_reg_3431);

assign p_p2_i_i_cast_cast39_s_fu_1764_p1 = $signed(p_p2_i_i_i_reg_3597);

assign p_p2_i_i_i_fu_1733_p3 = ((tmp_68_fu_1719_p3[0:0] === 1'b1) ? p_assign_1_fu_1727_p2 : ImagLoc_x_fu_1705_p2);

assign r_V_2_0_1_i_fu_2307_p0 = OP2_V_0_1_i_reg_3250;

assign r_V_2_0_1_i_fu_2307_p1 = r_V_2_0_1_i_fu_2307_p10;

assign r_V_2_0_1_i_fu_2307_p10 = src_kernel_win_0_va_43_reg_3786;

assign r_V_2_0_1_i_fu_2307_p2 = ($signed(r_V_2_0_1_i_fu_2307_p0) * $signed({{1'b0}, {r_V_2_0_1_i_fu_2307_p1}}));

assign r_V_2_0_2_i_fu_2315_p0 = OP2_V_0_2_i_reg_3255;

assign r_V_2_0_2_i_fu_2315_p1 = r_V_2_0_2_i_fu_2315_p10;

assign r_V_2_0_2_i_fu_2315_p10 = src_kernel_win_0_va_42_reg_3781;

assign r_V_2_0_2_i_fu_2315_p2 = ($signed(r_V_2_0_2_i_fu_2315_p0) * $signed({{1'b0}, {r_V_2_0_2_i_fu_2315_p1}}));

assign r_V_2_1_1_i_fu_2331_p0 = OP2_V_1_1_i_reg_3275;

assign r_V_2_1_1_i_fu_2331_p1 = r_V_2_1_1_i_fu_2331_p10;

assign r_V_2_1_1_i_fu_2331_p10 = src_kernel_win_0_va_14_fu_590;

assign r_V_2_1_1_i_fu_2331_p2 = ($signed(r_V_2_1_1_i_fu_2331_p0) * $signed({{1'b0}, {r_V_2_1_1_i_fu_2331_p1}}));

assign r_V_2_1_4_i_fu_2339_p0 = OP2_V_1_4_i_reg_3290;

assign r_V_2_1_4_i_fu_2339_p1 = r_V_2_1_4_i_fu_2339_p10;

assign r_V_2_1_4_i_fu_2339_p10 = src_kernel_win_0_va_23_reg_3756;

assign r_V_2_1_4_i_fu_2339_p2 = ($signed(r_V_2_1_4_i_fu_2339_p0) * $signed({{1'b0}, {r_V_2_1_4_i_fu_2339_p1}}));

assign r_V_2_2_1_i_fu_2352_p0 = OP2_V_2_1_i_reg_3300;

assign r_V_2_2_1_i_fu_2352_p1 = r_V_2_2_1_i_fu_2352_p10;

assign r_V_2_2_1_i_fu_2352_p10 = src_kernel_win_0_va_10_fu_574;

assign r_V_2_2_1_i_fu_2352_p2 = ($signed(r_V_2_2_1_i_fu_2352_p0) * $signed({{1'b0}, {r_V_2_2_1_i_fu_2352_p1}}));

assign r_V_2_2_2_i_fu_2434_p0 = OP2_V_2_2_i_reg_3305;

assign r_V_2_2_2_i_fu_2434_p1 = r_V_2_2_2_i_fu_2434_p10;

assign r_V_2_2_2_i_fu_2434_p10 = ap_reg_pp0_iter6_src_kernel_win_0_va_34_reg_3826;

assign r_V_2_2_2_i_fu_2434_p2 = ($signed(r_V_2_2_2_i_fu_2434_p0) * $signed({{1'b0}, {r_V_2_2_2_i_fu_2434_p1}}));

assign r_V_2_2_3_i_fu_2442_p0 = OP2_V_2_3_i_reg_3310;

assign r_V_2_2_3_i_fu_2442_p1 = r_V_2_2_3_i_fu_2442_p10;

assign r_V_2_2_3_i_fu_2442_p10 = ap_reg_pp0_iter6_src_kernel_win_0_va_33_reg_3821;

assign r_V_2_2_3_i_fu_2442_p2 = ($signed(r_V_2_2_3_i_fu_2442_p0) * $signed({{1'b0}, {r_V_2_2_3_i_fu_2442_p1}}));

assign r_V_2_2_4_i_fu_2450_p0 = OP2_V_2_4_i_reg_3315;

assign r_V_2_2_4_i_fu_2450_p1 = r_V_2_2_4_i_fu_2450_p10;

assign r_V_2_2_4_i_fu_2450_p10 = ap_reg_pp0_iter6_src_kernel_win_0_va_22_reg_3750;

assign r_V_2_2_4_i_fu_2450_p2 = ($signed(r_V_2_2_4_i_fu_2450_p0) * $signed({{1'b0}, {r_V_2_2_4_i_fu_2450_p1}}));

assign r_V_2_3_1_i_fu_2653_p0 = OP2_V_3_1_i_reg_3325;

assign r_V_2_3_1_i_fu_2653_p1 = r_V_2_3_1_i_fu_2653_p10;

assign r_V_2_3_1_i_fu_2653_p10 = ap_reg_pp0_iter8_src_kernel_win_0_va_31_reg_3776;

assign r_V_2_3_1_i_fu_2653_p2 = ($signed(r_V_2_3_1_i_fu_2653_p0) * $signed({{1'b0}, {r_V_2_3_1_i_fu_2653_p1}}));

assign r_V_2_3_2_i_fu_2532_p0 = OP2_V_3_2_i_reg_3330;

assign r_V_2_3_2_i_fu_2532_p1 = r_V_2_3_2_i_fu_2532_p10;

assign r_V_2_3_2_i_fu_2532_p10 = ap_reg_pp0_iter7_src_kernel_win_0_va_30_reg_3771;

assign r_V_2_3_2_i_fu_2532_p2 = ($signed(r_V_2_3_2_i_fu_2532_p0) * $signed({{1'b0}, {r_V_2_3_2_i_fu_2532_p1}}));

assign r_V_2_3_3_i_fu_2544_p0 = OP2_V_3_3_i_reg_3335;

assign r_V_2_3_3_i_fu_2544_p1 = r_V_2_3_3_i_fu_2544_p10;

assign r_V_2_3_3_i_fu_2544_p10 = ap_reg_pp0_iter7_src_kernel_win_0_va_29_reg_3766;

assign r_V_2_3_3_i_fu_2544_p2 = ($signed(r_V_2_3_3_i_fu_2544_p0) * $signed({{1'b0}, {r_V_2_3_3_i_fu_2544_p1}}));

assign r_V_2_3_4_i_fu_2556_p0 = OP2_V_3_4_i_reg_3340;

assign r_V_2_3_4_i_fu_2556_p1 = r_V_2_3_4_i_fu_2556_p10;

assign r_V_2_3_4_i_fu_2556_p10 = ap_reg_pp0_iter7_src_kernel_win_0_va_21_reg_3745;

assign r_V_2_3_4_i_fu_2556_p2 = ($signed(r_V_2_3_4_i_fu_2556_p0) * $signed({{1'b0}, {r_V_2_3_4_i_fu_2556_p1}}));

assign r_V_2_4_1_i_fu_2685_p0 = OP2_V_4_1_i_reg_3350;

assign r_V_2_4_1_i_fu_2685_p1 = r_V_2_4_1_i_fu_2685_p10;

assign r_V_2_4_1_i_fu_2685_p10 = src_kernel_win_0_va_2_fu_542;

assign r_V_2_4_1_i_fu_2685_p2 = ($signed(r_V_2_4_1_i_fu_2685_p0) * $signed({{1'b0}, {r_V_2_4_1_i_fu_2685_p1}}));

assign r_V_2_4_2_i_fu_2569_p0 = OP2_V_4_2_i_reg_3355;

assign r_V_2_4_2_i_fu_2569_p1 = r_V_2_4_2_i_fu_2569_p10;

assign r_V_2_4_2_i_fu_2569_p10 = src_kernel_win_0_va_1_fu_538;

assign r_V_2_4_2_i_fu_2569_p2 = ($signed(r_V_2_4_2_i_fu_2569_p0) * $signed({{1'b0}, {r_V_2_4_2_i_fu_2569_p1}}));

assign r_V_2_4_3_i_fu_2582_p0 = OP2_V_4_3_i_reg_3360;

assign r_V_2_4_3_i_fu_2582_p1 = r_V_2_4_3_i_fu_2582_p10;

assign r_V_2_4_3_i_fu_2582_p10 = src_kernel_win_0_va_fu_534;

assign r_V_2_4_3_i_fu_2582_p2 = ($signed(r_V_2_4_3_i_fu_2582_p0) * $signed({{1'b0}, {r_V_2_4_3_i_fu_2582_p1}}));

assign r_V_2_4_4_i_fu_2594_p0 = OP2_V_4_4_i_reg_3365;

assign r_V_2_4_4_i_fu_2594_p1 = r_V_2_4_4_i_fu_2594_p10;

assign r_V_2_4_4_i_fu_2594_p10 = ap_reg_pp0_iter7_src_kernel_win_0_va_20_reg_3739;

assign r_V_2_4_4_i_fu_2594_p2 = ($signed(r_V_2_4_4_i_fu_2594_p0) * $signed({{1'b0}, {r_V_2_4_4_i_fu_2594_p1}}));

assign r_V_2_4_i_fu_2672_p0 = OP2_V_4_i_reg_3345;

assign r_V_2_4_i_fu_2672_p1 = r_V_2_4_i_fu_2672_p10;

assign r_V_2_4_i_fu_2672_p10 = src_kernel_win_0_va_3_fu_546;

assign r_V_2_4_i_fu_2672_p2 = ($signed(r_V_2_4_i_fu_2672_p0) * $signed({{1'b0}, {r_V_2_4_i_fu_2672_p1}}));

assign rev1_fu_1337_p2 = (tmp_26_fu_1330_p3 ^ 1'd1);

assign rev2_fu_1379_p2 = (tmp_32_fu_1372_p3 ^ 1'd1);

assign rev3_fu_1416_p2 = (tmp_42_fu_1409_p3 ^ 1'd1);

assign rev4_fu_1453_p2 = (tmp_48_fu_1446_p3 ^ 1'd1);

assign rev5_fu_1490_p2 = (tmp_52_fu_1483_p3 ^ 1'd1);

assign rev6_fu_1749_p2 = (tmp_67_reg_3591 ^ 1'd1);

assign rev_fu_1643_p2 = (ult_reg_3400 ^ 1'd1);

assign row_assign_8_1_t_i_fu_1658_p2 = (tmp_fu_1028_p2 - tmp_5_reg_3526);

assign row_assign_8_2_t_i_fu_1662_p2 = (tmp_fu_1028_p2 - tmp_13_reg_3531);

assign row_assign_8_3_t_i_fu_1666_p2 = (tmp_fu_1028_p2 - tmp_25_reg_3536);

assign row_assign_8_4_t_i_fu_1670_p2 = (tmp_fu_1028_p2 - tmp_31_reg_3541);

assign sel_tmp1_fu_1790_p2 = (tmp_6_i_not_fu_1784_p2 | tmp_67_reg_3591);

assign sel_tmp2_fu_1795_p2 = (tmp_8_i_fu_1767_p2 & sel_tmp1_fu_1790_p2);

assign sel_tmp_fu_1776_p3 = ((or_cond_i_i_i_fu_1758_p2[0:0] === 1'b1) ? ImagLoc_x_cast_cast_s_fu_1746_p1 : p_assign_2_fu_1771_p2);

assign src_kernel_win_0_va_20_fu_2092_p3 = ((tmp_115_i_reg_3422[0:0] === 1'b1) ? tmp_21_fu_2082_p7 : col_buf_0_val_0_0_reg_3674);

assign src_kernel_win_0_va_21_fu_2108_p3 = ((tmp_115_i_reg_3422[0:0] === 1'b1) ? tmp_27_fu_2098_p7 : col_buf_0_val_1_0_reg_3689);

assign src_kernel_win_0_va_22_fu_2124_p3 = ((tmp_115_i_reg_3422[0:0] === 1'b1) ? tmp_33_fu_2114_p7 : col_buf_0_val_2_0_reg_3704);

assign src_kernel_win_0_va_23_fu_2140_p3 = ((tmp_115_i_reg_3422[0:0] === 1'b1) ? tmp_35_fu_2130_p7 : col_buf_0_val_3_0_reg_3719);

assign src_kernel_win_0_va_24_fu_2156_p3 = ((tmp_115_i_reg_3422[0:0] === 1'b1) ? tmp_36_fu_2146_p7 : col_buf_0_val_4_0_reg_3729);

assign t_V_1_cast_i_fu_1674_p1 = t_V_1_reg_950;

assign t_V_cast_i_fu_1176_p1 = t_V_reg_939;

assign tmp38_cast_fu_2415_p1 = tmp35_reg_3876;

assign tmp39_fu_2493_p2 = ($signed(p_Val2_4_1_2_cast_s_fu_2476_p1) + $signed(tmp_140_2_3_cast_i_fu_2483_p1));

assign tmp40_cast_fu_2468_p1 = tmp38_reg_3901;

assign tmp45_fu_2503_p2 = ($signed(tmp_140_2_4_cast_i_c_fu_2486_p1) + $signed(tmp_140_2_2_cast_i_c_fu_2480_p1));

assign tmp46_fu_2631_p2 = ($signed(tmp50_cast_fu_2624_p1) + $signed(tmp39_reg_3938));

assign tmp50_cast_fu_2624_p1 = $signed(tmp45_reg_3943);

assign tmp50_fu_2519_p2 = ($signed(tmp53_cast_fu_2516_p1) + $signed(tmp52_cast_fu_2513_p1));

assign tmp51_cast_fu_2636_p1 = $signed(tmp50_reg_3953);

assign tmp51_fu_2768_p2 = ($signed(p_Val2_4_3_cast_i_fu_2743_p1) + $signed(tmp_140_4_2_i_fu_2762_p1));

assign tmp52_cast_fu_2513_p1 = ap_reg_pp0_iter7_tmp47_reg_3886;

assign tmp52_fu_2774_p2 = ($signed(tmp_140_4_1_i_cast_fu_2759_p1) + $signed(tmp_140_4_i_cast_fu_2756_p1));

assign tmp53_cast_fu_2516_p1 = tmp49_reg_3928;

assign tmp53_fu_2784_p2 = ($signed(tmp65_cast_fu_2780_p1) + $signed(tmp_140_4_3_i_cast_fu_2765_p1));

assign tmp54_fu_2826_p2 = ($signed(tmp64_cast_fu_2823_p1) + $signed(tmp51_reg_4083));

assign tmp55_fu_2790_p2 = ($signed(tmp_140_3_4_i_cast_fu_2753_p1) + $signed(tmp_140_3_1_i_cast_fu_2746_p1));

assign tmp56_fu_2697_p2 = ($signed(tmp_140_3_2_i_cast_fu_2662_p1) + $signed(tmp_140_4_4_i_cast_fu_2694_p1));

assign tmp57_fu_2707_p2 = ($signed(tmp69_cast_fu_2703_p1) + $signed(tmp_140_3_3_i_cast_fu_2665_p1));

assign tmp58_fu_2803_p2 = ($signed(tmp68_cast_fu_2800_p1) + $signed(tmp67_cast_fu_2796_p1));

assign tmp59_fu_2809_p2 = (tmp_41_fu_2749_p2 + tmp_76_reg_4043);

assign tmp60_fu_2713_p2 = (tmp_78_reg_3978 + tmp_79_reg_3988);

assign tmp61_fu_2717_p2 = (tmp60_fu_2713_p2 + tmp_77_reg_3968);

assign tmp62_fu_2848_p2 = (ap_reg_pp0_iter10_tmp61_reg_4073 + tmp59_reg_4098);

assign tmp63_fu_2814_p2 = (tmp_80_reg_4053 + tmp_81_reg_4063);

assign tmp64_cast_fu_2823_p1 = $signed(tmp53_reg_4088);

assign tmp64_fu_2722_p2 = (tmp_83_reg_4008 + tmp_84_reg_4018);

assign tmp65_cast_fu_2780_p1 = $signed(tmp52_fu_2774_p2);

assign tmp65_fu_2726_p2 = (tmp64_fu_2722_p2 + tmp_82_reg_3998);

assign tmp66_cast_fu_2831_p1 = $signed(tmp58_reg_4093);

assign tmp66_fu_2818_p2 = (tmp65_reg_4078 + tmp63_fu_2814_p2);

assign tmp67_cast_fu_2796_p1 = $signed(tmp55_fu_2790_p2);

assign tmp68_cast_fu_2800_p1 = $signed(tmp57_reg_4068);

assign tmp69_cast_fu_2703_p1 = $signed(tmp56_fu_2697_p2);

assign tmp_10_cast_cast_i_fu_1160_p1 = tmp_10_i_fu_1154_p2;

assign tmp_10_fu_982_p1 = p_src_cols_V[10:0];

assign tmp_10_i_fu_1154_p2 = ($signed(12'd4094) + $signed(tmp_9_i_fu_1146_p3));

assign tmp_115_i_fu_1225_p2 = ((t_V_reg_939 > tmp_8_fu_974_p1) ? 1'b1 : 1'b0);

assign tmp_118_i_fu_1230_p2 = ($signed(t_V_cast_i_fu_1176_p1) + $signed(12'd4095));

assign tmp_11_fu_1576_p3 = ((tmp_132_2_i_fu_1437_p2[0:0] === 1'b1) ? tmp_45_fu_1442_p1 : tmp_6_fu_1571_p2);

assign tmp_120_1_i_fu_1385_p2 = (($signed(p_assign_6_1_i_reg_3449) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_120_2_i_fu_1422_p2 = (($signed(p_assign_6_2_i_reg_3467) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_120_3_i_fu_1459_p2 = (($signed(p_assign_6_3_i_reg_3485) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_120_4_i_fu_1496_p2 = (($signed(p_assign_6_4_i_reg_3503) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_120_i_fu_1343_p2 = (($signed(tmp_118_i_reg_3431) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_12_fu_998_p1 = p_src_rows_V[2:0];

assign tmp_132_1_i_fu_1400_p2 = (($signed(p_p2_i425_i_1_i_fu_1395_p3) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_132_2_i_fu_1437_p2 = (($signed(p_p2_i425_i_2_i_fu_1432_p3) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_132_3_i_fu_1474_p2 = (($signed(p_p2_i425_i_3_i_fu_1469_p3) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_132_4_i_fu_1511_p2 = (($signed(p_p2_i425_i_4_i_fu_1506_p3) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_132_i_fu_1362_p2 = (($signed(p_p2_i425_i_i_fu_1353_p3) < $signed(tmp_7_fu_970_p1)) ? 1'b1 : 1'b0);

assign tmp_134_i_fu_1010_p3 = {{tmp_8_fu_974_p1}, {1'd0}};

assign tmp_135_cast_cast_i_fu_1024_p1 = tmp_135_i_fu_1018_p2;

assign tmp_135_i_fu_1018_p2 = (12'd6 + tmp_134_i_fu_1010_p3);

assign tmp_13_fu_1587_p3 = ((or_cond_i424_i_2_i_fu_1426_p2[0:0] === 1'b1) ? tmp_63_fu_1584_p1 : tmp_11_fu_1576_p3);

assign tmp_140_2_2_cast_i_c_fu_2480_p1 = $signed(r_V_2_2_2_i_reg_3906);

assign tmp_140_2_3_cast_i_fu_2483_p1 = $signed(r_V_2_2_3_i_reg_3912);

assign tmp_140_2_4_cast_i_c_fu_2486_p1 = $signed(r_V_2_2_4_i_reg_3917);

assign tmp_140_3_1_i_cast_fu_2746_p1 = $signed(r_V_2_3_1_i_reg_4038);

assign tmp_140_3_2_i_cast_fu_2662_p1 = $signed(r_V_2_3_2_i_reg_3963);

assign tmp_140_3_3_i_cast_fu_2665_p1 = $signed(r_V_2_3_3_i_reg_3973);

assign tmp_140_3_4_i_cast_fu_2753_p1 = $signed(ap_reg_pp0_iter9_r_V_2_3_4_i_reg_3983);

assign tmp_140_4_1_i_cast_fu_2759_p1 = $signed(r_V_2_4_1_i_reg_4058);

assign tmp_140_4_2_i_fu_2762_p1 = $signed(ap_reg_pp0_iter9_r_V_2_4_2_i_reg_3993);

assign tmp_140_4_3_i_cast_fu_2765_p1 = $signed(ap_reg_pp0_iter9_r_V_2_4_3_i_reg_4003);

assign tmp_140_4_4_i_cast_fu_2694_p1 = $signed(r_V_2_4_4_i_reg_4013);

assign tmp_140_4_i_cast_fu_2756_p1 = $signed(r_V_2_4_i_reg_4048);

assign tmp_14_fu_1002_p1 = p_src_rows_V[2:0];

assign tmp_15_fu_1006_p1 = p_src_cols_V[2:0];

assign tmp_17_i_fu_1201_p2 = ((t_V_reg_939 > 11'd2) ? 1'b1 : 1'b0);

assign tmp_1_fu_1038_p3 = {{tmp_22_fu_1034_p1}, {1'd0}};

assign tmp_1_i_fu_992_p2 = (11'd3 + tmp_8_fu_974_p1);

assign tmp_22_fu_1034_p1 = p_src_rows_V[1:0];

assign tmp_23_fu_1595_p2 = (tmp_3_fu_1164_p2 - tmp_51_fu_1479_p1);

assign tmp_24_fu_1600_p3 = ((tmp_132_3_i_fu_1474_p2[0:0] === 1'b1) ? tmp_51_fu_1479_p1 : tmp_23_fu_1595_p2);

assign tmp_25_fu_1611_p3 = ((or_cond_i424_i_3_i_fu_1463_p2[0:0] === 1'b1) ? tmp_64_fu_1608_p1 : tmp_24_fu_1600_p3);

assign tmp_26_fu_1330_p3 = tmp_118_i_reg_3431[32'd11];

assign tmp_29_fu_1619_p2 = (tmp_3_fu_1164_p2 - tmp_54_fu_1516_p1);

assign tmp_2_fu_1547_p2 = (tmp_3_fu_1164_p2 - tmp_38_fu_1405_p1);

assign tmp_2_i_fu_1191_p2 = ((t_V_reg_939 < tmp_8_fu_974_p1) ? 1'b1 : 1'b0);

assign tmp_2_i_i_i_fu_2867_p2 = (isneg_reg_4108 ^ 1'd1);

assign tmp_30_fu_1624_p3 = ((tmp_132_4_i_fu_1511_p2[0:0] === 1'b1) ? tmp_54_fu_1516_p1 : tmp_29_fu_1619_p2);

assign tmp_31_fu_1635_p3 = ((or_cond_i424_i_4_i_fu_1500_p2[0:0] === 1'b1) ? tmp_65_fu_1632_p1 : tmp_30_fu_1624_p3);

assign tmp_32_fu_1372_p3 = p_assign_6_1_i_reg_3449[32'd11];

assign tmp_37_fu_2499_p2 = (r_V_2_2_2_i_reg_3906 + r_V_2_2_4_i_reg_3917);

assign tmp_38_fu_1405_p1 = p_p2_i425_i_1_i_fu_1395_p3[2:0];

assign tmp_39_fu_2627_p2 = (ap_reg_pp0_iter8_tmp_72_reg_3923 + tmp_73_reg_3933);

assign tmp_3_fu_1164_p2 = ($signed(3'd6) + $signed(tmp_1_fu_1038_p3));

assign tmp_40_fu_2639_p2 = (tmp_39_fu_2627_p2 + tmp_74_reg_3948);

assign tmp_41_fu_2749_p2 = (tmp_40_reg_4028 + ap_reg_pp0_iter9_tmp_75_reg_3958);

assign tmp_42_fu_1409_p3 = p_assign_6_2_i_reg_3467[32'd11];

assign tmp_45_fu_1442_p1 = p_p2_i425_i_2_i_fu_1432_p3[2:0];

assign tmp_48_fu_1446_p3 = p_assign_6_3_i_reg_3485[32'd11];

assign tmp_4_fu_1552_p3 = ((tmp_132_1_i_fu_1400_p2[0:0] === 1'b1) ? tmp_38_fu_1405_p1 : tmp_2_fu_1547_p2);

assign tmp_51_fu_1479_p1 = p_p2_i425_i_3_i_fu_1469_p3[2:0];

assign tmp_52_fu_1483_p3 = p_assign_6_4_i_reg_3503[32'd11];

assign tmp_54_fu_1516_p1 = p_p2_i425_i_4_i_fu_1506_p3[2:0];

assign tmp_55_fu_1648_p2 = ($signed(tmp_14_fu_1002_p1) + $signed(3'd7));

assign tmp_56_fu_1520_p1 = tmp_118_i_reg_3431[2:0];

assign tmp_57_fu_1523_p1 = p_p2_i425_i_i_fu_1353_p3[2:0];

assign tmp_58_fu_1527_p1 = p_assign_8_i_fu_1367_p2[2:0];

assign tmp_58_i_fu_1821_p1 = $unsigned(col_assign_cast_i_fu_1818_p1);

assign tmp_59_fu_1531_p3 = ((tmp_132_i_fu_1362_p2[0:0] === 1'b1) ? tmp_57_fu_1523_p1 : tmp_58_fu_1527_p1);

assign tmp_5_fu_1563_p3 = ((or_cond_i424_i_1_i_fu_1389_p2[0:0] === 1'b1) ? tmp_62_fu_1560_p1 : tmp_4_fu_1552_p3);

assign tmp_60_fu_1539_p3 = ((or_cond_i424_i_i_fu_1347_p2[0:0] === 1'b1) ? tmp_56_fu_1520_p1 : tmp_59_fu_1531_p3);

assign tmp_61_fu_1653_p2 = (tmp_55_fu_1648_p2 - tmp_60_reg_3521);

assign tmp_62_fu_1560_p1 = p_assign_6_1_i_reg_3449[2:0];

assign tmp_63_fu_1584_p1 = p_assign_6_2_i_reg_3467[2:0];

assign tmp_64_fu_1608_p1 = p_assign_6_3_i_reg_3485[2:0];

assign tmp_65_fu_1632_p1 = p_assign_6_4_i_reg_3503[2:0];

assign tmp_66_fu_1689_p4 = {{t_V_1_reg_950[10:2]}};

assign tmp_68_fu_1719_p3 = ImagLoc_x_fu_1705_p2[32'd11];

assign tmp_69_fu_1809_p1 = x_fu_1801_p3[2:0];

assign tmp_6_fu_1571_p2 = (tmp_3_fu_1164_p2 - tmp_45_fu_1442_p1);

assign tmp_6_i_fu_1754_p2 = (($signed(ImagLoc_x_reg_3585) < $signed(tmp_9_fu_978_p1)) ? 1'b1 : 1'b0);

assign tmp_6_i_not_fu_1784_p2 = (tmp_6_i_fu_1754_p2 ^ 1'd1);

assign tmp_72_fu_2455_p1 = r_V_2_2_3_i_fu_2442_p2[7:0];

assign tmp_73_fu_2489_p1 = p_Val2_4_1_2_i_fu_2471_p2[7:0];

assign tmp_74_fu_2509_p1 = tmp_37_fu_2499_p2[7:0];

assign tmp_75_fu_2525_p1 = tmp50_fu_2519_p2[7:0];

assign tmp_76_fu_2658_p1 = r_V_2_3_1_i_fu_2653_p2[7:0];

assign tmp_77_fu_2537_p1 = r_V_2_3_2_i_fu_2532_p2[7:0];

assign tmp_78_fu_2549_p1 = r_V_2_3_3_i_fu_2544_p2[7:0];

assign tmp_79_fu_2561_p1 = r_V_2_3_4_i_fu_2556_p2[7:0];

assign tmp_7_fu_970_p1 = p_src_rows_V[11:0];

assign tmp_80_fu_2677_p1 = r_V_2_4_i_fu_2672_p2[7:0];

assign tmp_81_fu_2690_p1 = r_V_2_4_1_i_fu_2685_p2[7:0];

assign tmp_82_fu_2574_p1 = r_V_2_4_2_i_fu_2569_p2[7:0];

assign tmp_83_fu_2587_p1 = r_V_2_4_3_i_fu_2582_p2[7:0];

assign tmp_84_fu_2599_p1 = r_V_2_4_4_i_fu_2594_p2[7:0];

assign tmp_8_fu_974_p1 = p_src_rows_V[10:0];

assign tmp_8_i_fu_1767_p2 = (($signed(p_p2_i_i_i_reg_3597) < $signed(tmp_9_fu_978_p1)) ? 1'b1 : 1'b0);

assign tmp_93_1_i_fu_1213_p2 = ((t_V_reg_939 == 11'd1) ? 1'b1 : 1'b0);

assign tmp_93_2_i_fu_1219_p2 = ((t_V_reg_939 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_93_i_fu_1207_p2 = ((t_V_reg_939 == 11'd2) ? 1'b1 : 1'b0);

assign tmp_9_fu_978_p1 = p_src_cols_V[11:0];

assign tmp_9_i_fu_1146_p3 = {{tmp_10_fu_982_p1}, {1'd0}};

assign tmp_fu_1028_p2 = ($signed(3'd7) + $signed(tmp_12_fu_998_p1));

assign tmp_i_fu_986_p2 = (11'd4 + tmp_10_fu_982_p1);

assign tmp_i_i_i_fu_2891_p2 = (overflow_fu_2877_p2 | isneg_reg_4108);

assign tmp_s_fu_1170_p2 = ($signed(3'd7) + $signed(tmp_15_fu_1006_p1));

assign ult_fu_1196_p2 = ((t_V_reg_939 < tmp_8_fu_974_p1) ? 1'b1 : 1'b0);

assign x_fu_1801_p3 = ((sel_tmp2_fu_1795_p2[0:0] === 1'b1) ? p_p2_i_i_cast_cast39_s_fu_1764_p1 : sel_tmp_fu_1776_p3);

endmodule //Filter2D
