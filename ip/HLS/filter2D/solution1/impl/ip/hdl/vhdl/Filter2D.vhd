-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_0_V_0_empty_n : IN STD_LOGIC;
    p_kernel_val_0_V_0_read : OUT STD_LOGIC;
    p_kernel_val_0_V_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_0_V_1_empty_n : IN STD_LOGIC;
    p_kernel_val_0_V_1_read : OUT STD_LOGIC;
    p_kernel_val_0_V_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_0_V_2_empty_n : IN STD_LOGIC;
    p_kernel_val_0_V_2_read : OUT STD_LOGIC;
    p_kernel_val_1_V_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_1_V_0_empty_n : IN STD_LOGIC;
    p_kernel_val_1_V_0_read : OUT STD_LOGIC;
    p_kernel_val_1_V_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_1_V_1_empty_n : IN STD_LOGIC;
    p_kernel_val_1_V_1_read : OUT STD_LOGIC;
    p_kernel_val_1_V_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_1_V_2_empty_n : IN STD_LOGIC;
    p_kernel_val_1_V_2_read : OUT STD_LOGIC;
    p_kernel_val_2_V_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_2_V_0_empty_n : IN STD_LOGIC;
    p_kernel_val_2_V_0_read : OUT STD_LOGIC;
    p_kernel_val_2_V_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_2_V_1_empty_n : IN STD_LOGIC;
    p_kernel_val_2_V_1_read : OUT STD_LOGIC;
    p_kernel_val_2_V_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_2_V_2_empty_n : IN STD_LOGIC;
    p_kernel_val_2_V_2_read : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_i_reg_1885 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond388_i_i_reg_1885 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1916 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1776 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_reg_1767 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_kernel_val_0_V_0_blk_n : STD_LOGIC;
    signal p_kernel_val_0_V_1_blk_n : STD_LOGIC;
    signal p_kernel_val_0_V_2_blk_n : STD_LOGIC;
    signal p_kernel_val_1_V_0_blk_n : STD_LOGIC;
    signal p_kernel_val_1_V_1_blk_n : STD_LOGIC;
    signal p_kernel_val_1_V_2_blk_n : STD_LOGIC;
    signal p_kernel_val_2_V_0_blk_n : STD_LOGIC;
    signal p_kernel_val_2_V_1_blk_n : STD_LOGIC;
    signal p_kernel_val_2_V_2_blk_n : STD_LOGIC;
    signal t_V_1_reg_486 : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_497 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op200_read_state7 : BOOLEAN;
    signal ap_predicate_op201_read_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter3_reg_497 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_504_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_11_fu_508_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_fu_512_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_fu_520_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_i_fu_526_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_536_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_135_cast_cast_i_fu_558_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_562_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal OP2_V_0_i_fu_580_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_i_reg_1698 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_1_i_fu_584_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_1_i_reg_1703 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_2_i_fu_588_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_2_i_reg_1708 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_i_fu_592_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_i_reg_1713 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_1_i_fu_596_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_1_i_reg_1718 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_2_i_fu_600_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_2_i_reg_1723 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_i_fu_604_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_i_reg_1728 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_1_i_fu_608_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_1_i_reg_1733 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_2_i_fu_612_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_2_i_reg_1738 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_cast_cast_i_fu_630_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_634_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_640_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_655_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1762 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_2_i_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond389_i_i_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_1771 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_i_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_i_reg_1781 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_1_i_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_1_i_reg_1785 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_i_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_i_reg_1789 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_i_fu_704_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_118_i_reg_1796 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_reg_1804 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_i_fu_718_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_i_reg_1809 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_i_fu_724_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_i_reg_1814 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_reg_1822 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_i_fu_738_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_1_i_reg_1827 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_i_fu_744_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_i_reg_1832 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_38_reg_1840 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_i_fu_758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_2_i_reg_1845 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_45_fu_899_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_reg_1850 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_3_fu_923_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_reg_1855 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_947_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_reg_1860 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1865 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_46_fu_965_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_46_reg_1870 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_i_fu_970_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_i_reg_1875 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_i_fu_974_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_i_reg_1880 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_i_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond388_i_i_reg_1885 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond388_i_i_reg_1885 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_987_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ImagLoc_x_fu_1009_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_1894 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_50_reg_1900 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_i_fu_1037_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_i_reg_1906 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_i_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_or_cond_i_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_1105_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1920 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_52_fu_1113_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_reg_1925 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_i_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_reg_1930 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_brmerge_i_reg_1930 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1937 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_1_t_i_fu_1132_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_1_t_i_reg_1943 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1950 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1950 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1956 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1956 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_1962 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal col_buf_0_val_0_0_fu_1165_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1967 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_1975 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1183_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1980 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1201_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1988 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_1252_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1996 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1996 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1996 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1996 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_1266_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_2002 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_2002 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_2002 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_reg_2022 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_17_reg_2027 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_0_i_fu_1336_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_0_i_reg_2032 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_1_i_fu_1345_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_1_i_reg_2037 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_2_1_i_fu_1358_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_2_1_i_reg_2047 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1543_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_0_1_i_reg_2052 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal grp_fu_1550_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp21_reg_2058 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1557_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp26_reg_2064 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_1_i_fu_1402_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_4_1_i_reg_2069 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_2_1_2_i_fu_1411_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_1_2_i_reg_2074 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_1416_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_reg_2079 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_1420_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_reg_2084 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1564_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp25_reg_2089 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal tmp_57_fu_1427_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_reg_2094 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_tmp_57_reg_2094 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_1445_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_reg_2099 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_1_i_fu_1449_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_4_2_1_i_reg_2104 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_2_2_2_i_fu_1458_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_2_2_i_reg_2109 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_fu_1463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_reg_2114 : STD_LOGIC_VECTOR (7 downto 0);
    signal isneg_reg_2119 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1491_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_2125 : STD_LOGIC_VECTOR (7 downto 0);
    signal not_i_i_i_i_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_i_i_i_i_reg_2130 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter3_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_475 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_58_i_fu_1125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_298 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_302 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_306 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_310 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_1280_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_322 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_326 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_330 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_338 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_516_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_134_i_fu_544_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_135_i_fu_552_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_532_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_568_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_fu_616_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_i_fu_624_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_572_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_540_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_671_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_cast_i_fu_646_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_fu_764_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_i_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_i_fu_787_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i425_i_cast_cast_fu_792_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_33_fu_806_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_1_i_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_1_i_fu_829_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_37_fu_843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_2_i_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_2_i_fu_866_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_8_i_fu_801_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_132_i_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_883_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_fu_887_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_i_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_880_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_891_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_fu_839_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_1_i_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_907_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_1_i_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_920_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_912_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_fu_876_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_2_i_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_931_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_2_i_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_944_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_936_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_fu_960_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_49_fu_993_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_1_cast_i_fu_978_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_51_fu_1023_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_1031_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp1_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_cast19_s_fu_1068_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_cast_cast_s_fu_1050_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_fu_1075_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_i_not_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1080_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_i_fu_1122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1154_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1172_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1190_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1244_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1258_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_1272_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_0_i_fu_1336_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_0_i_fu_1336_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_1_i_fu_1345_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_1_i_fu_1345_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_2_1_i_fu_1358_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_2_1_i_fu_1358_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_0_1_cast_s_fu_1392_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp21_cast_fu_1395_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_2_1_2_i_fu_1411_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_1_2_i_fu_1411_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1398_p2 : STD_LOGIC_VECTOR (16 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_19_fu_1398_p2 : signal is "no";
    signal tmp_140_1_2_cast_i_fu_1433_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_4_1_cast_i_fu_1430_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp24_fu_1436_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp25_cast_fu_1442_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_2_2_2_i_fu_1458_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_2_2_i_fu_1458_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_140_2_2_i_fu_1470_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_4_2_1_cast_s_fu_1467_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_2_fu_1477_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_21_fu_1473_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_i_i_i_fu_1496_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_i_i_i_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_i_fu_1522_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1543_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1543_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1550_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1550_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1557_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1557_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1564_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1564_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1543_ce : STD_LOGIC;
    signal grp_fu_1550_ce : STD_LOGIC;
    signal grp_fu_1557_ce : STD_LOGIC;
    signal grp_fu_1564_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1543_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1550_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1557_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1564_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_0_i_fu_1336_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_1_2_i_fu_1411_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_1_i_fu_1345_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_2_1_i_fu_1358_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_2_2_i_fu_1458_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_1361 : BOOLEAN;

    component filter2D_hls_mux_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter2D_hls_mac_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component filter2D_hls_mac_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component Filter2D_k_buf_0_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1937,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => reg_497);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1950,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1956,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    filter2D_hls_mux_g8j_U25 : component filter2D_hls_mux_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_318,
        din1 => right_border_buf_0_1_fu_322,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_i_reg_1943,
        dout => tmp_10_fu_1154_p5);

    filter2D_hls_mux_g8j_U26 : component filter2D_hls_mux_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_330,
        din1 => right_border_buf_0_4_fu_334,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_i_reg_1943,
        dout => tmp_12_fu_1172_p5);

    filter2D_hls_mux_g8j_U27 : component filter2D_hls_mux_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_338,
        din1 => right_border_buf_0_2_fu_326,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_i_reg_1943,
        dout => tmp_13_fu_1190_p5);

    filter2D_hls_mux_g8j_U28 : component filter2D_hls_mux_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1967,
        din1 => col_buf_0_val_1_0_reg_1980,
        din2 => col_buf_0_val_2_0_reg_1988,
        din3 => tmp_46_reg_1870,
        dout => tmp_14_fu_1244_p5);

    filter2D_hls_mux_g8j_U29 : component filter2D_hls_mux_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1967,
        din1 => col_buf_0_val_1_0_reg_1980,
        din2 => col_buf_0_val_2_0_reg_1988,
        din3 => row_assign_8_1_t_i_reg_1875,
        dout => tmp_15_fu_1258_p5);

    filter2D_hls_mux_g8j_U30 : component filter2D_hls_mux_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1967,
        din1 => col_buf_0_val_1_0_reg_1980,
        din2 => col_buf_0_val_2_0_reg_1988,
        din3 => row_assign_8_2_t_i_reg_1880,
        dout => tmp_18_fu_1272_p5);

    filter2D_hls_mac_hbi_U31 : component filter2D_hls_mac_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1543_p0,
        din1 => grp_fu_1543_p1,
        din2 => r_V_2_0_i_reg_2032,
        ce => grp_fu_1543_ce,
        dout => grp_fu_1543_p3);

    filter2D_hls_mac_hbi_U32 : component filter2D_hls_mac_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1550_p0,
        din1 => grp_fu_1550_p1,
        din2 => r_V_2_1_i_reg_2037,
        ce => grp_fu_1550_ce,
        dout => grp_fu_1550_p3);

    filter2D_hls_mac_hbi_U33 : component filter2D_hls_mac_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1557_p0,
        din1 => grp_fu_1557_p1,
        din2 => r_V_2_2_1_i_reg_2047,
        ce => grp_fu_1557_ce,
        dout => grp_fu_1557_p3);

    filter2D_hls_mac_ibs_U34 : component filter2D_hls_mac_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1564_p0,
        din1 => grp_fu_1564_p1,
        din2 => tmp26_reg_2064,
        ce => grp_fu_1564_ce,
        dout => grp_fu_1564_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond389_i_i_fu_650_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_i_fu_982_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter3_state8)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_1_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_fu_982_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_1_reg_486 <= j_V_fu_987_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_1_reg_486 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                t_V_reg_475 <= i_V_reg_1762;
            elsif ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_475 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_fu_982_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLoc_x_reg_1894 <= ImagLoc_x_fu_1009_p2;
                or_cond_i_i_reg_1912 <= or_cond_i_i_fu_1045_p2;
                p_p2_i_i_i_reg_1906 <= p_p2_i_i_i_fu_1037_p3;
                tmp_50_reg_1900 <= ImagLoc_x_fu_1009_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                OP2_V_0_1_i_reg_1703 <= OP2_V_0_1_i_fu_584_p1;
                OP2_V_0_2_i_reg_1708 <= OP2_V_0_2_i_fu_588_p1;
                OP2_V_0_i_reg_1698 <= OP2_V_0_i_fu_580_p1;
                OP2_V_1_1_i_reg_1718 <= OP2_V_1_1_i_fu_596_p1;
                OP2_V_1_2_i_reg_1723 <= OP2_V_1_2_i_fu_600_p1;
                OP2_V_1_i_reg_1713 <= OP2_V_1_i_fu_592_p1;
                OP2_V_2_1_i_reg_1733 <= OP2_V_2_1_i_fu_608_p1;
                OP2_V_2_2_i_reg_1738 <= OP2_V_2_2_i_fu_612_p1;
                OP2_V_2_i_reg_1728 <= OP2_V_2_i_fu_604_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond388_i_i_reg_1885 <= exitcond388_i_i_reg_1885;
                ap_reg_pp0_iter1_or_cond_i_i_reg_1912 <= or_cond_i_i_reg_1912;
                exitcond388_i_i_reg_1885 <= exitcond388_i_i_fu_982_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_brmerge_i_reg_1930 <= brmerge_i_reg_1930;
                ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 <= ap_reg_pp0_iter1_exitcond388_i_i_reg_1885;
                ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916 <= or_cond_i_i_i_reg_1916;
                ap_reg_pp0_iter2_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter1_or_cond_i_i_reg_1912;
                ap_reg_pp0_iter3_exitcond388_i_i_reg_1885 <= ap_reg_pp0_iter2_exitcond388_i_i_reg_1885;
                ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1950 <= k_buf_0_val_4_addr_reg_1950;
                ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1956 <= k_buf_0_val_5_addr_reg_1956;
                ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 <= ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916;
                ap_reg_pp0_iter3_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter2_or_cond_i_i_reg_1912;
                ap_reg_pp0_iter3_reg_497 <= reg_497;
                ap_reg_pp0_iter4_exitcond388_i_i_reg_1885 <= ap_reg_pp0_iter3_exitcond388_i_i_reg_1885;
                ap_reg_pp0_iter4_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter3_or_cond_i_i_reg_1912;
                ap_reg_pp0_iter5_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter4_or_cond_i_i_reg_1912;
                ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1996 <= src_kernel_win_0_va_6_reg_1996;
                ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_2002 <= src_kernel_win_0_va_7_reg_2002;
                ap_reg_pp0_iter6_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter5_or_cond_i_i_reg_1912;
                ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1996 <= ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1996;
                ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_2002 <= ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_2002;
                ap_reg_pp0_iter7_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter6_or_cond_i_i_reg_1912;
                ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1996 <= ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1996;
                ap_reg_pp0_iter8_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter7_or_cond_i_i_reg_1912;
                ap_reg_pp0_iter8_tmp_57_reg_2094 <= tmp_57_reg_2094;
                ap_reg_pp0_iter9_or_cond_i_i_reg_1912 <= ap_reg_pp0_iter8_or_cond_i_i_reg_1912;
                src_kernel_win_0_va_6_reg_1996 <= src_kernel_win_0_va_6_fu_1252_p3;
                src_kernel_win_0_va_7_reg_2002 <= src_kernel_win_0_va_7_fu_1266_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_i_reg_1930 <= brmerge_i_fu_1117_p2;
                or_cond_i_i_i_reg_1916 <= or_cond_i_i_i_fu_1062_p2;
                tmp_52_reg_1925 <= tmp_52_fu_1113_p1;
                x_reg_1920 <= x_fu_1105_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_assign_1_t_i_reg_1943 <= col_assign_1_t_i_fu_1132_p2;
                k_buf_0_val_3_addr_reg_1937 <= tmp_58_i_fu_1125_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1950 <= tmp_58_i_fu_1125_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1956 <= tmp_58_i_fu_1125_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_0_reg_1967 <= col_buf_0_val_0_0_fu_1165_p3;
                col_buf_0_val_1_0_reg_1980 <= col_buf_0_val_1_0_fu_1183_p3;
                col_buf_0_val_2_0_reg_1988 <= col_buf_0_val_2_0_fu_1201_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1762 <= i_V_fu_655_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_i_fu_650_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1776 <= icmp_fu_681_p2;
                p_assign_6_1_i_reg_1814 <= p_assign_6_1_i_fu_724_p2;
                p_assign_6_2_i_reg_1832 <= p_assign_6_2_i_fu_744_p2;
                p_assign_7_1_i_reg_1827 <= p_assign_7_1_i_fu_738_p2;
                p_assign_7_2_i_reg_1845 <= p_assign_7_2_i_fu_758_p2;
                p_assign_7_i_reg_1809 <= p_assign_7_i_fu_718_p2;
                tmp_115_i_reg_1789 <= tmp_115_i_fu_699_p2;
                tmp_118_i_reg_1796 <= tmp_118_i_fu_704_p2;
                tmp_2_i_reg_1767 <= tmp_2_i_fu_661_p2;
                tmp_32_reg_1804 <= tmp_118_i_fu_704_p2(11 downto 11);
                tmp_34_reg_1822 <= p_assign_6_1_i_fu_724_p2(11 downto 11);
                tmp_38_reg_1840 <= p_assign_6_2_i_fu_744_p2(11 downto 11);
                tmp_93_1_i_reg_1785 <= tmp_93_1_i_fu_693_p2;
                tmp_93_i_reg_1781 <= tmp_93_i_fu_687_p2;
                ult_reg_1771 <= ult_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter8_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                isneg_reg_2119 <= p_Val2_2_fu_1477_p2(19 downto 19);
                not_i_i_i_i_reg_2130 <= not_i_i_i_i_fu_1506_p2;
                p_Val2_1_reg_2125 <= p_Val2_1_fu_1491_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_load_reg_1962 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_1975 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_0_1_i_reg_2052 <= grp_fu_1543_p3;
                tmp21_reg_2058 <= grp_fu_1550_p3;
                tmp26_reg_2064 <= grp_fu_1557_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_1_i_reg_2069 <= p_Val2_4_1_i_fu_1402_p2;
                r_V_2_1_2_i_reg_2074 <= r_V_2_1_2_i_fu_1411_p2;
                tmp_55_reg_2079 <= tmp_55_fu_1416_p1;
                tmp_56_reg_2084 <= tmp_56_fu_1420_p1;
                tmp_57_reg_2094 <= tmp_57_fu_1427_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_2_1_i_reg_2104 <= p_Val2_4_2_1_i_fu_1449_p2;
                r_V_2_2_2_i_reg_2109 <= r_V_2_2_2_i_fu_1458_p2;
                tmp_20_reg_2099 <= tmp_20_fu_1445_p2;
                tmp_58_reg_2114 <= tmp_58_fu_1463_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_2_0_i_reg_2032 <= r_V_2_0_i_fu_1336_p2;
                r_V_2_1_i_reg_2037 <= r_V_2_1_i_fu_1345_p2;
                r_V_2_2_1_i_reg_2047 <= r_V_2_2_1_i_fu_1358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op201_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op200_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_497 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                rev_reg_1865 <= rev_fu_955_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_322 <= right_border_buf_0_s_fu_318;
                right_border_buf_0_2_fu_326 <= right_border_buf_0_5_fu_338;
                right_border_buf_0_3_fu_330 <= col_buf_0_val_1_0_fu_1183_p3;
                right_border_buf_0_4_fu_334 <= right_border_buf_0_3_fu_330;
                right_border_buf_0_5_fu_338 <= col_buf_0_val_2_0_fu_1201_p3;
                right_border_buf_0_s_fu_318 <= col_buf_0_val_0_0_fu_1165_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_115_i_reg_1789 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                row_assign_8_1_t_i_reg_1875 <= row_assign_8_1_t_i_fu_970_p2;
                row_assign_8_2_t_i_reg_1880 <= row_assign_8_2_t_i_fu_974_p2;
                tmp_46_reg_1870 <= tmp_46_fu_965_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_2022 <= src_kernel_win_0_va_2_fu_302;
                src_kernel_win_0_va_17_reg_2027 <= src_kernel_win_0_va_4_fu_310;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_298 <= src_kernel_win_0_va_fu_294;
                src_kernel_win_0_va_3_fu_306 <= src_kernel_win_0_va_16_reg_2022;
                src_kernel_win_0_va_5_fu_314 <= src_kernel_win_0_va_17_reg_2027;
                src_kernel_win_0_va_fu_294 <= src_kernel_win_0_va_6_reg_1996;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_2_fu_302 <= src_kernel_win_0_va_7_fu_1266_p3;
                src_kernel_win_0_va_4_fu_310 <= src_kernel_win_0_va_8_fu_1280_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp25_reg_2089 <= grp_fu_1564_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_115_i_reg_1789 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_3_reg_1855 <= tmp_3_fu_923_p3;
                tmp_45_reg_1850 <= tmp_45_fu_899_p3;
                tmp_7_reg_1860 <= tmp_7_fu_947_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_CS_fsm_state2, exitcond389_i_i_fu_650_p2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_i_fu_650_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
        ImagLoc_x_cast_cast_s_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_reg_1894),13));

    ImagLoc_x_fu_1009_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_1_cast_i_fu_978_p1));
        OP2_V_0_1_i_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_dout),16));

        OP2_V_0_2_i_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_dout),16));

        OP2_V_0_i_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_0_dout),16));

        OP2_V_1_1_i_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_1_dout),16));

        OP2_V_1_2_i_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_2_dout),16));

        OP2_V_1_i_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_dout),16));

        OP2_V_2_1_i_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_1_dout),16));

        OP2_V_2_2_i_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_2_dout),16));

        OP2_V_2_i_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_dout),16));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_i_reg_1912, ap_predicate_op200_read_state7, ap_predicate_op201_read_state7)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op201_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op200_read_state7 = ap_const_boolean_1)))) or ((ap_reg_pp0_iter9_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_i_reg_1912, ap_predicate_op200_read_state7, ap_predicate_op201_read_state7)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op201_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op200_read_state7 = ap_const_boolean_1)))) or ((ap_reg_pp0_iter9_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_i_reg_1912, ap_predicate_op200_read_state7, ap_predicate_op201_read_state7)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op201_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op200_read_state7 = ap_const_boolean_1)))) or ((ap_reg_pp0_iter9_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
                ap_block_state1 <= ((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp0_stage0_iter10_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter9_or_cond_i_i_reg_1912)
    begin
                ap_block_state15_pp0_stage0_iter10 <= ((ap_reg_pp0_iter9_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op200_read_state7, ap_predicate_op201_read_state7)
    begin
                ap_block_state7_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op201_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op200_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1361_assign_proc : process(ap_block_pp0_stage0, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916, ap_enable_reg_pp0_iter4)
    begin
                ap_condition_1361 <= ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter3_state8_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, exitcond389_i_i_fu_650_p2)
    begin
        if (((exitcond389_i_i_fu_650_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op200_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_i_reg_1885, or_cond_i_i_i_reg_1916, icmp_reg_1776)
    begin
                ap_predicate_op200_read_state7 <= ((or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1885 = ap_const_lv1_0));
    end process;


    ap_predicate_op201_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_i_reg_1885, or_cond_i_i_i_reg_1916, icmp_reg_1776, tmp_2_i_reg_1767)
    begin
                ap_predicate_op201_read_state7 <= ((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1885 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond389_i_i_fu_650_p2)
    begin
        if (((exitcond389_i_i_fu_650_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_fu_1117_p2 <= (tmp_6_i_fu_1058_p2 or rev_reg_1865);
    col_assign_1_t_i_fu_1132_p2 <= std_logic_vector(unsigned(tmp_s_fu_640_p2) - unsigned(tmp_52_reg_1925));
        col_assign_cast_i_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1920),32));

    col_buf_0_val_0_0_fu_1165_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_pp0_iter2_brmerge_i_reg_1930(0) = '1') else 
        tmp_10_fu_1154_p5;
    col_buf_0_val_1_0_fu_1183_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_pp0_iter2_brmerge_i_reg_1930(0) = '1') else 
        tmp_12_fu_1172_p5;
    col_buf_0_val_2_0_fu_1201_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter2_brmerge_i_reg_1930(0) = '1') else 
        tmp_13_fu_1190_p5;
    exitcond388_i_i_fu_982_p2 <= "1" when (t_V_1_reg_486 = tmp_i_fu_520_p2) else "0";
    exitcond389_i_i_fu_650_p2 <= "1" when (t_V_reg_475 = tmp_1_i_fu_526_p2) else "0";

    grp_fu_1543_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1543_ce <= ap_const_logic_1;
        else 
            grp_fu_1543_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1543_p0 <= grp_fu_1543_p00(8 - 1 downto 0);
    grp_fu_1543_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_310),16));
    grp_fu_1543_p1 <= OP2_V_0_1_i_reg_1703(8 - 1 downto 0);

    grp_fu_1550_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1550_ce <= ap_const_logic_1;
        else 
            grp_fu_1550_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1550_p0 <= grp_fu_1550_p00(8 - 1 downto 0);
    grp_fu_1550_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_fu_1280_p3),16));
    grp_fu_1550_p1 <= OP2_V_0_2_i_reg_1708(8 - 1 downto 0);

    grp_fu_1557_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1557_ce <= ap_const_logic_1;
        else 
            grp_fu_1557_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1557_p0 <= grp_fu_1557_p00(8 - 1 downto 0);
    grp_fu_1557_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_2_fu_302),16));
    grp_fu_1557_p1 <= OP2_V_1_1_i_reg_1718(8 - 1 downto 0);

    grp_fu_1564_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1564_ce <= ap_const_logic_1;
        else 
            grp_fu_1564_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1564_p0 <= grp_fu_1564_p00(8 - 1 downto 0);
    grp_fu_1564_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_298),16));
    grp_fu_1564_p1 <= OP2_V_2_i_reg_1728(8 - 1 downto 0);
    i_V_fu_655_p2 <= std_logic_vector(unsigned(t_V_reg_475) + unsigned(ap_const_lv11_1));
    icmp1_fu_1003_p2 <= "0" when (tmp_49_fu_993_p4 = ap_const_lv10_0) else "1";
    icmp_fu_681_p2 <= "0" when (tmp_29_fu_671_p4 = ap_const_lv10_0) else "1";
    j_V_fu_987_p2 <= std_logic_vector(unsigned(t_V_1_reg_486) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_58_i_fu_1125_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_block_pp0_stage0_11001, tmp_93_i_reg_1781, ap_reg_pp0_iter2_exitcond388_i_i_reg_1885, ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (tmp_93_i_reg_1781 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_block_pp0_stage0_11001, tmp_93_i_reg_1781, ap_reg_pp0_iter2_exitcond388_i_i_reg_1885, ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (tmp_93_i_reg_1781 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_58_i_fu_1125_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_block_pp0_stage0_11001, tmp_93_1_i_reg_1785, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (tmp_93_1_i_reg_1785 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_reg_pp0_iter3_reg_497, tmp_93_1_i_reg_1785, k_buf_0_val_3_load_reg_1962, ap_condition_1361)
    begin
        if ((ap_const_boolean_1 = ap_condition_1361)) then
            if (((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_1962;
            elsif (((tmp_93_1_i_reg_1785 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= ap_reg_pp0_iter3_reg_497;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_block_pp0_stage0_11001, tmp_93_1_i_reg_1785, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (tmp_93_1_i_reg_1785 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_58_i_fu_1125_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_block_pp0_stage0_11001, tmp_93_i_reg_1781, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (tmp_93_i_reg_1781 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_reg_pp0_iter3_reg_497, tmp_93_i_reg_1781, k_buf_0_val_4_load_reg_1975, ap_condition_1361)
    begin
        if ((ap_const_boolean_1 = ap_condition_1361)) then
            if (((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_1975;
            elsif (((tmp_93_i_reg_1781 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= ap_reg_pp0_iter3_reg_497;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_reg_1776, tmp_2_i_reg_1767, ap_block_pp0_stage0_11001, tmp_93_i_reg_1781, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (tmp_93_i_reg_1781 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_i_fu_1506_p2 <= "0" when (p_Result_3_i_i_i_fu_1496_p4 = ap_const_lv12_0) else "1";
    or_cond_i424_i_1_i_fu_823_p2 <= (tmp_120_1_i_fu_819_p2 and rev2_fu_813_p2);
    or_cond_i424_i_2_i_fu_860_p2 <= (tmp_120_2_i_fu_856_p2 and rev3_fu_850_p2);
    or_cond_i424_i_i_fu_781_p2 <= (tmp_120_i_fu_777_p2 and rev1_fu_771_p2);
    or_cond_i_i_fu_1045_p2 <= (icmp_reg_1776 and icmp1_fu_1003_p2);
    or_cond_i_i_i_fu_1062_p2 <= (tmp_6_i_fu_1058_p2 and rev4_fu_1053_p2);
    overflow_fu_1517_p2 <= (tmp_2_i_i_i_fu_1512_p2 and not_i_i_i_i_reg_2130);
    p_Result_3_i_i_i_fu_1496_p4 <= p_Val2_2_fu_1477_p2(19 downto 8);
    p_Val2_1_fu_1491_p2 <= std_logic_vector(unsigned(tmp_58_reg_2114) + unsigned(tmp_21_fu_1473_p2));
    p_Val2_2_fu_1477_p2 <= std_logic_vector(signed(tmp_140_2_2_i_fu_1470_p1) + signed(p_Val2_4_2_1_cast_s_fu_1467_p1));
        p_Val2_4_0_1_cast_s_fu_1392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_0_1_i_reg_2052),18));

        p_Val2_4_1_cast_i_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_1_i_reg_2069),19));

    p_Val2_4_1_i_fu_1402_p2 <= std_logic_vector(signed(p_Val2_4_0_1_cast_s_fu_1392_p1) + signed(tmp21_cast_fu_1395_p1));
        p_Val2_4_2_1_cast_s_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_2_1_i_reg_2104),20));

    p_Val2_4_2_1_i_fu_1449_p2 <= std_logic_vector(unsigned(tmp24_fu_1436_p2) + unsigned(tmp25_cast_fu_1442_p1));
    p_assign_1_fu_1031_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_1_cast_i_fu_978_p1));
    p_assign_2_fu_1075_p2 <= std_logic_vector(unsigned(tmp_10_cast_cast_i_fu_630_p1) - unsigned(p_p2_i_i_cast_cast19_s_fu_1068_p1));
    p_assign_6_1_i_fu_724_p2 <= std_logic_vector(unsigned(t_V_cast_i_fu_646_p1) + unsigned(ap_const_lv12_FFE));
    p_assign_6_2_i_fu_744_p2 <= std_logic_vector(unsigned(t_V_cast_i_fu_646_p1) + unsigned(ap_const_lv12_FFD));
    p_assign_7_1_i_fu_738_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(t_V_cast_i_fu_646_p1));
    p_assign_7_2_i_fu_758_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) - unsigned(t_V_cast_i_fu_646_p1));
    p_assign_7_i_fu_718_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_cast_i_fu_646_p1));
    p_assign_8_i_fu_801_p2 <= std_logic_vector(unsigned(tmp_135_cast_cast_i_fu_558_p1) - unsigned(p_p2_i425_i_cast_cast_fu_792_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_i_reg_1912)
    begin
        if (((ap_reg_pp0_iter9_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_mux_i_i_cast_i_fu_1522_p3 when (tmp_i_i_i_fu_1530_p2(0) = '1') else 
        p_Val2_1_reg_2125;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_i_reg_1912, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter9_or_cond_i_i_reg_1912 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_0_V_0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_0_blk_n <= p_kernel_val_0_V_0_empty_n;
        else 
            p_kernel_val_0_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_0_V_0_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_0_read <= ap_const_logic_1;
        else 
            p_kernel_val_0_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_0_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_1_blk_n <= p_kernel_val_0_V_1_empty_n;
        else 
            p_kernel_val_0_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_0_V_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_1_read <= ap_const_logic_1;
        else 
            p_kernel_val_0_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_0_V_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_2_blk_n <= p_kernel_val_0_V_2_empty_n;
        else 
            p_kernel_val_0_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_0_V_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_2_read <= ap_const_logic_1;
        else 
            p_kernel_val_0_V_2_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_1_V_0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_1_V_0_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_0_blk_n <= p_kernel_val_1_V_0_empty_n;
        else 
            p_kernel_val_1_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_1_V_0_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_0_read <= ap_const_logic_1;
        else 
            p_kernel_val_1_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_1_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_1_V_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_1_blk_n <= p_kernel_val_1_V_1_empty_n;
        else 
            p_kernel_val_1_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_1_V_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_1_read <= ap_const_logic_1;
        else 
            p_kernel_val_1_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_1_V_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_1_V_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_2_blk_n <= p_kernel_val_1_V_2_empty_n;
        else 
            p_kernel_val_1_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_1_V_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_2_read <= ap_const_logic_1;
        else 
            p_kernel_val_1_V_2_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_2_V_0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_2_V_0_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_0_blk_n <= p_kernel_val_2_V_0_empty_n;
        else 
            p_kernel_val_2_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_2_V_0_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_0_read <= ap_const_logic_1;
        else 
            p_kernel_val_2_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_2_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_2_V_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_1_blk_n <= p_kernel_val_2_V_1_empty_n;
        else 
            p_kernel_val_2_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_2_V_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_1_read <= ap_const_logic_1;
        else 
            p_kernel_val_2_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_2_V_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_2_blk_n <= p_kernel_val_2_V_2_empty_n;
        else 
            p_kernel_val_2_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_2_V_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_2_read <= ap_const_logic_1;
        else 
            p_kernel_val_2_V_2_read <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_i_fu_1522_p3 <= 
        ap_const_lv8_FF when (tmp_2_i_i_i_fu_1512_p2(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i425_i_1_i_fu_829_p3 <= 
        p_assign_7_1_i_reg_1827 when (tmp_34_reg_1822(0) = '1') else 
        p_assign_6_1_i_reg_1814;
    p_p2_i425_i_2_i_fu_866_p3 <= 
        p_assign_7_2_i_reg_1845 when (tmp_38_reg_1840(0) = '1') else 
        p_assign_6_2_i_reg_1832;
        p_p2_i425_i_cast_cast_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i425_i_i_fu_787_p3),13));

    p_p2_i425_i_i_fu_787_p3 <= 
        p_assign_7_i_reg_1809 when (tmp_32_reg_1804(0) = '1') else 
        tmp_118_i_reg_1796;
        p_p2_i_i_cast_cast19_s_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_i_reg_1906),13));

    p_p2_i_i_i_fu_1037_p3 <= 
        p_assign_1_fu_1031_p2 when (tmp_51_fu_1023_p3(0) = '1') else 
        ImagLoc_x_fu_1009_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond388_i_i_reg_1885, or_cond_i_i_i_reg_1916, icmp_reg_1776, tmp_2_i_reg_1767)
    begin
        if ((((tmp_2_i_reg_1767 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_i_reg_1916 = ap_const_lv1_1) and (icmp_reg_1776 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op200_read_state7, ap_predicate_op201_read_state7, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op201_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op200_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_2_0_i_fu_1336_p0 <= r_V_2_0_i_fu_1336_p00(8 - 1 downto 0);
    r_V_2_0_i_fu_1336_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_314),16));
    r_V_2_0_i_fu_1336_p1 <= OP2_V_0_i_reg_1698(8 - 1 downto 0);
    r_V_2_0_i_fu_1336_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &r_V_2_0_i_fu_1336_p0) * signed(r_V_2_0_i_fu_1336_p1))), 16));
    r_V_2_1_2_i_fu_1411_p0 <= r_V_2_1_2_i_fu_1411_p00(8 - 1 downto 0);
    r_V_2_1_2_i_fu_1411_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_2002),16));
    r_V_2_1_2_i_fu_1411_p1 <= OP2_V_1_2_i_reg_1723(8 - 1 downto 0);
    r_V_2_1_2_i_fu_1411_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &r_V_2_1_2_i_fu_1411_p0) * signed(r_V_2_1_2_i_fu_1411_p1))), 16));
    r_V_2_1_i_fu_1345_p0 <= r_V_2_1_i_fu_1345_p00(8 - 1 downto 0);
    r_V_2_1_i_fu_1345_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_306),16));
    r_V_2_1_i_fu_1345_p1 <= OP2_V_1_i_reg_1713(8 - 1 downto 0);
    r_V_2_1_i_fu_1345_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &r_V_2_1_i_fu_1345_p0) * signed(r_V_2_1_i_fu_1345_p1))), 16));
    r_V_2_2_1_i_fu_1358_p0 <= r_V_2_2_1_i_fu_1358_p00(8 - 1 downto 0);
    r_V_2_2_1_i_fu_1358_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_294),16));
    r_V_2_2_1_i_fu_1358_p1 <= OP2_V_2_1_i_reg_1733(8 - 1 downto 0);
    r_V_2_2_1_i_fu_1358_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &r_V_2_2_1_i_fu_1358_p0) * signed(r_V_2_2_1_i_fu_1358_p1))), 16));
    r_V_2_2_2_i_fu_1458_p0 <= r_V_2_2_2_i_fu_1458_p00(8 - 1 downto 0);
    r_V_2_2_2_i_fu_1458_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1996),16));
    r_V_2_2_2_i_fu_1458_p1 <= OP2_V_2_2_i_reg_1738(8 - 1 downto 0);
    r_V_2_2_2_i_fu_1458_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &r_V_2_2_2_i_fu_1458_p0) * signed(r_V_2_2_2_i_fu_1458_p1))), 16));
    rev1_fu_771_p2 <= (tmp_31_fu_764_p3 xor ap_const_lv1_1);
    rev2_fu_813_p2 <= (tmp_33_fu_806_p3 xor ap_const_lv1_1);
    rev3_fu_850_p2 <= (tmp_37_fu_843_p3 xor ap_const_lv1_1);
    rev4_fu_1053_p2 <= (tmp_50_reg_1900 xor ap_const_lv1_1);
    rev_fu_955_p2 <= (ult_reg_1771 xor ap_const_lv1_1);
    row_assign_8_1_t_i_fu_970_p2 <= std_logic_vector(unsigned(tmp_fu_562_p2) - unsigned(tmp_3_reg_1855));
    row_assign_8_2_t_i_fu_974_p2 <= std_logic_vector(unsigned(tmp_fu_562_p2) - unsigned(tmp_7_reg_1860));
    sel_tmp7_fu_1094_p2 <= (tmp_6_i_not_fu_1088_p2 or tmp_50_reg_1900);
    sel_tmp8_fu_1099_p2 <= (tmp_8_i_fu_1071_p2 and sel_tmp7_fu_1094_p2);
    sel_tmp_fu_1080_p3 <= 
        ImagLoc_x_cast_cast_s_fu_1050_p1 when (or_cond_i_i_i_fu_1062_p2(0) = '1') else 
        p_assign_2_fu_1075_p2;
    src_kernel_win_0_va_6_fu_1252_p3 <= 
        tmp_14_fu_1244_p5 when (tmp_115_i_reg_1789(0) = '1') else 
        col_buf_0_val_0_0_reg_1967;
    src_kernel_win_0_va_7_fu_1266_p3 <= 
        tmp_15_fu_1258_p5 when (tmp_115_i_reg_1789(0) = '1') else 
        col_buf_0_val_1_0_reg_1980;
    src_kernel_win_0_va_8_fu_1280_p3 <= 
        tmp_18_fu_1272_p5 when (tmp_115_i_reg_1789(0) = '1') else 
        col_buf_0_val_2_0_reg_1988;
    t_V_1_cast_i_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_486),12));
    t_V_cast_i_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_475),12));
        tmp21_cast_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp21_reg_2058),18));

    tmp24_fu_1436_p2 <= std_logic_vector(signed(tmp_140_1_2_cast_i_fu_1433_p1) + signed(p_Val2_4_1_cast_i_fu_1430_p1));
        tmp25_cast_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp25_reg_2089),19));

    tmp_10_cast_cast_i_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_i_fu_624_p2),13));
    tmp_10_i_fu_624_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(tmp_9_i_fu_616_p3));
    tmp_115_i_fu_699_p2 <= "1" when (unsigned(t_V_reg_475) > unsigned(tmp_11_fu_508_p1)) else "0";
    tmp_118_i_fu_704_p2 <= std_logic_vector(unsigned(t_V_cast_i_fu_646_p1) + unsigned(ap_const_lv12_FFF));
    tmp_11_fu_508_p1 <= p_src_rows_V(11 - 1 downto 0);
    tmp_120_1_i_fu_819_p2 <= "1" when (signed(p_assign_6_1_i_reg_1814) < signed(tmp_9_fu_504_p1)) else "0";
    tmp_120_2_i_fu_856_p2 <= "1" when (signed(p_assign_6_2_i_reg_1832) < signed(tmp_9_fu_504_p1)) else "0";
    tmp_120_i_fu_777_p2 <= "1" when (signed(tmp_118_i_reg_1796) < signed(tmp_9_fu_504_p1)) else "0";
    tmp_132_1_i_fu_834_p2 <= "1" when (signed(p_p2_i425_i_1_i_fu_829_p3) < signed(tmp_9_fu_504_p1)) else "0";
    tmp_132_2_i_fu_871_p2 <= "1" when (signed(p_p2_i425_i_2_i_fu_866_p3) < signed(tmp_9_fu_504_p1)) else "0";
    tmp_132_i_fu_796_p2 <= "1" when (signed(p_p2_i425_i_i_fu_787_p3) < signed(tmp_9_fu_504_p1)) else "0";
    tmp_134_i_fu_544_p3 <= (tmp_11_fu_508_p1 & ap_const_lv1_0);
    tmp_135_cast_cast_i_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_135_i_fu_552_p2),13));
    tmp_135_i_fu_552_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) + unsigned(tmp_134_i_fu_544_p3));
        tmp_140_1_2_cast_i_fu_1433_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_1_2_i_reg_2074),19));

        tmp_140_2_2_i_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_2_2_i_reg_2109),20));

    tmp_16_fu_512_p1 <= p_src_cols_V(12 - 1 downto 0);
    tmp_17_fu_516_p1 <= p_src_cols_V(11 - 1 downto 0);
    tmp_19_fu_1398_p2 <= std_logic_vector(signed(tmp21_reg_2058) + signed(p_Val2_4_0_1_i_reg_2052));
    tmp_1_fu_572_p3 <= (tmp_27_fu_568_p1 & ap_const_lv1_0);
    tmp_1_i_fu_526_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_11_fu_508_p1));
    tmp_20_fu_1445_p2 <= std_logic_vector(unsigned(tmp_55_reg_2079) + unsigned(tmp_56_reg_2084));
    tmp_21_fu_1473_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter8_tmp_57_reg_2094) + unsigned(tmp_20_reg_2099));
    tmp_22_fu_532_p1 <= p_src_rows_V(2 - 1 downto 0);
    tmp_23_fu_536_p1 <= p_src_rows_V(2 - 1 downto 0);
    tmp_26_fu_540_p1 <= p_src_cols_V(2 - 1 downto 0);
    tmp_27_fu_568_p1 <= p_src_rows_V(1 - 1 downto 0);
    tmp_29_fu_671_p4 <= t_V_reg_475(10 downto 1);
    tmp_2_fu_912_p3 <= 
        tmp_35_fu_839_p1 when (tmp_132_1_i_fu_834_p2(0) = '1') else 
        tmp_8_fu_907_p2;
    tmp_2_i_fu_661_p2 <= "1" when (unsigned(t_V_reg_475) < unsigned(tmp_11_fu_508_p1)) else "0";
    tmp_2_i_i_i_fu_1512_p2 <= (isneg_reg_2119 xor ap_const_lv1_1);
    tmp_31_fu_764_p3 <= tmp_118_i_reg_1796(11 downto 11);
    tmp_33_fu_806_p3 <= p_assign_6_1_i_reg_1814(11 downto 11);
    tmp_35_fu_839_p1 <= p_p2_i425_i_1_i_fu_829_p3(2 - 1 downto 0);
    tmp_37_fu_843_p3 <= p_assign_6_2_i_reg_1832(11 downto 11);
    tmp_39_fu_876_p1 <= p_p2_i425_i_2_i_fu_866_p3(2 - 1 downto 0);
    tmp_3_fu_923_p3 <= 
        tmp_47_fu_920_p1 when (or_cond_i424_i_1_i_fu_823_p2(0) = '1') else 
        tmp_2_fu_912_p3;
    tmp_40_fu_960_p2 <= std_logic_vector(unsigned(tmp_23_fu_536_p1) + unsigned(ap_const_lv2_3));
    tmp_41_fu_880_p1 <= tmp_118_i_reg_1796(2 - 1 downto 0);
    tmp_42_fu_883_p1 <= p_p2_i425_i_i_fu_787_p3(2 - 1 downto 0);
    tmp_43_fu_887_p1 <= p_assign_8_i_fu_801_p2(2 - 1 downto 0);
    tmp_44_fu_891_p3 <= 
        tmp_42_fu_883_p1 when (tmp_132_i_fu_796_p2(0) = '1') else 
        tmp_43_fu_887_p1;
    tmp_45_fu_899_p3 <= 
        tmp_41_fu_880_p1 when (or_cond_i424_i_i_fu_781_p2(0) = '1') else 
        tmp_44_fu_891_p3;
    tmp_46_fu_965_p2 <= std_logic_vector(unsigned(tmp_40_fu_960_p2) - unsigned(tmp_45_reg_1850));
    tmp_47_fu_920_p1 <= p_assign_6_1_i_reg_1814(2 - 1 downto 0);
    tmp_48_fu_944_p1 <= p_assign_6_2_i_reg_1832(2 - 1 downto 0);
    tmp_49_fu_993_p4 <= t_V_1_reg_486(10 downto 1);
    tmp_4_fu_931_p2 <= std_logic_vector(unsigned(tmp_5_fu_634_p2) - unsigned(tmp_39_fu_876_p1));
    tmp_51_fu_1023_p3 <= ImagLoc_x_fu_1009_p2(11 downto 11);
    tmp_52_fu_1113_p1 <= x_fu_1105_p3(2 - 1 downto 0);
    tmp_55_fu_1416_p1 <= tmp_19_fu_1398_p2(8 - 1 downto 0);
    tmp_56_fu_1420_p1 <= r_V_2_1_2_i_fu_1411_p2(8 - 1 downto 0);
    tmp_57_fu_1427_p1 <= grp_fu_1564_p3(8 - 1 downto 0);
    tmp_58_fu_1463_p1 <= r_V_2_2_2_i_fu_1458_p2(8 - 1 downto 0);
    tmp_58_i_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_i_fu_1122_p1),64));
    tmp_5_fu_634_p2 <= (tmp_1_fu_572_p3 xor ap_const_lv2_2);
    tmp_6_fu_936_p3 <= 
        tmp_39_fu_876_p1 when (tmp_132_2_i_fu_871_p2(0) = '1') else 
        tmp_4_fu_931_p2;
    tmp_6_i_fu_1058_p2 <= "1" when (signed(ImagLoc_x_reg_1894) < signed(tmp_16_fu_512_p1)) else "0";
    tmp_6_i_not_fu_1088_p2 <= (tmp_6_i_fu_1058_p2 xor ap_const_lv1_1);
    tmp_7_fu_947_p3 <= 
        tmp_48_fu_944_p1 when (or_cond_i424_i_2_i_fu_860_p2(0) = '1') else 
        tmp_6_fu_936_p3;
    tmp_8_fu_907_p2 <= std_logic_vector(unsigned(tmp_5_fu_634_p2) - unsigned(tmp_35_fu_839_p1));
    tmp_8_i_fu_1071_p2 <= "1" when (signed(p_p2_i_i_i_reg_1906) < signed(tmp_16_fu_512_p1)) else "0";
    tmp_93_1_i_fu_693_p2 <= "1" when (t_V_reg_475 = ap_const_lv11_0) else "0";
    tmp_93_i_fu_687_p2 <= "1" when (t_V_reg_475 = ap_const_lv11_1) else "0";
    tmp_9_fu_504_p1 <= p_src_rows_V(12 - 1 downto 0);
    tmp_9_i_fu_616_p3 <= (tmp_17_fu_516_p1 & ap_const_lv1_0);
    tmp_fu_562_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_22_fu_532_p1));
    tmp_i_fu_520_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_17_fu_516_p1));
    tmp_i_i_i_fu_1530_p2 <= (overflow_fu_1517_p2 or isneg_reg_2119);
    tmp_s_fu_640_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_26_fu_540_p1));
    ult_fu_666_p2 <= "1" when (unsigned(t_V_reg_475) < unsigned(tmp_11_fu_508_p1)) else "0";
    x_fu_1105_p3 <= 
        p_p2_i_i_cast_cast19_s_fu_1068_p1 when (sel_tmp8_fu_1099_p2(0) = '1') else 
        sel_tmp_fu_1080_p3;
end behav;
