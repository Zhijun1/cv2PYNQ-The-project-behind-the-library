-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gradient_decompositi is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gx_rows_V : IN STD_LOGIC_VECTOR (31 downto 0);
    gx_cols_V : IN STD_LOGIC_VECTOR (31 downto 0);
    gx_data_stream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    gx_data_stream_V_empty_n : IN STD_LOGIC;
    gx_data_stream_V_read : OUT STD_LOGIC;
    gy_data_stream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    gy_data_stream_V_empty_n : IN STD_LOGIC;
    gy_data_stream_V_read : OUT STD_LOGIC;
    gd_data_stream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    gd_data_stream_V_full_n : IN STD_LOGIC;
    gd_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of gradient_decompositi is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gx_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal gy_data_stream_V_blk_n : STD_LOGIC;
    signal gd_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter4_exitcond_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_3_reg_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal exitcond8_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_192_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_626 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_70_reg_640 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_71_reg_651 : STD_LOGIC_VECTOR (15 downto 0);
    signal abs_gx_fu_219_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal abs_gx_reg_662 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_226_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_reg_671 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_gy_fu_240_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal abs_gy_reg_676 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_54_fu_247_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_54_reg_685 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_cond9_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond9_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_696 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond4_reg_696 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_702 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_sel_tmp_reg_702 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_716 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_722 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_727 : STD_LOGIC_VECTOR (0 downto 0);
    signal abs_g_fu_477_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_g_reg_732 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_reg_pp0_iter4_abs_g_reg_732 : STD_LOGIC_VECTOR (13 downto 0);
    signal dir_g_7_fu_597_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal dir_g_7_reg_737 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal t_V_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal abscond_i_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i_fu_209_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal abscond_i8_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i7_fu_230_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_251_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_276_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond8_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_280_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_294_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_325_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev9_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl5_fu_368_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_100_cast1_fu_365_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl5_cast_fu_375_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_58_fu_379_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl3_fu_389_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_fu_400_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl3_cast_fu_396_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl4_cast_fu_407_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_101_cast_fu_385_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_59_fu_411_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_108_cast1_fu_423_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl2_cast_fu_426_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_64_fu_430_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl_fu_440_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_cast_fu_447_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl1_cast_fu_451_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_65_fu_455_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_109_cast_fu_436_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_66_fu_467_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rev10_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dir_g_cast_fu_493_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal dir_g_3_cast_fu_504_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp5_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dir_g_1_fu_481_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp4_fu_516_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp10_demorgan_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dir_g_2_fu_497_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp7_fu_534_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp25_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_demorgan_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_557_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond8_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond8_fu_187_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond8_fu_187_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_3_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_fu_187_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_3_reg_176 <= ap_const_lv32_0;
            elsif (((exitcond_fu_198_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_3_reg_176 <= j_V_fu_203_p2;
            end if; 
        end if;
    end process;

    t_V_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_165 <= i_V_reg_626;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_165 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond_reg_631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                abs_g_reg_732 <= abs_g_fu_477_p2;
                tmp_51_reg_708 <= tmp_51_fu_361_p2;
                tmp_60_reg_716 <= tmp_60_fu_417_p2;
                tmp_67_reg_727 <= tmp_67_fu_471_p2;
                ult_reg_722 <= ult_fu_461_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond_reg_631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                abs_gx_reg_662 <= abs_gx_fu_219_p3;
                abs_gy_reg_676 <= abs_gy_fu_240_p3;
                or_cond4_reg_696 <= or_cond4_fu_349_p2;
                or_cond9_reg_690 <= or_cond9_fu_288_p2;
                sel_tmp_reg_702 <= sel_tmp_fu_355_p2;
                tmp_54_reg_685 <= tmp_54_fu_247_p1;
                tmp_reg_671 <= tmp_fu_226_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond_reg_631 <= exitcond_reg_631;
                exitcond_reg_631 <= exitcond_fu_198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond_reg_631 <= ap_reg_pp0_iter1_exitcond_reg_631;
                ap_reg_pp0_iter3_exitcond_reg_631 <= ap_reg_pp0_iter2_exitcond_reg_631;
                ap_reg_pp0_iter3_or_cond4_reg_696 <= or_cond4_reg_696;
                ap_reg_pp0_iter3_or_cond9_reg_690 <= or_cond9_reg_690;
                ap_reg_pp0_iter3_sel_tmp_reg_702 <= sel_tmp_reg_702;
                ap_reg_pp0_iter4_abs_g_reg_732 <= abs_g_reg_732;
                ap_reg_pp0_iter4_exitcond_reg_631 <= ap_reg_pp0_iter3_exitcond_reg_631;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond_reg_631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dir_g_7_reg_737 <= dir_g_7_fu_597_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_626 <= i_V_fu_192_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_631 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_70_reg_640 <= gx_data_stream_V_dout;
                tmp_71_reg_651 <= gy_data_stream_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, exitcond8_fu_187_p2, ap_CS_fsm_state2, exitcond_fu_198_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond8_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_fu_198_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((exitcond_fu_198_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    abs_g_fu_477_p2 <= std_logic_vector(unsigned(tmp_54_reg_685) + unsigned(tmp_reg_671));
    abs_gx_fu_219_p3 <= 
        tmp_70_reg_640 when (abscond_i_fu_214_p2(0) = '1') else 
        neg_i_fu_209_p2;
    abs_gy_fu_240_p3 <= 
        tmp_71_reg_651 when (abscond_i8_fu_235_p2(0) = '1') else 
        neg_i7_fu_230_p2;
    abscond_i8_fu_235_p2 <= "1" when (signed(tmp_71_reg_651) > signed(ap_const_lv16_0)) else "0";
    abscond_i_fu_214_p2 <= "1" when (signed(tmp_70_reg_640) > signed(ap_const_lv16_0)) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, gd_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_631, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_exitcond_reg_631)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter4_exitcond_reg_631 = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_631 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_631 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, gd_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_631, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_exitcond_reg_631)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter4_exitcond_reg_631 = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_631 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_631 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, gd_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_631, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_exitcond_reg_631)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter4_exitcond_reg_631 = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_631 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_631 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, exitcond_reg_631)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_reg_631 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_631 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(gd_data_stream_V_full_n, ap_reg_pp0_iter4_exitcond_reg_631)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_reg_pp0_iter4_exitcond_reg_631 = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_198_p2)
    begin
        if ((exitcond_fu_198_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond8_fu_187_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond8_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond8_fu_187_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond8_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    dir_g_1_fu_481_p3 <= 
        ap_const_lv2_2 when (tmp_60_reg_716(0) = '1') else 
        ap_const_lv2_1;
    dir_g_2_fu_497_p3 <= 
        ap_const_lv2_2 when (tmp_60_reg_716(0) = '1') else 
        ap_const_lv2_3;
    dir_g_3_cast_fu_504_p3 <= 
        ap_const_lv2_3 when (rev10_fu_488_p2(0) = '1') else 
        ap_const_lv2_0;
    dir_g_7_fu_597_p3 <= 
        ap_const_lv2_0 when (sel_tmp12_fu_592_p2(0) = '1') else 
        sel_tmp1_fu_557_p3;
    dir_g_cast_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rev10_fu_488_p2),2));
    exitcond8_fu_187_p2 <= "1" when (t_V_reg_165 = gx_rows_V) else "0";
    exitcond_fu_198_p2 <= "1" when (t_V_3_reg_176 = gx_cols_V) else "0";

    gd_data_stream_V_blk_n_assign_proc : process(gd_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_exitcond_reg_631)
    begin
        if (((ap_reg_pp0_iter4_exitcond_reg_631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            gd_data_stream_V_blk_n <= gd_data_stream_V_full_n;
        else 
            gd_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    gd_data_stream_V_din <= (ap_reg_pp0_iter4_abs_g_reg_732 & dir_g_7_reg_737);

    gd_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_exitcond_reg_631, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter4_exitcond_reg_631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gd_data_stream_V_write <= ap_const_logic_1;
        else 
            gd_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    gx_data_stream_V_blk_n_assign_proc : process(gx_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_631)
    begin
        if (((exitcond_reg_631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gx_data_stream_V_blk_n <= gx_data_stream_V_empty_n;
        else 
            gx_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gx_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_631, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gx_data_stream_V_read <= ap_const_logic_1;
        else 
            gx_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    gy_data_stream_V_blk_n_assign_proc : process(gy_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_631)
    begin
        if (((exitcond_reg_631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gy_data_stream_V_blk_n <= gy_data_stream_V_empty_n;
        else 
            gy_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gy_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_631, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gy_data_stream_V_read <= ap_const_logic_1;
        else 
            gy_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_192_p2 <= std_logic_vector(unsigned(t_V_reg_165) + unsigned(ap_const_lv32_1));
    j_V_fu_203_p2 <= std_logic_vector(unsigned(t_V_3_reg_176) + unsigned(ap_const_lv32_1));
    neg_i7_fu_230_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_71_reg_651));
    neg_i_fu_209_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_70_reg_640));
    or_cond1_fu_306_p2 <= (tmp_57_fu_294_p3 and tmp_53_fu_301_p2);
    or_cond2_fu_332_p2 <= (tmp_62_fu_325_p3 and rev9_fu_319_p2);
    or_cond3_fu_343_p2 <= (tmp_63_fu_338_p2 and abscond_i8_fu_235_p2);
    or_cond4_fu_349_p2 <= (or_cond3_fu_343_p2 or or_cond2_fu_332_p2);
    or_cond8_fu_270_p2 <= (abscond_i_fu_214_p2 and abscond_i8_fu_235_p2);
    or_cond9_fu_288_p2 <= (tmp_56_fu_280_p3 or or_cond8_fu_270_p2);
    or_cond_fu_264_p2 <= (rev_fu_258_p2 and abscond_i_fu_214_p2);
    p_shl1_cast_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_368_p3),21));
    p_shl2_cast_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_400_p3),19));
    p_shl3_cast_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_389_p3),21));
    p_shl3_fu_389_p3 <= (abs_gx_reg_662 & ap_const_lv4_0);
    p_shl4_cast_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_400_p3),21));
    p_shl4_fu_400_p3 <= (abs_gx_reg_662 & ap_const_lv2_0);
    p_shl5_cast_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_368_p3),19));
    p_shl5_fu_368_p3 <= (abs_gy_reg_676 & ap_const_lv2_0);
    p_shl_cast_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_440_p3),21));
    p_shl_fu_440_p3 <= (abs_gy_reg_676 & ap_const_lv4_0);
    rev10_fu_488_p2 <= (ult_reg_722 xor ap_const_lv1_1);
    rev9_fu_319_p2 <= (tmp_61_fu_312_p3 xor ap_const_lv1_1);
    rev_fu_258_p2 <= (tmp_55_fu_251_p3 xor ap_const_lv1_1);
    sel_tmp10_demorgan_fu_542_p2 <= (tmp_51_reg_708 or ap_reg_pp0_iter3_or_cond9_reg_690);
    sel_tmp10_fu_580_p2 <= (sel_tmp21_demorgan_fu_575_p2 xor ap_const_lv1_1);
    sel_tmp11_fu_586_p2 <= (sel_tmp2_fu_570_p2 or sel_tmp10_fu_580_p2);
    sel_tmp12_fu_592_p2 <= (tmp_67_reg_727 and sel_tmp11_fu_586_p2);
    sel_tmp1_fu_557_p3 <= 
        dir_g_2_fu_497_p3 when (sel_tmp9_fu_552_p2(0) = '1') else 
        sel_tmp7_fu_534_p3;
    sel_tmp21_demorgan_fu_575_p2 <= (sel_tmp10_demorgan_fu_542_p2 or ap_reg_pp0_iter3_or_cond4_reg_696);
    sel_tmp2_fu_570_p2 <= (tmp_51_reg_708 and tmp25_fu_565_p2);
    sel_tmp3_fu_512_p2 <= (tmp_51_reg_708 and ap_reg_pp0_iter3_sel_tmp_reg_702);
    sel_tmp4_fu_516_p3 <= 
        dir_g_cast_fu_493_p1 when (sel_tmp3_fu_512_p2(0) = '1') else 
        dir_g_3_cast_fu_504_p3;
    sel_tmp5_fu_524_p2 <= (tmp_51_reg_708 xor ap_const_lv1_1);
    sel_tmp6_fu_529_p2 <= (sel_tmp5_fu_524_p2 and ap_reg_pp0_iter3_or_cond9_reg_690);
    sel_tmp7_fu_534_p3 <= 
        dir_g_1_fu_481_p3 when (sel_tmp6_fu_529_p2(0) = '1') else 
        sel_tmp4_fu_516_p3;
    sel_tmp8_fu_546_p2 <= (sel_tmp10_demorgan_fu_542_p2 xor ap_const_lv1_1);
    sel_tmp9_fu_552_p2 <= (sel_tmp8_fu_546_p2 and ap_reg_pp0_iter3_or_cond4_reg_696);
    sel_tmp_fu_355_p2 <= (or_cond_fu_264_p2 or or_cond1_fu_306_p2);
    tmp25_fu_565_p2 <= (ap_reg_pp0_iter3_sel_tmp_reg_702 xor ap_const_lv1_1);
    tmp_100_cast1_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(abs_gy_reg_676),19));
    tmp_101_cast_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_379_p2),21));
    tmp_108_cast1_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(abs_gx_reg_662),19));
    tmp_109_cast_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_64_fu_430_p2),21));
    tmp_51_fu_361_p2 <= "1" when (unsigned(abs_gx_reg_662) > unsigned(abs_gy_reg_676)) else "0";
    tmp_52_fu_276_p2 <= (tmp_71_reg_651 and tmp_70_reg_640);
    tmp_53_fu_301_p2 <= "1" when (signed(tmp_71_reg_651) < signed(ap_const_lv16_1)) else "0";
    tmp_54_fu_247_p1 <= abs_gy_fu_240_p3(14 - 1 downto 0);
    tmp_55_fu_251_p3 <= tmp_71_reg_651(15 downto 15);
    tmp_56_fu_280_p3 <= tmp_52_fu_276_p2(15 downto 15);
    tmp_57_fu_294_p3 <= tmp_70_reg_640(15 downto 15);
    tmp_58_fu_379_p2 <= std_logic_vector(unsigned(tmp_100_cast1_fu_365_p1) + unsigned(p_shl5_cast_fu_375_p1));
    tmp_59_fu_411_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_396_p1) - unsigned(p_shl4_cast_fu_407_p1));
    tmp_60_fu_417_p2 <= "1" when (unsigned(tmp_101_cast_fu_385_p1) > unsigned(tmp_59_fu_411_p2)) else "0";
    tmp_61_fu_312_p3 <= tmp_70_reg_640(15 downto 15);
    tmp_62_fu_325_p3 <= tmp_71_reg_651(15 downto 15);
    tmp_63_fu_338_p2 <= "1" when (signed(tmp_70_reg_640) < signed(ap_const_lv16_1)) else "0";
    tmp_64_fu_430_p2 <= std_logic_vector(unsigned(tmp_108_cast1_fu_423_p1) + unsigned(p_shl2_cast_fu_426_p1));
    tmp_65_fu_455_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_447_p1) - unsigned(p_shl1_cast_fu_451_p1));
    tmp_66_fu_467_p2 <= (abs_gy_reg_676 or abs_gx_reg_662);
    tmp_67_fu_471_p2 <= "1" when (tmp_66_fu_467_p2 = ap_const_lv16_0) else "0";
    tmp_fu_226_p1 <= abs_gx_fu_219_p3(14 - 1 downto 0);
    ult_fu_461_p2 <= "1" when (unsigned(tmp_65_fu_455_p2) < unsigned(tmp_109_cast_fu_436_p1)) else "0";
end behav;
