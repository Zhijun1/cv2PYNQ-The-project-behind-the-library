-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond388_i_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1444 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1435 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_3_reg_320 : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_331 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op181_read_state7 : BOOLEAN;
    signal ap_predicate_op182_read_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter3_reg_331 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_342_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_87_fu_348_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_50_fu_352_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_93_fu_362_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_95_fu_366_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_100_fu_374_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_229_cast_cast_fu_392_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_55_fu_396_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal OP2_V_0_1_cast_fu_414_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_1_cast_reg_1381 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_fu_418_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_reg_1386 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_1_cast_fu_422_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_cast_reg_1391 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_2_cast_fu_426_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_1_2_cast_reg_1396 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_430_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_cast_reg_1401 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_1_cast_fu_434_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_2_1_cast_reg_1406 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_cast_cast_fu_452_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_73_fu_456_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_74_fu_462_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_477_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1430 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_58_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond389_i_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_1449 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_1_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_1_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_1457 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_526_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_68_reg_1464 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_104_reg_1472 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_540_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_reg_1477 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_fu_546_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_reg_1482 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_106_reg_1490 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_560_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_1_reg_1495 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_fu_566_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_reg_1500 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_109_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_580_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_2_reg_1513 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_116_fu_721_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_116_reg_1518 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_77_fu_745_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_77_reg_1523 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_80_fu_769_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_80_reg_1528 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1533 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_117_fu_787_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_117_reg_1538 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_fu_792_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1543 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_796_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1548 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_reg_pp0_iter2_exitcond388_i_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond388_i_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond388_i_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond388_i_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_809_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ImagLoc_x_fu_831_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_1562 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_121_reg_1568 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_fu_859_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_reg_1574 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_or_cond_i_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_i_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_i_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_927_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1588 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_123_fu_935_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_123_reg_1593 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_brmerge_reg_1598 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1605 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_3_t_fu_954_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_3_t_reg_1611 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1618 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1618 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1624 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1624 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_1630 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal col_buf_0_val_0_0_fu_987_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1635 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_1643 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1005_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1648 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1023_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1656 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_1074_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1664 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1664 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1664 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_1088_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1670 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_1670 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_1102_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1676 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_reg_1686 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_16_reg_1686 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_reg_1696 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1216_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_4_0_1_reg_1701 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal grp_fu_1223_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_4_0_2_reg_1716 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal grp_fu_1229_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_1_1_reg_1731 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal grp_fu_1236_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp25_reg_1736 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1243_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp23_reg_1741 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal grp_fu_1249_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp24_reg_1746 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter3_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_309 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_82_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_fu_338_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_53_fu_378_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_54_fu_386_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_89_fu_358_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_101_fu_402_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_438_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_57_fu_446_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_fu_406_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_98_fu_370_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_102_fu_493_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_cast_fu_468_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_103_fu_586_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev11_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_fu_609_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i425_i_cast_cast_fu_614_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_fu_628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_216_1_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_1_fu_651_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_108_fu_665_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_216_2_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev13_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_2_fu_688_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_8_fu_623_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_72_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_fu_705_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_114_fu_709_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_fu_702_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_115_fu_713_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_107_fu_661_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_226_1_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_729_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_1_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_742_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_fu_734_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_110_fu_698_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_226_2_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_753_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_2_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_766_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_79_fu_758_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_111_fu_782_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_120_fu_815_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_3_cast_fu_800_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_122_fu_845_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_853_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp3_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev14_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_cast_fu_890_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_cast_cast_fu_872_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_fu_897_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_65_not_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_902_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_fu_944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_976_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_fu_994_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_85_fu_1012_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_fu_1066_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_88_fu_1080_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_90_fu_1094_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_0_cast_fu_1138_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_fu_1142_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp24_cast_fu_1203_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_fu_1206_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_1_fu_1206_p2 : signal is "no";
    signal grp_fu_1216_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1216_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1223_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1223_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1229_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1229_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1236_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1236_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1236_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1243_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1243_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1249_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1249_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1216_ce : STD_LOGIC;
    signal grp_fu_1223_ce : STD_LOGIC;
    signal grp_fu_1229_ce : STD_LOGIC;
    signal grp_fu_1236_ce : STD_LOGIC;
    signal grp_fu_1243_ce : STD_LOGIC;
    signal grp_fu_1249_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1216_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1223_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1229_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1236_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1236_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1243_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1249_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_1176 : BOOLEAN;

    component canny_edge_mux_32fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component canny_edge_mac_mug8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_edge_mac_muhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_edge_mac_muibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component canny_edge_mac_mujbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component canny_edge_mac_mukbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component canny_edge_mac_mulbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_k_buf_0_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1605,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => reg_331);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1618,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1624,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    canny_edge_mux_32fYi_U15 : component canny_edge_mux_32fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_170,
        din1 => right_border_buf_0_1_fu_174,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1611,
        dout => tmp_83_fu_976_p5);

    canny_edge_mux_32fYi_U16 : component canny_edge_mux_32fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_182,
        din1 => right_border_buf_0_4_fu_186,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1611,
        dout => tmp_84_fu_994_p5);

    canny_edge_mux_32fYi_U17 : component canny_edge_mux_32fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_190,
        din1 => right_border_buf_0_2_fu_178,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1611,
        dout => tmp_85_fu_1012_p5);

    canny_edge_mux_32fYi_U18 : component canny_edge_mux_32fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1635,
        din1 => col_buf_0_val_1_0_reg_1648,
        din2 => col_buf_0_val_2_0_reg_1656,
        din3 => tmp_117_reg_1538,
        dout => tmp_86_fu_1066_p5);

    canny_edge_mux_32fYi_U19 : component canny_edge_mux_32fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1635,
        din1 => col_buf_0_val_1_0_reg_1648,
        din2 => col_buf_0_val_2_0_reg_1656,
        din3 => row_assign_10_1_t_reg_1543,
        dout => tmp_88_fu_1080_p5);

    canny_edge_mux_32fYi_U20 : component canny_edge_mux_32fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1635,
        din1 => col_buf_0_val_1_0_reg_1648,
        din2 => col_buf_0_val_2_0_reg_1656,
        din3 => row_assign_10_2_t_reg_1548,
        dout => tmp_90_fu_1094_p5);

    canny_edge_mac_mug8j_U21 : component canny_edge_mac_mug8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1216_p0,
        din1 => grp_fu_1216_p1,
        din2 => r_V_8_fu_1142_p2,
        ce => grp_fu_1216_ce,
        dout => grp_fu_1216_p3);

    canny_edge_mac_muhbi_U22 : component canny_edge_mac_muhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1223_p0,
        din1 => grp_fu_1223_p1,
        din2 => p_Val2_4_0_1_reg_1701,
        ce => grp_fu_1223_ce,
        dout => grp_fu_1223_p3);

    canny_edge_mac_muibs_U23 : component canny_edge_mac_muibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1229_p0,
        din1 => grp_fu_1229_p1,
        din2 => p_Val2_4_0_2_reg_1716,
        ce => grp_fu_1229_ce,
        dout => grp_fu_1229_p3);

    canny_edge_mac_mujbC_U24 : component canny_edge_mac_mujbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1236_p0,
        din1 => grp_fu_1236_p1,
        din2 => grp_fu_1236_p2,
        ce => grp_fu_1236_ce,
        dout => grp_fu_1236_p3);

    canny_edge_mac_mukbM_U25 : component canny_edge_mac_mukbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1243_p0,
        din1 => grp_fu_1243_p1,
        din2 => p_Val2_4_1_1_reg_1731,
        ce => grp_fu_1243_ce,
        dout => grp_fu_1243_p3);

    canny_edge_mac_mulbW_U26 : component canny_edge_mac_mulbW
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1249_p0,
        din1 => grp_fu_1249_p1,
        din2 => tmp25_reg_1736,
        ce => grp_fu_1249_ce,
        dout => grp_fu_1249_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_804_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter3_state8)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_3_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_804_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_3_reg_320 <= j_V_fu_809_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_3_reg_320 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                t_V_reg_309 <= i_V_reg_1430;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_309 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLoc_x_reg_1562 <= ImagLoc_x_fu_831_p2;
                or_cond_i_reg_1580 <= or_cond_i_fu_867_p2;
                p_p2_i_i_reg_1574 <= p_p2_i_i_fu_859_p3;
                tmp_121_reg_1568 <= ImagLoc_x_fu_831_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                OP2_V_0_1_cast_reg_1381 <= OP2_V_0_1_cast_fu_414_p1;
                OP2_V_0_2_cast_reg_1386 <= OP2_V_0_2_cast_fu_418_p1;
                    OP2_V_1_2_cast_reg_1396(3 downto 0) <= OP2_V_1_2_cast_fu_426_p1(3 downto 0);
                OP2_V_1_cast_reg_1391 <= OP2_V_1_cast_fu_422_p1;
                    OP2_V_2_1_cast_reg_1406(2 downto 0) <= OP2_V_2_1_cast_fu_434_p1(2 downto 0);
                OP2_V_2_cast_reg_1401 <= OP2_V_2_cast_fu_430_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond388_i_reg_1553 <= exitcond388_i_reg_1553;
                ap_reg_pp0_iter1_or_cond_i_reg_1580 <= or_cond_i_reg_1580;
                exitcond388_i_reg_1553 <= exitcond388_i_fu_804_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_brmerge_reg_1598 <= brmerge_reg_1598;
                ap_reg_pp0_iter2_exitcond388_i_reg_1553 <= ap_reg_pp0_iter1_exitcond388_i_reg_1553;
                ap_reg_pp0_iter2_or_cond_i_i_reg_1584 <= or_cond_i_i_reg_1584;
                ap_reg_pp0_iter2_or_cond_i_reg_1580 <= ap_reg_pp0_iter1_or_cond_i_reg_1580;
                ap_reg_pp0_iter3_exitcond388_i_reg_1553 <= ap_reg_pp0_iter2_exitcond388_i_reg_1553;
                ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1618 <= k_buf_0_val_4_addr_reg_1618;
                ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1624 <= k_buf_0_val_5_addr_reg_1624;
                ap_reg_pp0_iter3_or_cond_i_i_reg_1584 <= ap_reg_pp0_iter2_or_cond_i_i_reg_1584;
                ap_reg_pp0_iter3_or_cond_i_reg_1580 <= ap_reg_pp0_iter2_or_cond_i_reg_1580;
                ap_reg_pp0_iter3_reg_331 <= reg_331;
                ap_reg_pp0_iter4_exitcond388_i_reg_1553 <= ap_reg_pp0_iter3_exitcond388_i_reg_1553;
                ap_reg_pp0_iter4_or_cond_i_reg_1580 <= ap_reg_pp0_iter3_or_cond_i_reg_1580;
                ap_reg_pp0_iter5_exitcond388_i_reg_1553 <= ap_reg_pp0_iter4_exitcond388_i_reg_1553;
                ap_reg_pp0_iter5_or_cond_i_reg_1580 <= ap_reg_pp0_iter4_or_cond_i_reg_1580;
                ap_reg_pp0_iter5_src_kernel_win_0_va_16_reg_1686 <= src_kernel_win_0_va_16_reg_1686;
                ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664 <= src_kernel_win_0_va_6_reg_1664;
                ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670 <= src_kernel_win_0_va_7_reg_1670;
                ap_reg_pp0_iter6_or_cond_i_reg_1580 <= ap_reg_pp0_iter5_or_cond_i_reg_1580;
                ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1664 <= ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664;
                ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_1670 <= ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670;
                ap_reg_pp0_iter7_or_cond_i_reg_1580 <= ap_reg_pp0_iter6_or_cond_i_reg_1580;
                ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1664 <= ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1664;
                ap_reg_pp0_iter8_or_cond_i_reg_1580 <= ap_reg_pp0_iter7_or_cond_i_reg_1580;
                ap_reg_pp0_iter9_or_cond_i_reg_1580 <= ap_reg_pp0_iter8_or_cond_i_reg_1580;
                src_kernel_win_0_va_6_reg_1664 <= src_kernel_win_0_va_6_fu_1074_p3;
                src_kernel_win_0_va_7_reg_1670 <= src_kernel_win_0_va_7_fu_1088_p3;
                src_kernel_win_0_va_8_reg_1676 <= src_kernel_win_0_va_8_fu_1102_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1598 <= brmerge_fu_939_p2;
                or_cond_i_i_reg_1584 <= or_cond_i_i_fu_884_p2;
                tmp_123_reg_1593 <= tmp_123_fu_935_p1;
                x_reg_1588 <= x_fu_927_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_assign_3_t_reg_1611 <= col_assign_3_t_fu_954_p2;
                k_buf_0_val_3_addr_reg_1605 <= tmp_82_fu_947_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1618 <= tmp_82_fu_947_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1624 <= tmp_82_fu_947_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_0_reg_1635 <= col_buf_0_val_0_0_fu_987_p3;
                col_buf_0_val_1_0_reg_1648 <= col_buf_0_val_1_0_fu_1005_p3;
                col_buf_0_val_2_0_reg_1656 <= col_buf_0_val_2_0_fu_1023_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1430 <= i_V_fu_477_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1444 <= icmp_fu_503_p2;
                p_assign_6_1_reg_1482 <= p_assign_6_1_fu_546_p2;
                p_assign_6_2_reg_1500 <= p_assign_6_2_fu_566_p2;
                p_assign_7_1_reg_1495 <= p_assign_7_1_fu_560_p2;
                p_assign_7_2_reg_1513 <= p_assign_7_2_fu_580_p2;
                p_assign_7_reg_1477 <= p_assign_7_fu_540_p2;
                tmp_104_reg_1472 <= tmp_68_fu_526_p2(11 downto 11);
                tmp_106_reg_1490 <= p_assign_6_1_fu_546_p2(11 downto 11);
                tmp_109_reg_1508 <= p_assign_6_2_fu_566_p2(11 downto 11);
                tmp_190_1_reg_1453 <= tmp_190_1_fu_515_p2;
                tmp_58_reg_1435 <= tmp_58_fu_483_p2;
                tmp_60_reg_1449 <= tmp_60_fu_509_p2;
                tmp_61_reg_1457 <= tmp_61_fu_521_p2;
                tmp_68_reg_1464 <= tmp_68_fu_526_p2;
                ult_reg_1439 <= ult_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_load_reg_1630 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_1643 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_or_cond_i_reg_1580 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_0_1_reg_1701 <= grp_fu_1216_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_or_cond_i_reg_1580 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_0_2_reg_1716 <= grp_fu_1223_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_or_cond_i_reg_1580 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_1_1_reg_1731 <= grp_fu_1229_p3;
                tmp25_reg_1736 <= grp_fu_1236_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op182_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op181_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_331 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                rev_reg_1533 <= rev_fu_777_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_174 <= right_border_buf_0_s_fu_170;
                right_border_buf_0_2_fu_178 <= right_border_buf_0_5_fu_190;
                right_border_buf_0_3_fu_182 <= col_buf_0_val_1_0_fu_1005_p3;
                right_border_buf_0_4_fu_186 <= right_border_buf_0_3_fu_182;
                right_border_buf_0_5_fu_190 <= col_buf_0_val_2_0_fu_1023_p3;
                right_border_buf_0_s_fu_170 <= col_buf_0_val_0_0_fu_987_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_61_reg_1457 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                row_assign_10_1_t_reg_1543 <= row_assign_10_1_t_fu_792_p2;
                row_assign_10_2_t_reg_1548 <= row_assign_10_2_t_fu_796_p2;
                tmp_117_reg_1538 <= tmp_117_fu_787_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_1686 <= src_kernel_win_0_va_4_fu_162;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_150 <= src_kernel_win_0_va_fu_146;
                src_kernel_win_0_va_2_fu_154 <= ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670;
                src_kernel_win_0_va_3_fu_158 <= src_kernel_win_0_va_2_fu_154;
                src_kernel_win_0_va_5_fu_166 <= ap_reg_pp0_iter5_src_kernel_win_0_va_16_reg_1686;
                src_kernel_win_0_va_fu_146 <= ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_4_fu_162 <= src_kernel_win_0_va_8_fu_1102_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_or_cond_i_reg_1580 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_9_reg_1696 <= src_kernel_win_0_va_fu_146;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter8_or_cond_i_reg_1580 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp23_reg_1741 <= grp_fu_1243_p3;
                tmp24_reg_1746 <= grp_fu_1249_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_61_reg_1457 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_116_reg_1518 <= tmp_116_fu_721_p3;
                tmp_77_reg_1523 <= tmp_77_fu_745_p3;
                tmp_80_reg_1528 <= tmp_80_fu_769_p3;
            end if;
        end if;
    end process;
    OP2_V_1_2_cast_reg_1396(11 downto 4) <= "00000000";
    OP2_V_2_1_cast_reg_1406(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_CS_fsm_state2, exitcond389_i_fu_472_p2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_472_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
        ImagLoc_x_cast_cast_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_reg_1562),13));

    ImagLoc_x_fu_831_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_3_cast_fu_800_p1));
    OP1_V_0_cast_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_166),9));
        OP2_V_0_1_cast_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        OP2_V_0_2_cast_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    OP2_V_1_2_cast_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        OP2_V_1_cast_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    OP2_V_2_1_cast_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        OP2_V_2_cast_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_reg_1580, ap_predicate_op181_read_state7, ap_predicate_op182_read_state7)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter9_or_cond_i_reg_1580 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op181_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_reg_1580, ap_predicate_op181_read_state7, ap_predicate_op182_read_state7)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter9_or_cond_i_reg_1580 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op181_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_reg_1580, ap_predicate_op181_read_state7, ap_predicate_op182_read_state7)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter9_or_cond_i_reg_1580 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op181_read_state7 = ap_const_boolean_1)))));
    end process;

        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp0_stage0_iter10_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter9_or_cond_i_reg_1580)
    begin
                ap_block_state15_pp0_stage0_iter10 <= ((ap_reg_pp0_iter9_or_cond_i_reg_1580 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op181_read_state7, ap_predicate_op182_read_state7)
    begin
                ap_block_state7_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op181_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1176_assign_proc : process(ap_block_pp0_stage0, ap_reg_pp0_iter3_or_cond_i_i_reg_1584, ap_enable_reg_pp0_iter4)
    begin
                ap_condition_1176 <= ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter3_state8_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond389_i_fu_472_p2)
    begin
        if ((((exitcond389_i_fu_472_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op181_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1553, or_cond_i_i_reg_1584, icmp_reg_1444)
    begin
                ap_predicate_op181_read_state7 <= ((or_cond_i_i_reg_1584 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1553 = ap_const_lv1_0));
    end process;


    ap_predicate_op182_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1553, or_cond_i_i_reg_1584, icmp_reg_1444, tmp_58_reg_1435)
    begin
                ap_predicate_op182_read_state7 <= ((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1553 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond389_i_fu_472_p2)
    begin
        if (((exitcond389_i_fu_472_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_939_p2 <= (tmp_65_fu_880_p2 or rev_reg_1533);
    col_assign_3_t_fu_954_p2 <= std_logic_vector(unsigned(tmp_74_fu_462_p2) - unsigned(tmp_123_reg_1593));
        col_assign_cast_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1588),32));

    col_buf_0_val_0_0_fu_987_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_pp0_iter2_brmerge_reg_1598(0) = '1') else 
        tmp_83_fu_976_p5;
    col_buf_0_val_1_0_fu_1005_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_pp0_iter2_brmerge_reg_1598(0) = '1') else 
        tmp_84_fu_994_p5;
    col_buf_0_val_2_0_fu_1023_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter2_brmerge_reg_1598(0) = '1') else 
        tmp_85_fu_1012_p5;
    exitcond388_i_fu_804_p2 <= "1" when (t_V_3_reg_320 = tmp_s_fu_342_p2) else "0";
    exitcond389_i_fu_472_p2 <= "1" when (t_V_reg_309 = tmp_50_fu_352_p2) else "0";

    grp_fu_1216_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1216_ce <= ap_const_logic_1;
        else 
            grp_fu_1216_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1216_p0 <= grp_fu_1216_p00(8 - 1 downto 0);
    grp_fu_1216_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_162),10));
    grp_fu_1216_p1 <= OP2_V_0_1_cast_reg_1381(2 - 1 downto 0);

    grp_fu_1223_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1223_ce <= ap_const_logic_1;
        else 
            grp_fu_1223_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1223_p0 <= grp_fu_1223_p00(8 - 1 downto 0);
    grp_fu_1223_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1676),10));
    grp_fu_1223_p1 <= OP2_V_0_2_cast_reg_1386(2 - 1 downto 0);

    grp_fu_1229_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1229_ce <= ap_const_logic_1;
        else 
            grp_fu_1229_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1229_p0 <= grp_fu_1229_p00(8 - 1 downto 0);
    grp_fu_1229_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_158),11));
    grp_fu_1229_p1 <= OP2_V_1_cast_reg_1391(3 - 1 downto 0);

    grp_fu_1236_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1236_ce <= ap_const_logic_1;
        else 
            grp_fu_1236_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1236_p0 <= grp_fu_1236_p00(8 - 1 downto 0);
    grp_fu_1236_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_150),10));
    grp_fu_1236_p1 <= OP2_V_2_cast_reg_1401(2 - 1 downto 0);
    grp_fu_1236_p2 <= grp_fu_1236_p20(8 - 1 downto 0);
    grp_fu_1236_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1664),10));

    grp_fu_1243_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1243_ce <= ap_const_logic_1;
        else 
            grp_fu_1243_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1243_p0 <= grp_fu_1243_p00(8 - 1 downto 0);
    grp_fu_1243_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_1670),12));
    grp_fu_1243_p1 <= OP2_V_1_2_cast_reg_1396(4 - 1 downto 0);

    grp_fu_1249_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1249_ce <= ap_const_logic_1;
        else 
            grp_fu_1249_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1249_p0 <= grp_fu_1249_p00(8 - 1 downto 0);
    grp_fu_1249_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_9_reg_1696),11));
    grp_fu_1249_p1 <= OP2_V_2_1_cast_reg_1406(3 - 1 downto 0);
    i_V_fu_477_p2 <= std_logic_vector(unsigned(t_V_reg_309) + unsigned(ap_const_lv11_1));
    icmp3_fu_825_p2 <= "0" when (tmp_120_fu_815_p4 = ap_const_lv10_0) else "1";
    icmp_fu_503_p2 <= "0" when (tmp_102_fu_493_p4 = ap_const_lv10_0) else "1";
    j_V_fu_809_p2 <= std_logic_vector(unsigned(t_V_3_reg_320) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_82_fu_947_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_block_pp0_stage0_11001, tmp_60_reg_1449, ap_reg_pp0_iter2_exitcond388_i_reg_1553, ap_reg_pp0_iter2_or_cond_i_i_reg_1584, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (tmp_60_reg_1449 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_block_pp0_stage0_11001, tmp_60_reg_1449, ap_reg_pp0_iter2_exitcond388_i_reg_1553, ap_reg_pp0_iter2_or_cond_i_i_reg_1584, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (tmp_60_reg_1449 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_82_fu_947_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_block_pp0_stage0_11001, tmp_190_1_reg_1453, ap_reg_pp0_iter3_or_cond_i_i_reg_1584, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (tmp_190_1_reg_1453 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_reg_pp0_iter3_reg_331, tmp_190_1_reg_1453, k_buf_0_val_3_load_reg_1630, ap_condition_1176)
    begin
        if ((ap_const_boolean_1 = ap_condition_1176)) then
            if (((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_1630;
            elsif (((tmp_190_1_reg_1453 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= ap_reg_pp0_iter3_reg_331;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_block_pp0_stage0_11001, tmp_190_1_reg_1453, ap_reg_pp0_iter3_or_cond_i_i_reg_1584, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (tmp_190_1_reg_1453 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_82_fu_947_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_block_pp0_stage0_11001, tmp_60_reg_1449, ap_reg_pp0_iter3_or_cond_i_i_reg_1584, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (tmp_60_reg_1449 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_reg_pp0_iter3_reg_331, tmp_60_reg_1449, k_buf_0_val_4_load_reg_1643, ap_condition_1176)
    begin
        if ((ap_const_boolean_1 = ap_condition_1176)) then
            if (((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_1643;
            elsif (((tmp_60_reg_1449 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= ap_reg_pp0_iter3_reg_331;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_reg_1444, tmp_58_reg_1435, ap_block_pp0_stage0_11001, tmp_60_reg_1449, ap_reg_pp0_iter3_or_cond_i_i_reg_1584, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 = ap_const_lv1_1) and (tmp_60_reg_1449 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i424_i_1_fu_645_p2 <= (tmp_216_1_fu_641_p2 and rev12_fu_635_p2);
    or_cond_i424_i_2_fu_682_p2 <= (tmp_216_2_fu_678_p2 and rev13_fu_672_p2);
    or_cond_i424_i_fu_603_p2 <= (tmp_70_fu_599_p2 and rev11_fu_593_p2);
    or_cond_i_fu_867_p2 <= (icmp_reg_1444 and icmp3_fu_825_p2);
    or_cond_i_i_fu_884_p2 <= (tmp_65_fu_880_p2 and rev14_fu_875_p2);
    p_Val2_1_fu_1206_p2 <= std_logic_vector(signed(tmp24_cast_fu_1203_p1) + signed(tmp23_reg_1741));
    p_assign_1_fu_853_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_3_cast_fu_800_p1));
    p_assign_2_fu_897_p2 <= std_logic_vector(unsigned(tmp_69_cast_cast_fu_452_p1) - unsigned(p_p2_i_i_cast_cast_fu_890_p1));
    p_assign_6_1_fu_546_p2 <= std_logic_vector(unsigned(t_V_cast_fu_468_p1) + unsigned(ap_const_lv12_FFE));
    p_assign_6_2_fu_566_p2 <= std_logic_vector(unsigned(t_V_cast_fu_468_p1) + unsigned(ap_const_lv12_FFD));
    p_assign_7_1_fu_560_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(t_V_cast_fu_468_p1));
    p_assign_7_2_fu_580_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) - unsigned(t_V_cast_fu_468_p1));
    p_assign_7_fu_540_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_cast_fu_468_p1));
    p_assign_8_fu_623_p2 <= std_logic_vector(unsigned(tmp_229_cast_cast_fu_392_p1) - unsigned(p_p2_i425_i_cast_cast_fu_614_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_reg_1580)
    begin
        if (((ap_reg_pp0_iter9_or_cond_i_reg_1580 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        p_dst_data_stream_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_1206_p2),16));


    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_or_cond_i_reg_1580, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter9_or_cond_i_reg_1580 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_p2_i425_i_1_fu_651_p3 <= 
        p_assign_7_1_reg_1495 when (tmp_106_reg_1490(0) = '1') else 
        p_assign_6_1_reg_1482;
    p_p2_i425_i_2_fu_688_p3 <= 
        p_assign_7_2_reg_1513 when (tmp_109_reg_1508(0) = '1') else 
        p_assign_6_2_reg_1500;
        p_p2_i425_i_cast_cast_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i425_i_fu_609_p3),13));

    p_p2_i425_i_fu_609_p3 <= 
        p_assign_7_reg_1477 when (tmp_104_reg_1472(0) = '1') else 
        tmp_68_reg_1464;
        p_p2_i_i_cast_cast_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_reg_1574),13));

    p_p2_i_i_fu_859_p3 <= 
        p_assign_1_fu_853_p2 when (tmp_122_fu_845_p3(0) = '1') else 
        ImagLoc_x_fu_831_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond388_i_reg_1553, or_cond_i_i_reg_1584, icmp_reg_1444, tmp_58_reg_1435)
    begin
        if ((((tmp_58_reg_1435 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_1) and (or_cond_i_i_reg_1584 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1584 = ap_const_lv1_1) and (icmp_reg_1444 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1553 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op181_read_state7, ap_predicate_op182_read_state7, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op182_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op181_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_8_fu_1142_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_0_cast_fu_1138_p1));
    rev11_fu_593_p2 <= (tmp_103_fu_586_p3 xor ap_const_lv1_1);
    rev12_fu_635_p2 <= (tmp_105_fu_628_p3 xor ap_const_lv1_1);
    rev13_fu_672_p2 <= (tmp_108_fu_665_p3 xor ap_const_lv1_1);
    rev14_fu_875_p2 <= (tmp_121_reg_1568 xor ap_const_lv1_1);
    rev_fu_777_p2 <= (ult_reg_1439 xor ap_const_lv1_1);
    row_assign_10_1_t_fu_792_p2 <= std_logic_vector(unsigned(tmp_55_fu_396_p2) - unsigned(tmp_77_reg_1523));
    row_assign_10_2_t_fu_796_p2 <= std_logic_vector(unsigned(tmp_55_fu_396_p2) - unsigned(tmp_80_reg_1528));
    sel_tmp7_fu_916_p2 <= (tmp_65_not_fu_910_p2 or tmp_121_reg_1568);
    sel_tmp8_fu_921_p2 <= (tmp_67_fu_893_p2 and sel_tmp7_fu_916_p2);
    sel_tmp_fu_902_p3 <= 
        ImagLoc_x_cast_cast_fu_872_p1 when (or_cond_i_i_fu_884_p2(0) = '1') else 
        p_assign_2_fu_897_p2;
    src_kernel_win_0_va_6_fu_1074_p3 <= 
        tmp_86_fu_1066_p5 when (tmp_61_reg_1457(0) = '1') else 
        col_buf_0_val_0_0_reg_1635;
    src_kernel_win_0_va_7_fu_1088_p3 <= 
        tmp_88_fu_1080_p5 when (tmp_61_reg_1457(0) = '1') else 
        col_buf_0_val_1_0_reg_1648;
    src_kernel_win_0_va_8_fu_1102_p3 <= 
        tmp_90_fu_1094_p5 when (tmp_61_reg_1457(0) = '1') else 
        col_buf_0_val_2_0_reg_1656;
    t_V_3_cast_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_320),12));
    t_V_cast_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_309),12));
        tmp24_cast_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp24_reg_1746),12));

    tmp_100_fu_374_p1 <= p_src_rows_V_read(12 - 1 downto 0);
    tmp_101_fu_402_p1 <= p_src_rows_V_read(1 - 1 downto 0);
    tmp_102_fu_493_p4 <= t_V_reg_309(10 downto 1);
    tmp_103_fu_586_p3 <= tmp_68_reg_1464(11 downto 11);
    tmp_105_fu_628_p3 <= p_assign_6_1_reg_1482(11 downto 11);
    tmp_107_fu_661_p1 <= p_p2_i425_i_1_fu_651_p3(2 - 1 downto 0);
    tmp_108_fu_665_p3 <= p_assign_6_2_reg_1500(11 downto 11);
    tmp_110_fu_698_p1 <= p_p2_i425_i_2_fu_688_p3(2 - 1 downto 0);
    tmp_111_fu_782_p2 <= std_logic_vector(unsigned(tmp_93_fu_362_p1) + unsigned(ap_const_lv2_3));
    tmp_112_fu_702_p1 <= tmp_68_reg_1464(2 - 1 downto 0);
    tmp_113_fu_705_p1 <= p_p2_i425_i_fu_609_p3(2 - 1 downto 0);
    tmp_114_fu_709_p1 <= p_assign_8_fu_623_p2(2 - 1 downto 0);
    tmp_115_fu_713_p3 <= 
        tmp_113_fu_705_p1 when (tmp_72_fu_618_p2(0) = '1') else 
        tmp_114_fu_709_p1;
    tmp_116_fu_721_p3 <= 
        tmp_112_fu_702_p1 when (or_cond_i424_i_fu_603_p2(0) = '1') else 
        tmp_115_fu_713_p3;
    tmp_117_fu_787_p2 <= std_logic_vector(unsigned(tmp_111_fu_782_p2) - unsigned(tmp_116_reg_1518));
    tmp_118_fu_742_p1 <= p_assign_6_1_reg_1482(2 - 1 downto 0);
    tmp_119_fu_766_p1 <= p_assign_6_2_reg_1500(2 - 1 downto 0);
    tmp_120_fu_815_p4 <= t_V_3_reg_320(10 downto 1);
    tmp_122_fu_845_p3 <= ImagLoc_x_fu_831_p2(11 downto 11);
    tmp_123_fu_935_p1 <= x_fu_927_p3(2 - 1 downto 0);
    tmp_190_1_fu_515_p2 <= "1" when (t_V_reg_309 = ap_const_lv11_0) else "0";
    tmp_216_1_fu_641_p2 <= "1" when (signed(p_assign_6_1_reg_1482) < signed(tmp_100_fu_374_p1)) else "0";
    tmp_216_2_fu_678_p2 <= "1" when (signed(p_assign_6_2_reg_1500) < signed(tmp_100_fu_374_p1)) else "0";
    tmp_226_1_fu_656_p2 <= "1" when (signed(p_p2_i425_i_1_fu_651_p3) < signed(tmp_100_fu_374_p1)) else "0";
    tmp_226_2_fu_693_p2 <= "1" when (signed(p_p2_i425_i_2_fu_688_p3) < signed(tmp_100_fu_374_p1)) else "0";
    tmp_229_cast_cast_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_386_p2),13));
    tmp_50_fu_352_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_87_fu_348_p1));
    tmp_53_fu_378_p3 <= (tmp_87_fu_348_p1 & ap_const_lv1_0);
    tmp_54_fu_386_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) + unsigned(tmp_53_fu_378_p3));
    tmp_55_fu_396_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_89_fu_358_p1));
    tmp_56_fu_438_p3 <= (tmp_81_fu_338_p1 & ap_const_lv1_0);
    tmp_57_fu_446_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(tmp_56_fu_438_p3));
    tmp_58_fu_483_p2 <= "1" when (unsigned(t_V_reg_309) < unsigned(tmp_87_fu_348_p1)) else "0";
    tmp_60_fu_509_p2 <= "1" when (t_V_reg_309 = ap_const_lv11_1) else "0";
    tmp_61_fu_521_p2 <= "1" when (unsigned(t_V_reg_309) > unsigned(tmp_87_fu_348_p1)) else "0";
    tmp_65_fu_880_p2 <= "1" when (signed(ImagLoc_x_reg_1562) < signed(tmp_95_fu_366_p1)) else "0";
    tmp_65_not_fu_910_p2 <= (tmp_65_fu_880_p2 xor ap_const_lv1_1);
    tmp_67_fu_893_p2 <= "1" when (signed(p_p2_i_i_reg_1574) < signed(tmp_95_fu_366_p1)) else "0";
    tmp_68_fu_526_p2 <= std_logic_vector(unsigned(t_V_cast_fu_468_p1) + unsigned(ap_const_lv12_FFF));
    tmp_69_cast_cast_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_446_p2),13));
    tmp_70_fu_599_p2 <= "1" when (signed(tmp_68_reg_1464) < signed(tmp_100_fu_374_p1)) else "0";
    tmp_71_fu_406_p3 <= (tmp_101_fu_402_p1 & ap_const_lv1_0);
    tmp_72_fu_618_p2 <= "1" when (signed(p_p2_i425_i_fu_609_p3) < signed(tmp_100_fu_374_p1)) else "0";
    tmp_73_fu_456_p2 <= (tmp_71_fu_406_p3 xor ap_const_lv2_2);
    tmp_74_fu_462_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_98_fu_370_p1));
    tmp_75_fu_729_p2 <= std_logic_vector(unsigned(tmp_73_fu_456_p2) - unsigned(tmp_107_fu_661_p1));
    tmp_76_fu_734_p3 <= 
        tmp_107_fu_661_p1 when (tmp_226_1_fu_656_p2(0) = '1') else 
        tmp_75_fu_729_p2;
    tmp_77_fu_745_p3 <= 
        tmp_118_fu_742_p1 when (or_cond_i424_i_1_fu_645_p2(0) = '1') else 
        tmp_76_fu_734_p3;
    tmp_78_fu_753_p2 <= std_logic_vector(unsigned(tmp_73_fu_456_p2) - unsigned(tmp_110_fu_698_p1));
    tmp_79_fu_758_p3 <= 
        tmp_110_fu_698_p1 when (tmp_226_2_fu_693_p2(0) = '1') else 
        tmp_78_fu_753_p2;
    tmp_80_fu_769_p3 <= 
        tmp_119_fu_766_p1 when (or_cond_i424_i_2_fu_682_p2(0) = '1') else 
        tmp_79_fu_758_p3;
    tmp_81_fu_338_p1 <= p_src_cols_V_read(11 - 1 downto 0);
    tmp_82_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_944_p1),64));
    tmp_87_fu_348_p1 <= p_src_rows_V_read(11 - 1 downto 0);
    tmp_89_fu_358_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_93_fu_362_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_95_fu_366_p1 <= p_src_cols_V_read(12 - 1 downto 0);
    tmp_98_fu_370_p1 <= p_src_cols_V_read(2 - 1 downto 0);
    tmp_s_fu_342_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_81_fu_338_p1));
    ult_fu_488_p2 <= "1" when (unsigned(t_V_reg_309) < unsigned(tmp_87_fu_348_p1)) else "0";
    x_fu_927_p3 <= 
        p_p2_i_i_cast_cast_fu_890_p1 when (sel_tmp8_fu_921_p2(0) = '1') else 
        sel_tmp_fu_902_p3;
end behav;
