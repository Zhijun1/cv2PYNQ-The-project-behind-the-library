-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv12_FFC : STD_LOGIC_VECTOR (11 downto 0) := "111111111100";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_FFB : STD_LOGIC_VECTOR (11 downto 0) := "111111111011";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv18_1AC : STD_LOGIC_VECTOR (17 downto 0) := "000000000110101100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv17_C7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000011000111";
    constant ap_const_lv19_228 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000101000";
    constant ap_const_lv19_398 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001110011000";
    constant ap_const_lv18_228 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000101000";
    constant ap_const_lv20_5FC : STD_LOGIC_VECTOR (19 downto 0) := "00000000010111111100";
    constant ap_const_lv20_4A3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010010100011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_2631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond388_i_reg_2631 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_2662 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_2460 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_2451 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_4_reg_438 : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_449 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op233_read_state7 : BOOLEAN;
    signal ap_predicate_op234_read_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter3_reg_449 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_462_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_81_fu_468_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_70_fu_472_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_88_fu_482_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_90_fu_486_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_99_fu_494_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_701_cast_cast_fu_512_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_73_fu_516_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_93_cast_cast_fu_548_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_77_fu_552_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_78_fu_558_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_V_fu_573_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_2446 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_79_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond389_i_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_2455 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_reg_2465 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_662_1_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_662_1_reg_2469 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_662_2_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_662_2_reg_2473 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_2477 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_618_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_85_reg_2486 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_103_reg_2494 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_s_fu_632_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_s_reg_2499 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_1_fu_638_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_1_reg_2504 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_reg_2512 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_15_1_fu_652_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_15_1_reg_2517 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_2_fu_658_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_2_reg_2522 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_110_reg_2530 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_15_2_fu_672_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_15_2_reg_2535 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_3_fu_678_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_3_reg_2540 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_123_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_15_3_fu_692_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_15_3_reg_2553 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_4_fu_698_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_14_4_reg_2558 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_137_reg_2566 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_15_4_fu_712_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_15_4_reg_2571 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_144_fu_927_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_144_reg_2576 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_96_fu_951_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_96_reg_2581 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_107_fu_975_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_107_reg_2586 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_113_fu_999_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_113_reg_2591 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_125_fu_1023_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_125_reg_2596 : STD_LOGIC_VECTOR (2 downto 0);
    signal rev_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_2601 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_145_fu_1041_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_145_reg_2606 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_1_t_fu_1046_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_1_t_reg_2611 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_2_t_fu_1050_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_2_t_reg_2616 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_3_t_fu_1054_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_3_t_reg_2621 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_4_t_fu_1058_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_assign_13_4_t_reg_2626 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond388_i_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_reg_pp0_iter2_exitcond388_i_reg_2631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond388_i_reg_2631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond388_i_reg_2631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond388_i_reg_2631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond388_i_reg_2631 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_1071_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ImagLoc_x_fu_1093_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_2640 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_151_reg_2646 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_fu_1121_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_reg_2652 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_or_cond_i_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_i_reg_2662 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_i_reg_2662 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_1189_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_2666 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_153_fu_1197_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_153_reg_2671 : STD_LOGIC_VECTOR (2 downto 0);
    signal brmerge_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_2676 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_brmerge_reg_2676 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_5_addr_reg_2685 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_6_t_fu_1218_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_assign_6_t_reg_2691 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_buf_0_val_6_addr_reg_2700 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_6_addr_reg_2700 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_7_addr_reg_2706 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_7_addr_reg_2706 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_8_addr_reg_2712 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_8_addr_reg_2712 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_9_addr_reg_2718 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_9_addr_reg_2718 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_load_reg_2724 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal col_buf_0_val_0_0_fu_1282_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_2729 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_6_load_reg_2739 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1304_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_2744 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_load_reg_2754 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1326_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_2759 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_load_reg_2769 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_3_0_fu_1348_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_3_0_reg_2774 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_4_0_fu_1370_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_4_0_reg_2784 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_1480_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2794 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_20_reg_2794 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_20_reg_2794 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_1496_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2800 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_21_reg_2800 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_21_reg_2800 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_1512_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2806 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_22_reg_2806 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_fu_1528_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2812 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_23_reg_2812 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_23_reg_2812 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_1544_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_2818 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_41_reg_2823 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_41_reg_2823 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_42_reg_2828 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_43_reg_2833 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_37_reg_2843 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_37_reg_2843 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_38_reg_2848 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_38_reg_2848 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_11_0_1_fu_1607_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_11_0_1_reg_2853 : STD_LOGIC_VECTOR (17 downto 0);
    signal src_kernel_win_0_va_56_reg_2873 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_29_reg_2878 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_33_reg_2883 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_35_reg_2888 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2006_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_96_0_1_reg_2893 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal r_V_11_0_3_fu_1673_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_11_0_3_reg_2898 : STD_LOGIC_VECTOR (17 downto 0);
    signal src_kernel_win_0_va_50_reg_2933 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2013_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp41_reg_2938 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal grp_fu_2021_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp42_reg_2943 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2028_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_1_1_reg_2948 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_1_4_fu_1784_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_11_1_4_reg_2958 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_96_0_4_fu_1860_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_96_0_4_fu_1860_p2 : signal is "no";
    signal p_Val2_96_0_4_reg_2978 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2034_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp43_reg_2983 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal grp_fu_2041_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp47_reg_2988 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2048_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_11_2_2_reg_2993 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2054_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_2_4_reg_2998 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2060_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_3_1_reg_3003 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2066_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_11_3_2_reg_3008 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2080_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp44_reg_3013 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal grp_fu_2072_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp46_reg_3018 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2090_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp61_reg_3023 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2097_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp63_reg_3028 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2104_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp64_reg_3033 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2111_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp66_reg_3038 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2129_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp68_reg_3043 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp60_fu_1902_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp60_reg_3048 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp62_fu_1911_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 of tmp62_fu_1911_p2 : signal is "no";
    signal tmp62_reg_3053 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp65_fu_1922_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp65_reg_3058 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_1_fu_1939_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_1_reg_3063 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_2_reg_3068 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_156_reg_3073 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_1998_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_3078 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter3_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_6_ce0 : STD_LOGIC;
    signal k_buf_0_val_6_ce1 : STD_LOGIC;
    signal k_buf_0_val_6_we1 : STD_LOGIC;
    signal k_buf_0_val_6_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_7_ce0 : STD_LOGIC;
    signal k_buf_0_val_7_ce1 : STD_LOGIC;
    signal k_buf_0_val_7_we1 : STD_LOGIC;
    signal k_buf_0_val_7_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_8_ce0 : STD_LOGIC;
    signal k_buf_0_val_8_ce1 : STD_LOGIC;
    signal k_buf_0_val_8_we1 : STD_LOGIC;
    signal k_buf_0_val_8_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_9_ce0 : STD_LOGIC;
    signal k_buf_0_val_9_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_ce1 : STD_LOGIC;
    signal k_buf_0_val_9_we1 : STD_LOGIC;
    signal k_buf_0_val_9_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_427 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_116_fu_1209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_10_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_11_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_12_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_13_fu_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_14_fu_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_15_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_fu_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_17_fu_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_252 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_260 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_264 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_268 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_272 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_6_fu_276 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_7_fu_280 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_8_fu_284 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_9_fu_288 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_10_fu_292 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_11_fu_296 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_12_fu_300 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_13_fu_304 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_308 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_fu_458_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_71_fu_498_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_72_fu_506_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_87_fu_478_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_101_fu_522_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_fu_534_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_76_fu_542_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_74_fu_526_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_97_fu_490_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_cast_fu_564_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_102_fu_718_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev11_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_fu_741_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i425_i_cast_cast_fu_746_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_104_fu_760_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_688_1_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_1_fu_783_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_108_fu_797_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_688_2_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev13_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_2_fu_820_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_115_fu_834_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_688_3_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev14_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_3_fu_857_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_132_fu_871_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_688_4_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev15_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_4_fu_894_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_1_fu_755_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_93_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_fu_911_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_142_fu_915_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond_i424_i_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_fu_908_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_143_fu_919_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_106_fu_793_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_698_1_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_935_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond_i424_i_1_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_146_fu_948_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_95_fu_940_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_111_fu_830_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_698_2_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_fu_959_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond_i424_i_2_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_fu_972_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_100_fu_964_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_127_fu_867_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_698_3_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_fu_983_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond_i424_i_3_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_148_fu_996_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_112_fu_988_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_138_fu_904_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_698_4_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_1007_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond_i424_i_4_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_149_fu_1020_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_124_fu_1012_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_139_fu_1036_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_150_fu_1077_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_4_cast_fu_1062_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_152_fu_1107_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_1115_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev16_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_cast_fu_1152_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_cast_cast_fu_1134_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_4_fu_1159_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_89_not_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1164_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_fu_1206_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_1267_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_118_fu_1289_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_119_fu_1311_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_120_fu_1333_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_121_fu_1355_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_122_fu_1470_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_126_fu_1486_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_128_fu_1502_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_129_fu_1518_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_130_fu_1534_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_11_0_1_fu_1607_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_11_0_3_fu_1673_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_11_1_4_fu_1784_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp42_cast_fu_1857_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_96_0_4_cast_fu_1865_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp43_cast_fu_1868_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_96_1_1_fu_1871_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2120_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp46_cast_fu_1887_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_96_2_1_fu_1890_p2 : STD_LOGIC_VECTOR (20 downto 0);
    attribute use_dsp48 of p_Val2_96_2_1_fu_1890_p2 : signal is "no";
    signal p_Val2_96_2_1_cast_fu_1895_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp61_cast_fu_1899_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp64_cast_fu_1908_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp66_cast_fu_1916_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp68_cast_fu_1919_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp62_cast_fu_1928_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp59_fu_1931_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp65_cast_fu_1936_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_60_i_i_fu_1963_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_fu_1973_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_157_fu_1966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_fu_1978_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_not_fu_1986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2006_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2006_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2013_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2013_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2013_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2021_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2021_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2028_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2028_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2034_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2034_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2041_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2041_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2048_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2048_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2054_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2054_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2060_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2060_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2066_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2066_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2072_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2072_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2072_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2080_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2080_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2080_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2080_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2090_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2090_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2097_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2097_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2104_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2104_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2111_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2111_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2111_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2120_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2120_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2120_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2129_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2129_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2129_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2129_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2006_ce : STD_LOGIC;
    signal grp_fu_2013_ce : STD_LOGIC;
    signal grp_fu_2021_ce : STD_LOGIC;
    signal grp_fu_2028_ce : STD_LOGIC;
    signal grp_fu_2034_ce : STD_LOGIC;
    signal grp_fu_2041_ce : STD_LOGIC;
    signal grp_fu_2048_ce : STD_LOGIC;
    signal grp_fu_2054_ce : STD_LOGIC;
    signal grp_fu_2060_ce : STD_LOGIC;
    signal grp_fu_2066_ce : STD_LOGIC;
    signal grp_fu_2072_ce : STD_LOGIC;
    signal grp_fu_2080_ce : STD_LOGIC;
    signal grp_fu_2090_ce : STD_LOGIC;
    signal grp_fu_2097_ce : STD_LOGIC;
    signal grp_fu_2104_ce : STD_LOGIC;
    signal grp_fu_2111_ce : STD_LOGIC;
    signal grp_fu_2120_ce : STD_LOGIC;
    signal grp_fu_2129_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_2006_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2013_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2013_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2021_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2028_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2034_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2041_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2048_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2054_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2060_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2066_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2072_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2072_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2080_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2080_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2080_p30 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2090_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2097_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2104_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2111_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2111_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2120_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2120_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2129_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2129_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2129_p30 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_0_1_fu_1607_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_11_0_3_fu_1673_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_11_1_4_fu_1784_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_condition_1899 : BOOLEAN;

    component canny_edge_mux_53hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component canny_edge_mac_muibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component canny_edge_mac_mujbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component canny_edge_mul_mukbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component canny_edge_mac_mulbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component canny_edge_mac_mumb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component canny_edge_mul_muncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component canny_edge_ama_adocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component canny_edge_mac_mupcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component canny_edge_mac_muqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component canny_edge_mac_murcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component canny_edge_ama_adsc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component canny_edge_am_addtde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component canny_edge_ama_adudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component Filter2D_1_k_buf_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_5_U : component Filter2D_1_k_buf_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_2685,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => reg_449);

    k_buf_0_val_6_U : component Filter2D_1_k_buf_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_6_address0,
        ce0 => k_buf_0_val_6_ce0,
        q0 => k_buf_0_val_6_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_6_addr_reg_2700,
        ce1 => k_buf_0_val_6_ce1,
        we1 => k_buf_0_val_6_we1,
        d1 => k_buf_0_val_6_d1);

    k_buf_0_val_7_U : component Filter2D_1_k_buf_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_7_address0,
        ce0 => k_buf_0_val_7_ce0,
        q0 => k_buf_0_val_7_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_7_addr_reg_2706,
        ce1 => k_buf_0_val_7_ce1,
        we1 => k_buf_0_val_7_we1,
        d1 => k_buf_0_val_7_d1);

    k_buf_0_val_8_U : component Filter2D_1_k_buf_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_8_address0,
        ce0 => k_buf_0_val_8_ce0,
        q0 => k_buf_0_val_8_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_8_addr_reg_2712,
        ce1 => k_buf_0_val_8_ce1,
        we1 => k_buf_0_val_8_we1,
        d1 => k_buf_0_val_8_d1);

    k_buf_0_val_9_U : component Filter2D_1_k_buf_cud
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_9_address0,
        ce0 => k_buf_0_val_9_ce0,
        q0 => k_buf_0_val_9_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_9_addr_reg_2718,
        ce1 => k_buf_0_val_9_ce1,
        we1 => k_buf_0_val_9_we1,
        d1 => k_buf_0_val_9_d1);

    canny_edge_mux_53hbi_U10 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_252,
        din1 => right_border_buf_0_1_fu_256,
        din2 => right_border_buf_0_2_fu_260,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => col_assign_6_t_reg_2691,
        dout => tmp_117_fu_1267_p7);

    canny_edge_mux_53hbi_U11 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_272,
        din1 => right_border_buf_0_6_fu_276,
        din2 => right_border_buf_0_7_fu_280,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => col_assign_6_t_reg_2691,
        dout => tmp_118_fu_1289_p7);

    canny_edge_mux_53hbi_U12 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_10_fu_292,
        din1 => right_border_buf_0_11_fu_296,
        din2 => right_border_buf_0_12_fu_300,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => col_assign_6_t_reg_2691,
        dout => tmp_119_fu_1311_p7);

    canny_edge_mux_53hbi_U13 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_14_fu_308,
        din1 => right_border_buf_0_13_fu_304,
        din2 => right_border_buf_0_9_fu_288,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => col_assign_6_t_reg_2691,
        dout => tmp_120_fu_1333_p7);

    canny_edge_mux_53hbi_U14 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_8_fu_284,
        din1 => right_border_buf_0_4_fu_268,
        din2 => right_border_buf_0_3_fu_264,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => col_assign_6_t_reg_2691,
        dout => tmp_121_fu_1355_p7);

    canny_edge_mux_53hbi_U15 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2729,
        din1 => col_buf_0_val_1_0_reg_2744,
        din2 => col_buf_0_val_2_0_reg_2759,
        din3 => col_buf_0_val_3_0_reg_2774,
        din4 => col_buf_0_val_4_0_reg_2784,
        din5 => tmp_145_reg_2606,
        dout => tmp_122_fu_1470_p7);

    canny_edge_mux_53hbi_U16 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2729,
        din1 => col_buf_0_val_1_0_reg_2744,
        din2 => col_buf_0_val_2_0_reg_2759,
        din3 => col_buf_0_val_3_0_reg_2774,
        din4 => col_buf_0_val_4_0_reg_2784,
        din5 => row_assign_13_1_t_reg_2611,
        dout => tmp_126_fu_1486_p7);

    canny_edge_mux_53hbi_U17 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2729,
        din1 => col_buf_0_val_1_0_reg_2744,
        din2 => col_buf_0_val_2_0_reg_2759,
        din3 => col_buf_0_val_3_0_reg_2774,
        din4 => col_buf_0_val_4_0_reg_2784,
        din5 => row_assign_13_2_t_reg_2616,
        dout => tmp_128_fu_1502_p7);

    canny_edge_mux_53hbi_U18 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2729,
        din1 => col_buf_0_val_1_0_reg_2744,
        din2 => col_buf_0_val_2_0_reg_2759,
        din3 => col_buf_0_val_3_0_reg_2774,
        din4 => col_buf_0_val_4_0_reg_2784,
        din5 => row_assign_13_3_t_reg_2621,
        dout => tmp_129_fu_1518_p7);

    canny_edge_mux_53hbi_U19 : component canny_edge_mux_53hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2729,
        din1 => col_buf_0_val_1_0_reg_2744,
        din2 => col_buf_0_val_2_0_reg_2759,
        din3 => col_buf_0_val_3_0_reg_2774,
        din4 => col_buf_0_val_4_0_reg_2784,
        din5 => row_assign_13_4_t_reg_2626,
        dout => tmp_130_fu_1534_p7);

    canny_edge_mac_muibs_U20 : component canny_edge_mac_muibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2006_p0,
        din1 => grp_fu_2006_p1,
        din2 => r_V_11_0_1_reg_2853,
        ce => grp_fu_2006_ce,
        dout => grp_fu_2006_p3);

    canny_edge_mac_mujbC_U21 : component canny_edge_mac_mujbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2013_p0,
        din1 => grp_fu_2013_p1,
        din2 => grp_fu_2013_p2,
        ce => grp_fu_2013_ce,
        dout => grp_fu_2013_p3);

    canny_edge_mac_muibs_U22 : component canny_edge_mac_muibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2021_p0,
        din1 => grp_fu_2021_p1,
        din2 => r_V_11_0_3_reg_2898,
        ce => grp_fu_2021_ce,
        dout => grp_fu_2021_p3);

    canny_edge_mul_mukbM_U23 : component canny_edge_mul_mukbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2028_p0,
        din1 => grp_fu_2028_p1,
        ce => grp_fu_2028_ce,
        dout => grp_fu_2028_p2);

    canny_edge_mac_mulbW_U24 : component canny_edge_mac_mulbW
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 19,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2034_p0,
        din1 => grp_fu_2034_p1,
        din2 => r_V_11_1_1_reg_2948,
        ce => grp_fu_2034_ce,
        dout => grp_fu_2034_p3);

    canny_edge_mac_mumb6_U25 : component canny_edge_mac_mumb6
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2041_p0,
        din1 => grp_fu_2041_p1,
        din2 => r_V_11_1_4_reg_2958,
        ce => grp_fu_2041_ce,
        dout => grp_fu_2041_p3);

    canny_edge_mul_muncg_U26 : component canny_edge_mul_muncg
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2048_p0,
        din1 => grp_fu_2048_p1,
        ce => grp_fu_2048_ce,
        dout => grp_fu_2048_p2);

    canny_edge_mul_mukbM_U27 : component canny_edge_mul_mukbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2054_p0,
        din1 => grp_fu_2054_p1,
        ce => grp_fu_2054_ce,
        dout => grp_fu_2054_p2);

    canny_edge_mul_mukbM_U28 : component canny_edge_mul_mukbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2060_p0,
        din1 => grp_fu_2060_p1,
        ce => grp_fu_2060_ce,
        dout => grp_fu_2060_p2);

    canny_edge_mul_muncg_U29 : component canny_edge_mul_muncg
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2066_p0,
        din1 => grp_fu_2066_p1,
        ce => grp_fu_2066_ce,
        dout => grp_fu_2066_p2);

    canny_edge_mac_mujbC_U30 : component canny_edge_mac_mujbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2072_p0,
        din1 => grp_fu_2072_p1,
        din2 => grp_fu_2072_p2,
        ce => grp_fu_2072_ce,
        dout => grp_fu_2072_p3);

    canny_edge_ama_adocq_U31 : component canny_edge_ama_adocq
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        din3_WIDTH => 20,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2080_p0,
        din1 => grp_fu_2080_p1,
        din2 => grp_fu_2080_p2,
        din3 => grp_fu_2080_p3,
        ce => grp_fu_2080_ce,
        dout => grp_fu_2080_p4);

    canny_edge_mac_mupcA_U32 : component canny_edge_mac_mupcA
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2090_p0,
        din1 => grp_fu_2090_p1,
        din2 => r_V_11_2_2_reg_2993,
        ce => grp_fu_2090_ce,
        dout => grp_fu_2090_p3);

    canny_edge_mac_muqcK_U33 : component canny_edge_mac_muqcK
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2097_p0,
        din1 => grp_fu_2097_p1,
        din2 => r_V_11_3_2_reg_3008,
        ce => grp_fu_2097_ce,
        dout => grp_fu_2097_p3);

    canny_edge_mac_murcU_U34 : component canny_edge_mac_murcU
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        din2_WIDTH => 19,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2104_p0,
        din1 => grp_fu_2104_p1,
        din2 => r_V_11_3_1_reg_3003,
        ce => grp_fu_2104_ce,
        dout => grp_fu_2104_p3);

    canny_edge_ama_adsc4_U35 : component canny_edge_ama_adsc4
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        din3_WIDTH => 19,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2111_p0,
        din1 => grp_fu_2111_p1,
        din2 => grp_fu_2111_p2,
        din3 => r_V_11_2_4_reg_2998,
        ce => grp_fu_2111_ce,
        dout => grp_fu_2111_p4);

    canny_edge_am_addtde_U36 : component canny_edge_am_addtde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2120_p0,
        din1 => grp_fu_2120_p1,
        din2 => grp_fu_2120_p2,
        ce => grp_fu_2120_ce,
        dout => grp_fu_2120_p3);

    canny_edge_ama_adudo_U37 : component canny_edge_ama_adudo
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        din3_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2129_p0,
        din1 => grp_fu_2129_p1,
        din2 => grp_fu_2129_p2,
        din3 => grp_fu_2129_p3,
        ce => grp_fu_2129_ce,
        dout => grp_fu_2129_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond388_i_fu_1066_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter3_state8)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_4_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_1066_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_4_reg_438 <= j_V_fu_1071_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_4_reg_438 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                t_V_reg_427 <= i_V_reg_2446;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_427 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_1066_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLoc_x_reg_2640 <= ImagLoc_x_fu_1093_p2;
                or_cond_i_reg_2658 <= or_cond_i_fu_1129_p2;
                p_p2_i_i_reg_2652 <= p_p2_i_i_fu_1121_p3;
                tmp_151_reg_2646 <= ImagLoc_x_fu_1093_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_or_cond_i_reg_2658 <= ap_reg_pp0_iter9_or_cond_i_reg_2658;
                ap_reg_pp0_iter11_or_cond_i_reg_2658 <= ap_reg_pp0_iter10_or_cond_i_reg_2658;
                ap_reg_pp0_iter12_or_cond_i_reg_2658 <= ap_reg_pp0_iter11_or_cond_i_reg_2658;
                ap_reg_pp0_iter2_brmerge_reg_2676 <= brmerge_reg_2676;
                ap_reg_pp0_iter2_exitcond388_i_reg_2631 <= ap_reg_pp0_iter1_exitcond388_i_reg_2631;
                ap_reg_pp0_iter2_or_cond_i_i_reg_2662 <= or_cond_i_i_reg_2662;
                ap_reg_pp0_iter2_or_cond_i_reg_2658 <= ap_reg_pp0_iter1_or_cond_i_reg_2658;
                ap_reg_pp0_iter3_exitcond388_i_reg_2631 <= ap_reg_pp0_iter2_exitcond388_i_reg_2631;
                ap_reg_pp0_iter3_k_buf_0_val_6_addr_reg_2700 <= k_buf_0_val_6_addr_reg_2700;
                ap_reg_pp0_iter3_k_buf_0_val_7_addr_reg_2706 <= k_buf_0_val_7_addr_reg_2706;
                ap_reg_pp0_iter3_k_buf_0_val_8_addr_reg_2712 <= k_buf_0_val_8_addr_reg_2712;
                ap_reg_pp0_iter3_k_buf_0_val_9_addr_reg_2718 <= k_buf_0_val_9_addr_reg_2718;
                ap_reg_pp0_iter3_or_cond_i_i_reg_2662 <= ap_reg_pp0_iter2_or_cond_i_i_reg_2662;
                ap_reg_pp0_iter3_or_cond_i_reg_2658 <= ap_reg_pp0_iter2_or_cond_i_reg_2658;
                ap_reg_pp0_iter3_reg_449 <= reg_449;
                ap_reg_pp0_iter4_exitcond388_i_reg_2631 <= ap_reg_pp0_iter3_exitcond388_i_reg_2631;
                ap_reg_pp0_iter4_or_cond_i_reg_2658 <= ap_reg_pp0_iter3_or_cond_i_reg_2658;
                ap_reg_pp0_iter5_exitcond388_i_reg_2631 <= ap_reg_pp0_iter4_exitcond388_i_reg_2631;
                ap_reg_pp0_iter5_or_cond_i_reg_2658 <= ap_reg_pp0_iter4_or_cond_i_reg_2658;
                ap_reg_pp0_iter5_src_kernel_win_0_va_20_reg_2794 <= src_kernel_win_0_va_20_reg_2794;
                ap_reg_pp0_iter5_src_kernel_win_0_va_21_reg_2800 <= src_kernel_win_0_va_21_reg_2800;
                ap_reg_pp0_iter5_src_kernel_win_0_va_22_reg_2806 <= src_kernel_win_0_va_22_reg_2806;
                ap_reg_pp0_iter5_src_kernel_win_0_va_23_reg_2812 <= src_kernel_win_0_va_23_reg_2812;
                ap_reg_pp0_iter5_src_kernel_win_0_va_41_reg_2823 <= src_kernel_win_0_va_41_reg_2823;
                ap_reg_pp0_iter6_exitcond388_i_reg_2631 <= ap_reg_pp0_iter5_exitcond388_i_reg_2631;
                ap_reg_pp0_iter6_or_cond_i_reg_2658 <= ap_reg_pp0_iter5_or_cond_i_reg_2658;
                ap_reg_pp0_iter6_src_kernel_win_0_va_20_reg_2794 <= ap_reg_pp0_iter5_src_kernel_win_0_va_20_reg_2794;
                ap_reg_pp0_iter6_src_kernel_win_0_va_21_reg_2800 <= ap_reg_pp0_iter5_src_kernel_win_0_va_21_reg_2800;
                ap_reg_pp0_iter6_src_kernel_win_0_va_23_reg_2812 <= ap_reg_pp0_iter5_src_kernel_win_0_va_23_reg_2812;
                ap_reg_pp0_iter6_src_kernel_win_0_va_37_reg_2843 <= src_kernel_win_0_va_37_reg_2843;
                ap_reg_pp0_iter6_src_kernel_win_0_va_38_reg_2848 <= src_kernel_win_0_va_38_reg_2848;
                ap_reg_pp0_iter7_or_cond_i_reg_2658 <= ap_reg_pp0_iter6_or_cond_i_reg_2658;
                ap_reg_pp0_iter8_or_cond_i_reg_2658 <= ap_reg_pp0_iter7_or_cond_i_reg_2658;
                ap_reg_pp0_iter9_or_cond_i_reg_2658 <= ap_reg_pp0_iter8_or_cond_i_reg_2658;
                src_kernel_win_0_va_20_reg_2794 <= src_kernel_win_0_va_20_fu_1480_p3;
                src_kernel_win_0_va_21_reg_2800 <= src_kernel_win_0_va_21_fu_1496_p3;
                src_kernel_win_0_va_22_reg_2806 <= src_kernel_win_0_va_22_fu_1512_p3;
                src_kernel_win_0_va_23_reg_2812 <= src_kernel_win_0_va_23_fu_1528_p3;
                src_kernel_win_0_va_24_reg_2818 <= src_kernel_win_0_va_24_fu_1544_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond388_i_reg_2631 <= exitcond388_i_reg_2631;
                ap_reg_pp0_iter1_or_cond_i_reg_2658 <= or_cond_i_reg_2658;
                exitcond388_i_reg_2631 <= exitcond388_i_fu_1066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_2676 <= brmerge_fu_1201_p2;
                or_cond_i_i_reg_2662 <= or_cond_i_i_fu_1146_p2;
                tmp_153_reg_2671 <= tmp_153_fu_1197_p1;
                x_reg_2666 <= x_fu_1189_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_assign_6_t_reg_2691 <= col_assign_6_t_fu_1218_p2;
                k_buf_0_val_5_addr_reg_2685 <= tmp_116_fu_1209_p1(11 - 1 downto 0);
                k_buf_0_val_6_addr_reg_2700 <= tmp_116_fu_1209_p1(11 - 1 downto 0);
                k_buf_0_val_7_addr_reg_2706 <= tmp_116_fu_1209_p1(11 - 1 downto 0);
                k_buf_0_val_8_addr_reg_2712 <= tmp_116_fu_1209_p1(11 - 1 downto 0);
                k_buf_0_val_9_addr_reg_2718 <= tmp_116_fu_1209_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_0_reg_2729 <= col_buf_0_val_0_0_fu_1282_p3;
                col_buf_0_val_1_0_reg_2744 <= col_buf_0_val_1_0_fu_1304_p3;
                col_buf_0_val_2_0_reg_2759 <= col_buf_0_val_2_0_fu_1326_p3;
                col_buf_0_val_3_0_reg_2774 <= col_buf_0_val_3_0_fu_1348_p3;
                col_buf_0_val_4_0_reg_2784 <= col_buf_0_val_4_0_fu_1370_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_2446 <= i_V_fu_573_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_5_load_reg_2724 <= k_buf_0_val_5_q0;
                k_buf_0_val_6_load_reg_2739 <= k_buf_0_val_6_q0;
                k_buf_0_val_7_load_reg_2754 <= k_buf_0_val_7_q0;
                k_buf_0_val_8_load_reg_2769 <= k_buf_0_val_8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter10_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_1_reg_3063 <= p_Val2_1_fu_1939_p2;
                p_Val2_2_reg_3068 <= p_Val2_1_fu_1939_p2(21 downto 14);
                tmp_156_reg_3073 <= p_Val2_1_fu_1939_p2(13 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_96_0_1_reg_2893 <= grp_fu_2006_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_96_0_4_reg_2978 <= p_Val2_96_0_4_fu_1860_p2;
                r_V_11_2_2_reg_2993 <= grp_fu_2048_p2;
                r_V_11_2_4_reg_2998 <= grp_fu_2054_p2;
                r_V_11_3_1_reg_3003 <= grp_fu_2060_p2;
                r_V_11_3_2_reg_3008 <= grp_fu_2066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter11_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_s_reg_3078 <= p_Val2_s_fu_1998_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_568_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                p_assign_14_1_reg_2504 <= p_assign_14_1_fu_638_p2;
                p_assign_14_2_reg_2522 <= p_assign_14_2_fu_658_p2;
                p_assign_14_3_reg_2540 <= p_assign_14_3_fu_678_p2;
                p_assign_14_4_reg_2558 <= p_assign_14_4_fu_698_p2;
                p_assign_15_1_reg_2517 <= p_assign_15_1_fu_652_p2;
                p_assign_15_2_reg_2535 <= p_assign_15_2_fu_672_p2;
                p_assign_15_3_reg_2553 <= p_assign_15_3_fu_692_p2;
                p_assign_15_4_reg_2571 <= p_assign_15_4_fu_712_p2;
                p_assign_s_reg_2499 <= p_assign_s_fu_632_p2;
                tmp_103_reg_2494 <= tmp_85_fu_618_p2(11 downto 11);
                tmp_105_reg_2512 <= p_assign_14_1_fu_638_p2(11 downto 11);
                tmp_110_reg_2530 <= p_assign_14_2_fu_658_p2(11 downto 11);
                tmp_123_reg_2548 <= p_assign_14_3_fu_678_p2(11 downto 11);
                tmp_137_reg_2566 <= p_assign_14_4_fu_698_p2(11 downto 11);
                tmp_662_1_reg_2469 <= tmp_662_1_fu_601_p2;
                tmp_662_2_reg_2473 <= tmp_662_2_fu_607_p2;
                tmp_79_reg_2451 <= tmp_79_fu_579_p2;
                tmp_82_reg_2460 <= tmp_82_fu_589_p2;
                tmp_83_reg_2465 <= tmp_83_fu_595_p2;
                tmp_84_reg_2477 <= tmp_84_fu_613_p2;
                tmp_85_reg_2486 <= tmp_85_fu_618_p2;
                ult_reg_2455 <= ult_fu_584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    r_V_11_0_1_reg_2853(17 downto 2) <= r_V_11_0_1_fu_1607_p2(17 downto 2);
                src_kernel_win_0_va_37_reg_2843 <= src_kernel_win_0_va_12_fu_220;
                src_kernel_win_0_va_38_reg_2848 <= src_kernel_win_0_va_13_fu_224;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    r_V_11_0_3_reg_2898(17 downto 2) <= r_V_11_0_3_fu_1673_p2(17 downto 2);
                src_kernel_win_0_va_29_reg_2878 <= src_kernel_win_0_va_4_fu_188;
                src_kernel_win_0_va_33_reg_2883 <= src_kernel_win_0_va_8_fu_204;
                src_kernel_win_0_va_35_reg_2888 <= src_kernel_win_0_va_10_fu_212;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_11_1_1_reg_2948 <= grp_fu_2028_p2;
                    r_V_11_1_4_reg_2958(17 downto 2) <= r_V_11_1_4_fu_1784_p2(17 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op234_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op233_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_449 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                rev_reg_2601 <= rev_fu_1031_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_10_fu_292 <= col_buf_0_val_2_0_fu_1326_p3;
                right_border_buf_0_11_fu_296 <= right_border_buf_0_10_fu_292;
                right_border_buf_0_12_fu_300 <= right_border_buf_0_11_fu_296;
                right_border_buf_0_13_fu_304 <= right_border_buf_0_14_fu_308;
                right_border_buf_0_14_fu_308 <= col_buf_0_val_3_0_fu_1348_p3;
                right_border_buf_0_1_fu_256 <= right_border_buf_0_s_fu_252;
                right_border_buf_0_2_fu_260 <= right_border_buf_0_1_fu_256;
                right_border_buf_0_3_fu_264 <= right_border_buf_0_4_fu_268;
                right_border_buf_0_4_fu_268 <= right_border_buf_0_8_fu_284;
                right_border_buf_0_5_fu_272 <= col_buf_0_val_1_0_fu_1304_p3;
                right_border_buf_0_6_fu_276 <= right_border_buf_0_5_fu_272;
                right_border_buf_0_7_fu_280 <= right_border_buf_0_6_fu_276;
                right_border_buf_0_8_fu_284 <= col_buf_0_val_4_0_fu_1370_p3;
                right_border_buf_0_9_fu_288 <= right_border_buf_0_13_fu_304;
                right_border_buf_0_s_fu_252 <= col_buf_0_val_0_0_fu_1282_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_84_reg_2477 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                row_assign_13_1_t_reg_2611 <= row_assign_13_1_t_fu_1046_p2;
                row_assign_13_2_t_reg_2616 <= row_assign_13_2_t_fu_1050_p2;
                row_assign_13_3_t_reg_2621 <= row_assign_13_3_t_fu_1054_p2;
                row_assign_13_4_t_reg_2626 <= row_assign_13_4_t_fu_1058_p2;
                tmp_145_reg_2606 <= tmp_145_fu_1041_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_10_fu_212 <= src_kernel_win_0_va_9_fu_208;
                src_kernel_win_0_va_11_fu_216 <= src_kernel_win_0_va_10_fu_212;
                src_kernel_win_0_va_15_fu_232 <= src_kernel_win_0_va_56_reg_2873;
                src_kernel_win_0_va_4_fu_188 <= ap_reg_pp0_iter5_src_kernel_win_0_va_21_reg_2800;
                src_kernel_win_0_va_5_fu_192 <= src_kernel_win_0_va_4_fu_188;
                src_kernel_win_0_va_6_fu_196 <= src_kernel_win_0_va_5_fu_192;
                src_kernel_win_0_va_8_fu_204 <= ap_reg_pp0_iter5_src_kernel_win_0_va_22_reg_2806;
                src_kernel_win_0_va_9_fu_208 <= src_kernel_win_0_va_8_fu_204;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_12_fu_220 <= src_kernel_win_0_va_23_reg_2812;
                src_kernel_win_0_va_13_fu_224 <= src_kernel_win_0_va_12_fu_220;
                src_kernel_win_0_va_14_fu_228 <= src_kernel_win_0_va_13_fu_224;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_fu_236 <= src_kernel_win_0_va_24_fu_1544_p3;
                src_kernel_win_0_va_17_fu_240 <= src_kernel_win_0_va_16_fu_236;
                src_kernel_win_0_va_18_fu_244 <= src_kernel_win_0_va_17_fu_240;
                src_kernel_win_0_va_19_fu_248 <= src_kernel_win_0_va_18_fu_244;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_176 <= src_kernel_win_0_va_fu_172;
                src_kernel_win_0_va_2_fu_180 <= src_kernel_win_0_va_1_fu_176;
                src_kernel_win_0_va_3_fu_184 <= src_kernel_win_0_va_2_fu_180;
                src_kernel_win_0_va_7_fu_200 <= src_kernel_win_0_va_50_reg_2933;
                src_kernel_win_0_va_fu_172 <= ap_reg_pp0_iter6_src_kernel_win_0_va_20_reg_2794;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_41_reg_2823 <= src_kernel_win_0_va_16_fu_236;
                src_kernel_win_0_va_42_reg_2828 <= src_kernel_win_0_va_17_fu_240;
                src_kernel_win_0_va_43_reg_2833 <= src_kernel_win_0_va_18_fu_244;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_50_reg_2933 <= src_kernel_win_0_va_6_fu_196;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_56_reg_2873 <= src_kernel_win_0_va_14_fu_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp41_reg_2938 <= grp_fu_2013_p3;
                tmp42_reg_2943 <= grp_fu_2021_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp43_reg_2983 <= grp_fu_2034_p3;
                tmp47_reg_2988 <= grp_fu_2041_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter8_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp44_reg_3013 <= grp_fu_2080_p4;
                tmp46_reg_3018 <= grp_fu_2072_p3;
                tmp61_reg_3023 <= grp_fu_2090_p3;
                tmp63_reg_3028 <= grp_fu_2097_p3;
                tmp64_reg_3033 <= grp_fu_2104_p3;
                tmp66_reg_3038 <= grp_fu_2111_p4;
                tmp68_reg_3043 <= grp_fu_2129_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter9_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp60_reg_3048 <= tmp60_fu_1902_p2;
                tmp62_reg_3053 <= tmp62_fu_1911_p2;
                tmp65_reg_3058 <= tmp65_fu_1922_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_84_reg_2477 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_107_reg_2586 <= tmp_107_fu_975_p3;
                tmp_113_reg_2591 <= tmp_113_fu_999_p3;
                tmp_125_reg_2596 <= tmp_125_fu_1023_p3;
                tmp_144_reg_2576 <= tmp_144_fu_927_p3;
                tmp_96_reg_2581 <= tmp_96_fu_951_p3;
            end if;
        end if;
    end process;
    r_V_11_0_1_reg_2853(1 downto 0) <= "00";
    r_V_11_0_3_reg_2898(1 downto 0) <= "00";
    r_V_11_1_4_reg_2958(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter13, ap_CS_fsm_state2, exitcond389_i_fu_568_p2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
        ImagLoc_x_cast_cast_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_reg_2640),13));

    ImagLoc_x_fu_1093_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(t_V_4_cast_fu_1062_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter13, ap_reg_pp0_iter12_or_cond_i_reg_2658, ap_predicate_op233_read_state7, ap_predicate_op234_read_state7)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter12_or_cond_i_reg_2658 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op234_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op233_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter13, ap_reg_pp0_iter12_or_cond_i_reg_2658, ap_predicate_op233_read_state7, ap_predicate_op234_read_state7)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter12_or_cond_i_reg_2658 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op234_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op233_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter13, ap_reg_pp0_iter12_or_cond_i_reg_2658, ap_predicate_op233_read_state7, ap_predicate_op234_read_state7)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter12_or_cond_i_reg_2658 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op234_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op233_read_state7 = ap_const_boolean_1)))));
    end process;

        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter13_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter12_or_cond_i_reg_2658)
    begin
                ap_block_state18_pp0_stage0_iter13 <= ((ap_reg_pp0_iter12_or_cond_i_reg_2658 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op233_read_state7, ap_predicate_op234_read_state7)
    begin
                ap_block_state7_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op234_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op233_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1899_assign_proc : process(ap_block_pp0_stage0, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
                ap_condition_1899 <= ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter3_state8_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond389_i_fu_568_p2)
    begin
        if ((((exitcond389_i_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op233_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_2631, or_cond_i_i_reg_2662, tmp_82_reg_2460)
    begin
                ap_predicate_op233_read_state7 <= ((or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_2631 = ap_const_lv1_0));
    end process;


    ap_predicate_op234_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_2631, or_cond_i_i_reg_2662, tmp_82_reg_2460, tmp_79_reg_2451)
    begin
                ap_predicate_op234_read_state7 <= ((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_2631 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond389_i_fu_568_p2)
    begin
        if (((exitcond389_i_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_1201_p2 <= (tmp_89_fu_1142_p2 or rev_reg_2601);
    col_assign_6_t_fu_1218_p2 <= std_logic_vector(unsigned(tmp_78_fu_558_p2) - unsigned(tmp_153_reg_2671));
        col_assign_cast_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_2666),32));

    col_buf_0_val_0_0_fu_1282_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter2_brmerge_reg_2676(0) = '1') else 
        tmp_117_fu_1267_p7;
    col_buf_0_val_1_0_fu_1304_p3 <= 
        k_buf_0_val_6_q0 when (ap_reg_pp0_iter2_brmerge_reg_2676(0) = '1') else 
        tmp_118_fu_1289_p7;
    col_buf_0_val_2_0_fu_1326_p3 <= 
        k_buf_0_val_7_q0 when (ap_reg_pp0_iter2_brmerge_reg_2676(0) = '1') else 
        tmp_119_fu_1311_p7;
    col_buf_0_val_3_0_fu_1348_p3 <= 
        k_buf_0_val_8_q0 when (ap_reg_pp0_iter2_brmerge_reg_2676(0) = '1') else 
        tmp_120_fu_1333_p7;
    col_buf_0_val_4_0_fu_1370_p3 <= 
        k_buf_0_val_9_q0 when (ap_reg_pp0_iter2_brmerge_reg_2676(0) = '1') else 
        tmp_121_fu_1355_p7;
    exitcond388_i_fu_1066_p2 <= "1" when (t_V_4_reg_438 = tmp_s_fu_462_p2) else "0";
    exitcond389_i_fu_568_p2 <= "1" when (t_V_reg_427 = tmp_70_fu_472_p2) else "0";

    grp_fu_2006_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2006_ce <= ap_const_logic_1;
        else 
            grp_fu_2006_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2006_p0 <= grp_fu_2006_p00(8 - 1 downto 0);
    grp_fu_2006_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_19_fu_248),17));
    grp_fu_2006_p1 <= ap_const_lv17_C7(9 - 1 downto 0);

    grp_fu_2013_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2013_ce <= ap_const_logic_1;
        else 
            grp_fu_2013_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2013_p0 <= grp_fu_2013_p00(8 - 1 downto 0);
    grp_fu_2013_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_42_reg_2828),19));
    grp_fu_2013_p1 <= ap_const_lv19_228(11 - 1 downto 0);
    grp_fu_2013_p2 <= grp_fu_2013_p20(18 - 1 downto 0);
    grp_fu_2013_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_96_0_1_reg_2893),19));

    grp_fu_2021_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2021_ce <= ap_const_logic_1;
        else 
            grp_fu_2021_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2021_p0 <= grp_fu_2021_p00(8 - 1 downto 0);
    grp_fu_2021_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_2818),17));
    grp_fu_2021_p1 <= ap_const_lv17_C7(9 - 1 downto 0);

    grp_fu_2028_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2028_ce <= ap_const_logic_1;
        else 
            grp_fu_2028_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2028_p0 <= grp_fu_2028_p00(8 - 1 downto 0);
    grp_fu_2028_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_14_fu_228),19));
    grp_fu_2028_p1 <= ap_const_lv19_398(11 - 1 downto 0);

    grp_fu_2034_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2034_ce <= ap_const_logic_1;
        else 
            grp_fu_2034_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2034_p0 <= grp_fu_2034_p00(8 - 1 downto 0);
    grp_fu_2034_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_15_fu_232),18));
    grp_fu_2034_p1 <= ap_const_lv18_1AC(10 - 1 downto 0);

    grp_fu_2041_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2041_ce <= ap_const_logic_1;
        else 
            grp_fu_2041_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2041_p0 <= grp_fu_2041_p00(8 - 1 downto 0);
    grp_fu_2041_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_11_fu_216),18));
    grp_fu_2041_p1 <= ap_const_lv18_228(11 - 1 downto 0);

    grp_fu_2048_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2048_ce <= ap_const_logic_1;
        else 
            grp_fu_2048_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2048_p0 <= grp_fu_2048_p00(8 - 1 downto 0);
    grp_fu_2048_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_9_fu_208),20));
    grp_fu_2048_p1 <= ap_const_lv20_5FC(12 - 1 downto 0);

    grp_fu_2054_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2054_ce <= ap_const_logic_1;
        else 
            grp_fu_2054_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2054_p0 <= grp_fu_2054_p00(8 - 1 downto 0);
    grp_fu_2054_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter5_src_kernel_win_0_va_22_reg_2806),19));
    grp_fu_2054_p1 <= ap_const_lv19_228(11 - 1 downto 0);

    grp_fu_2060_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2060_ce <= ap_const_logic_1;
        else 
            grp_fu_2060_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2060_p0 <= grp_fu_2060_p00(8 - 1 downto 0);
    grp_fu_2060_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_fu_196),19));
    grp_fu_2060_p1 <= ap_const_lv19_398(11 - 1 downto 0);

    grp_fu_2066_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2066_ce <= ap_const_logic_1;
        else 
            grp_fu_2066_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2066_p0 <= grp_fu_2066_p00(8 - 1 downto 0);
    grp_fu_2066_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_192),20));
    grp_fu_2066_p1 <= ap_const_lv20_4A3(12 - 1 downto 0);

    grp_fu_2072_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2072_ce <= ap_const_logic_1;
        else 
            grp_fu_2072_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2072_p0 <= grp_fu_2072_p00(8 - 1 downto 0);
    grp_fu_2072_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter6_src_kernel_win_0_va_37_reg_2843),19));
    grp_fu_2072_p1 <= ap_const_lv19_398(11 - 1 downto 0);
    grp_fu_2072_p2 <= grp_fu_2072_p20(18 - 1 downto 0);
    grp_fu_2072_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp47_reg_2988),19));

    grp_fu_2080_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2080_ce <= ap_const_logic_1;
        else 
            grp_fu_2080_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2080_p0 <= grp_fu_2080_p00(8 - 1 downto 0);
    grp_fu_2080_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_35_reg_2888),9));
    grp_fu_2080_p1 <= grp_fu_2080_p10(8 - 1 downto 0);
    grp_fu_2080_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter6_src_kernel_win_0_va_38_reg_2848),9));
    grp_fu_2080_p2 <= ap_const_lv20_4A3(12 - 1 downto 0);
    grp_fu_2080_p3 <= grp_fu_2080_p30(20 - 1 downto 0);
    grp_fu_2080_p30 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_96_1_1_fu_1871_p2),21));

    grp_fu_2090_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2090_ce <= ap_const_logic_1;
        else 
            grp_fu_2090_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2090_p0 <= grp_fu_2090_p00(8 - 1 downto 0);
    grp_fu_2090_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_33_reg_2883),20));
    grp_fu_2090_p1 <= ap_const_lv20_4A3(12 - 1 downto 0);

    grp_fu_2097_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2097_ce <= ap_const_logic_1;
        else 
            grp_fu_2097_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2097_p0 <= grp_fu_2097_p00(8 - 1 downto 0);
    grp_fu_2097_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_29_reg_2878),19));
    grp_fu_2097_p1 <= ap_const_lv19_398(11 - 1 downto 0);

    grp_fu_2104_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2104_ce <= ap_const_logic_1;
        else 
            grp_fu_2104_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2104_p0 <= grp_fu_2104_p00(8 - 1 downto 0);
    grp_fu_2104_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_176),19));
    grp_fu_2104_p1 <= ap_const_lv19_228(11 - 1 downto 0);

    grp_fu_2111_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2111_ce <= ap_const_logic_1;
        else 
            grp_fu_2111_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2111_p0 <= grp_fu_2111_p00(8 - 1 downto 0);
    grp_fu_2111_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_2_fu_180),9));
    grp_fu_2111_p1 <= grp_fu_2111_p10(8 - 1 downto 0);
    grp_fu_2111_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_172),9));
    grp_fu_2111_p2 <= ap_const_lv18_1AC(10 - 1 downto 0);

    grp_fu_2120_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2120_ce <= ap_const_logic_1;
        else 
            grp_fu_2120_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2120_p0 <= grp_fu_2120_p00(8 - 1 downto 0);
    grp_fu_2120_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_fu_200),9));
    grp_fu_2120_p1 <= grp_fu_2120_p10(8 - 1 downto 0);
    grp_fu_2120_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter6_src_kernel_win_0_va_21_reg_2800),9));
    grp_fu_2120_p2 <= ap_const_lv18_1AC(10 - 1 downto 0);

    grp_fu_2129_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_2129_ce <= ap_const_logic_1;
        else 
            grp_fu_2129_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2129_p0 <= grp_fu_2129_p00(8 - 1 downto 0);
    grp_fu_2129_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter6_src_kernel_win_0_va_20_reg_2794),9));
    grp_fu_2129_p1 <= grp_fu_2129_p10(8 - 1 downto 0);
    grp_fu_2129_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_184),9));
    grp_fu_2129_p2 <= ap_const_lv17_C7(9 - 1 downto 0);
    grp_fu_2129_p3 <= grp_fu_2129_p30(18 - 1 downto 0);
    grp_fu_2129_p30 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2120_p3),19));
    i_V_fu_573_p2 <= std_logic_vector(unsigned(t_V_reg_427) + unsigned(ap_const_lv11_1));
    icmp_fu_1087_p2 <= "0" when (tmp_150_fu_1077_p4 = ap_const_lv9_0) else "1";
    j_V_fu_1071_p2 <= std_logic_vector(unsigned(t_V_4_reg_438) + unsigned(ap_const_lv11_1));
    k_buf_0_val_5_address0 <= tmp_116_fu_1209_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_83_reg_2465, ap_reg_pp0_iter2_exitcond388_i_reg_2631, ap_reg_pp0_iter2_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_83_reg_2465 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_83_reg_2465, ap_reg_pp0_iter2_exitcond388_i_reg_2631, ap_reg_pp0_iter2_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_83_reg_2465 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_6_address0 <= tmp_116_fu_1209_p1(11 - 1 downto 0);

    k_buf_0_val_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_ce1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_662_1_reg_2469, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_662_1_reg_2469 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_6_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_d1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_reg_pp0_iter3_reg_449, tmp_662_1_reg_2469, k_buf_0_val_5_load_reg_2724, ap_condition_1899)
    begin
        if ((ap_const_boolean_1 = ap_condition_1899)) then
            if (((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1))) then 
                k_buf_0_val_6_d1 <= k_buf_0_val_5_load_reg_2724;
            elsif (((tmp_662_1_reg_2469 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0))) then 
                k_buf_0_val_6_d1 <= ap_reg_pp0_iter3_reg_449;
            else 
                k_buf_0_val_6_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_6_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_6_we1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_662_1_reg_2469, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_662_1_reg_2469 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_6_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_7_address0 <= tmp_116_fu_1209_p1(11 - 1 downto 0);

    k_buf_0_val_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_ce1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_662_2_reg_2473, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_662_2_reg_2473 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_7_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_d1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_reg_pp0_iter3_reg_449, tmp_662_2_reg_2473, k_buf_0_val_6_load_reg_2739, ap_condition_1899)
    begin
        if ((ap_const_boolean_1 = ap_condition_1899)) then
            if (((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1))) then 
                k_buf_0_val_7_d1 <= k_buf_0_val_6_load_reg_2739;
            elsif (((tmp_662_2_reg_2473 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0))) then 
                k_buf_0_val_7_d1 <= ap_reg_pp0_iter3_reg_449;
            else 
                k_buf_0_val_7_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_7_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_7_we1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_662_2_reg_2473, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_662_2_reg_2473 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_7_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_8_address0 <= tmp_116_fu_1209_p1(11 - 1 downto 0);

    k_buf_0_val_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_ce1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_662_1_reg_2469, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_662_1_reg_2469 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_8_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_d1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_reg_pp0_iter3_reg_449, tmp_662_1_reg_2469, k_buf_0_val_7_load_reg_2754, ap_condition_1899)
    begin
        if ((ap_const_boolean_1 = ap_condition_1899)) then
            if (((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1))) then 
                k_buf_0_val_8_d1 <= k_buf_0_val_7_load_reg_2754;
            elsif (((tmp_662_1_reg_2469 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0))) then 
                k_buf_0_val_8_d1 <= ap_reg_pp0_iter3_reg_449;
            else 
                k_buf_0_val_8_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_8_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_8_we1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_662_1_reg_2469, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_662_1_reg_2469 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_8_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_9_address0 <= tmp_116_fu_1209_p1(11 - 1 downto 0);

    k_buf_0_val_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_ce1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_83_reg_2465, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_83_reg_2465 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_9_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_d1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_reg_pp0_iter3_reg_449, tmp_83_reg_2465, k_buf_0_val_8_load_reg_2769, ap_condition_1899)
    begin
        if ((ap_const_boolean_1 = ap_condition_1899)) then
            if (((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1))) then 
                k_buf_0_val_9_d1 <= k_buf_0_val_8_load_reg_2769;
            elsif (((tmp_83_reg_2465 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0))) then 
                k_buf_0_val_9_d1 <= ap_reg_pp0_iter3_reg_449;
            else 
                k_buf_0_val_9_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_9_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_9_we1_assign_proc : process(tmp_82_reg_2460, tmp_79_reg_2451, ap_block_pp0_stage0_11001, tmp_83_reg_2465, ap_reg_pp0_iter3_or_cond_i_i_reg_2662, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_83_reg_2465 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_9_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_carry_fu_1992_p2 <= (tmp_158_fu_1978_p3 or p_Result_2_i_i_not_fu_1986_p2);
    or_cond_i424_i_1_fu_777_p2 <= (tmp_688_1_fu_773_p2 and rev12_fu_767_p2);
    or_cond_i424_i_2_fu_814_p2 <= (tmp_688_2_fu_810_p2 and rev13_fu_804_p2);
    or_cond_i424_i_3_fu_851_p2 <= (tmp_688_3_fu_847_p2 and rev14_fu_841_p2);
    or_cond_i424_i_4_fu_888_p2 <= (tmp_688_4_fu_884_p2 and rev15_fu_878_p2);
    or_cond_i424_i_fu_735_p2 <= (tmp_92_fu_731_p2 and rev11_fu_725_p2);
    or_cond_i_fu_1129_p2 <= (tmp_82_reg_2460 and icmp_fu_1087_p2);
    or_cond_i_i_fu_1146_p2 <= (tmp_89_fu_1142_p2 and rev16_fu_1137_p2);
    p_Result_2_i_i_not_fu_1986_p2 <= (tmp_157_fu_1966_p3 xor ap_const_lv1_1);
    p_Val2_1_fu_1939_p2 <= std_logic_vector(unsigned(tmp59_fu_1931_p2) + unsigned(tmp65_cast_fu_1936_p1));
    p_Val2_3_fu_1973_p2 <= std_logic_vector(unsigned(tmp_60_i_i_fu_1963_p1) + unsigned(p_Val2_2_reg_3068));
    p_Val2_96_0_4_cast_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_96_0_4_reg_2978),20));
    p_Val2_96_0_4_fu_1860_p2 <= std_logic_vector(unsigned(tmp41_reg_2938) + unsigned(tmp42_cast_fu_1857_p1));
    p_Val2_96_1_1_fu_1871_p2 <= std_logic_vector(unsigned(p_Val2_96_0_4_cast_fu_1865_p1) + unsigned(tmp43_cast_fu_1868_p1));
    p_Val2_96_2_1_cast_fu_1895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_96_2_1_fu_1890_p2),22));
    p_Val2_96_2_1_fu_1890_p2 <= std_logic_vector(unsigned(tmp44_reg_3013) + unsigned(tmp46_cast_fu_1887_p1));
    p_Val2_s_fu_1998_p3 <= 
        p_Val2_3_fu_1973_p2 when (not_carry_fu_1992_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_assign_14_1_fu_638_p2 <= std_logic_vector(unsigned(t_V_cast_fu_564_p1) + unsigned(ap_const_lv12_FFE));
    p_assign_14_2_fu_658_p2 <= std_logic_vector(unsigned(t_V_cast_fu_564_p1) + unsigned(ap_const_lv12_FFD));
    p_assign_14_3_fu_678_p2 <= std_logic_vector(unsigned(t_V_cast_fu_564_p1) + unsigned(ap_const_lv12_FFC));
    p_assign_14_4_fu_698_p2 <= std_logic_vector(unsigned(t_V_cast_fu_564_p1) + unsigned(ap_const_lv12_FFB));
    p_assign_15_1_fu_652_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(t_V_cast_fu_564_p1));
    p_assign_15_2_fu_672_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) - unsigned(t_V_cast_fu_564_p1));
    p_assign_15_3_fu_692_p2 <= std_logic_vector(unsigned(ap_const_lv12_4) - unsigned(t_V_cast_fu_564_p1));
    p_assign_15_4_fu_712_p2 <= std_logic_vector(unsigned(ap_const_lv12_5) - unsigned(t_V_cast_fu_564_p1));
    p_assign_1_fu_755_p2 <= std_logic_vector(unsigned(tmp_701_cast_cast_fu_512_p1) - unsigned(p_p2_i425_i_cast_cast_fu_746_p1));
    p_assign_3_fu_1115_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(t_V_4_cast_fu_1062_p1));
    p_assign_4_fu_1159_p2 <= std_logic_vector(unsigned(tmp_93_cast_cast_fu_548_p1) - unsigned(p_p2_i_i_cast_cast_fu_1152_p1));
    p_assign_s_fu_632_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_cast_fu_564_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter13, ap_reg_pp0_iter12_or_cond_i_reg_2658)
    begin
        if (((ap_reg_pp0_iter12_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_s_reg_3078;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter13, ap_reg_pp0_iter12_or_cond_i_reg_2658, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter12_or_cond_i_reg_2658 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_p2_i425_i_1_fu_783_p3 <= 
        p_assign_15_1_reg_2517 when (tmp_105_reg_2512(0) = '1') else 
        p_assign_14_1_reg_2504;
    p_p2_i425_i_2_fu_820_p3 <= 
        p_assign_15_2_reg_2535 when (tmp_110_reg_2530(0) = '1') else 
        p_assign_14_2_reg_2522;
    p_p2_i425_i_3_fu_857_p3 <= 
        p_assign_15_3_reg_2553 when (tmp_123_reg_2548(0) = '1') else 
        p_assign_14_3_reg_2540;
    p_p2_i425_i_4_fu_894_p3 <= 
        p_assign_15_4_reg_2571 when (tmp_137_reg_2566(0) = '1') else 
        p_assign_14_4_reg_2558;
        p_p2_i425_i_cast_cast_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i425_i_fu_741_p3),13));

    p_p2_i425_i_fu_741_p3 <= 
        p_assign_s_reg_2499 when (tmp_103_reg_2494(0) = '1') else 
        tmp_85_reg_2486;
        p_p2_i_i_cast_cast_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_reg_2652),13));

    p_p2_i_i_fu_1121_p3 <= 
        p_assign_3_fu_1115_p2 when (tmp_152_fu_1107_p3(0) = '1') else 
        ImagLoc_x_fu_1093_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond388_i_reg_2631, or_cond_i_i_reg_2662, tmp_82_reg_2460, tmp_79_reg_2451)
    begin
        if ((((tmp_79_reg_2451 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_1) and (or_cond_i_i_reg_2662 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_2662 = ap_const_lv1_1) and (tmp_82_reg_2460 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_2631 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op233_read_state7, ap_predicate_op234_read_state7, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op234_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op233_read_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_11_0_1_fu_1607_p0 <= r_V_11_0_1_fu_1607_p00(8 - 1 downto 0);
    r_V_11_0_1_fu_1607_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_43_reg_2833),18));
    r_V_11_0_1_fu_1607_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_11_0_1_fu_1607_p0) * unsigned(ap_const_lv18_1AC), 18));
    r_V_11_0_3_fu_1673_p0 <= r_V_11_0_3_fu_1673_p00(8 - 1 downto 0);
    r_V_11_0_3_fu_1673_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter5_src_kernel_win_0_va_41_reg_2823),18));
    r_V_11_0_3_fu_1673_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_11_0_3_fu_1673_p0) * unsigned(ap_const_lv18_1AC), 18));
    r_V_11_1_4_fu_1784_p0 <= r_V_11_1_4_fu_1784_p00(8 - 1 downto 0);
    r_V_11_1_4_fu_1784_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter6_src_kernel_win_0_va_23_reg_2812),18));
    r_V_11_1_4_fu_1784_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_11_1_4_fu_1784_p0) * unsigned(ap_const_lv18_1AC), 18));
    rev11_fu_725_p2 <= (tmp_102_fu_718_p3 xor ap_const_lv1_1);
    rev12_fu_767_p2 <= (tmp_104_fu_760_p3 xor ap_const_lv1_1);
    rev13_fu_804_p2 <= (tmp_108_fu_797_p3 xor ap_const_lv1_1);
    rev14_fu_841_p2 <= (tmp_115_fu_834_p3 xor ap_const_lv1_1);
    rev15_fu_878_p2 <= (tmp_132_fu_871_p3 xor ap_const_lv1_1);
    rev16_fu_1137_p2 <= (tmp_151_reg_2646 xor ap_const_lv1_1);
    rev_fu_1031_p2 <= (ult_reg_2455 xor ap_const_lv1_1);
    row_assign_13_1_t_fu_1046_p2 <= std_logic_vector(unsigned(tmp_73_fu_516_p2) - unsigned(tmp_96_reg_2581));
    row_assign_13_2_t_fu_1050_p2 <= std_logic_vector(unsigned(tmp_73_fu_516_p2) - unsigned(tmp_107_reg_2586));
    row_assign_13_3_t_fu_1054_p2 <= std_logic_vector(unsigned(tmp_73_fu_516_p2) - unsigned(tmp_113_reg_2591));
    row_assign_13_4_t_fu_1058_p2 <= std_logic_vector(unsigned(tmp_73_fu_516_p2) - unsigned(tmp_125_reg_2596));
    sel_tmp5_fu_1178_p2 <= (tmp_89_not_fu_1172_p2 or tmp_151_reg_2646);
    sel_tmp6_fu_1183_p2 <= (tmp_91_fu_1155_p2 and sel_tmp5_fu_1178_p2);
    sel_tmp_fu_1164_p3 <= 
        ImagLoc_x_cast_cast_fu_1134_p1 when (or_cond_i_i_fu_1146_p2(0) = '1') else 
        p_assign_4_fu_1159_p2;
    src_kernel_win_0_va_20_fu_1480_p3 <= 
        tmp_122_fu_1470_p7 when (tmp_84_reg_2477(0) = '1') else 
        col_buf_0_val_0_0_reg_2729;
    src_kernel_win_0_va_21_fu_1496_p3 <= 
        tmp_126_fu_1486_p7 when (tmp_84_reg_2477(0) = '1') else 
        col_buf_0_val_1_0_reg_2744;
    src_kernel_win_0_va_22_fu_1512_p3 <= 
        tmp_128_fu_1502_p7 when (tmp_84_reg_2477(0) = '1') else 
        col_buf_0_val_2_0_reg_2759;
    src_kernel_win_0_va_23_fu_1528_p3 <= 
        tmp_129_fu_1518_p7 when (tmp_84_reg_2477(0) = '1') else 
        col_buf_0_val_3_0_reg_2774;
    src_kernel_win_0_va_24_fu_1544_p3 <= 
        tmp_130_fu_1534_p7 when (tmp_84_reg_2477(0) = '1') else 
        col_buf_0_val_4_0_reg_2784;
    t_V_4_cast_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_4_reg_438),12));
    t_V_cast_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_427),12));
    tmp42_cast_fu_1857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp42_reg_2943),19));
    tmp43_cast_fu_1868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp43_reg_2983),20));
    tmp46_cast_fu_1887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp46_reg_3018),21));
    tmp59_fu_1931_p2 <= std_logic_vector(unsigned(tmp60_reg_3048) + unsigned(tmp62_cast_fu_1928_p1));
    tmp60_fu_1902_p2 <= std_logic_vector(unsigned(p_Val2_96_2_1_cast_fu_1895_p1) + unsigned(tmp61_cast_fu_1899_p1));
    tmp61_cast_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp61_reg_3023),22));
    tmp62_cast_fu_1928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp62_reg_3053),22));
    tmp62_fu_1911_p2 <= std_logic_vector(unsigned(tmp63_reg_3028) + unsigned(tmp64_cast_fu_1908_p1));
    tmp64_cast_fu_1908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp64_reg_3033),20));
    tmp65_cast_fu_1936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp65_reg_3058),22));
    tmp65_fu_1922_p2 <= std_logic_vector(unsigned(tmp66_cast_fu_1916_p1) + unsigned(tmp68_cast_fu_1919_p1));
    tmp66_cast_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp66_reg_3038),20));
    tmp68_cast_fu_1919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp68_reg_3043),20));
    tmp_100_fu_964_p3 <= 
        tmp_111_fu_830_p1 when (tmp_698_2_fu_825_p2(0) = '1') else 
        tmp_98_fu_959_p2;
    tmp_101_fu_522_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_102_fu_718_p3 <= tmp_85_reg_2486(11 downto 11);
    tmp_104_fu_760_p3 <= p_assign_14_1_reg_2504(11 downto 11);
    tmp_106_fu_793_p1 <= p_p2_i425_i_1_fu_783_p3(3 - 1 downto 0);
    tmp_107_fu_975_p3 <= 
        tmp_147_fu_972_p1 when (or_cond_i424_i_2_fu_814_p2(0) = '1') else 
        tmp_100_fu_964_p3;
    tmp_108_fu_797_p3 <= p_assign_14_2_reg_2522(11 downto 11);
    tmp_109_fu_983_p2 <= std_logic_vector(unsigned(tmp_77_fu_552_p2) - unsigned(tmp_127_fu_867_p1));
    tmp_111_fu_830_p1 <= p_p2_i425_i_2_fu_820_p3(3 - 1 downto 0);
    tmp_112_fu_988_p3 <= 
        tmp_127_fu_867_p1 when (tmp_698_3_fu_862_p2(0) = '1') else 
        tmp_109_fu_983_p2;
    tmp_113_fu_999_p3 <= 
        tmp_148_fu_996_p1 when (or_cond_i424_i_3_fu_851_p2(0) = '1') else 
        tmp_112_fu_988_p3;
    tmp_114_fu_1007_p2 <= std_logic_vector(unsigned(tmp_77_fu_552_p2) - unsigned(tmp_138_fu_904_p1));
    tmp_115_fu_834_p3 <= p_assign_14_3_reg_2540(11 downto 11);
    tmp_116_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_1206_p1),64));
    tmp_124_fu_1012_p3 <= 
        tmp_138_fu_904_p1 when (tmp_698_4_fu_899_p2(0) = '1') else 
        tmp_114_fu_1007_p2;
    tmp_125_fu_1023_p3 <= 
        tmp_149_fu_1020_p1 when (or_cond_i424_i_4_fu_888_p2(0) = '1') else 
        tmp_124_fu_1012_p3;
    tmp_127_fu_867_p1 <= p_p2_i425_i_3_fu_857_p3(3 - 1 downto 0);
    tmp_132_fu_871_p3 <= p_assign_14_4_reg_2558(11 downto 11);
    tmp_138_fu_904_p1 <= p_p2_i425_i_4_fu_894_p3(3 - 1 downto 0);
    tmp_139_fu_1036_p2 <= std_logic_vector(unsigned(tmp_88_fu_482_p1) + unsigned(ap_const_lv3_7));
    tmp_140_fu_908_p1 <= tmp_85_reg_2486(3 - 1 downto 0);
    tmp_141_fu_911_p1 <= p_p2_i425_i_fu_741_p3(3 - 1 downto 0);
    tmp_142_fu_915_p1 <= p_assign_1_fu_755_p2(3 - 1 downto 0);
    tmp_143_fu_919_p3 <= 
        tmp_141_fu_911_p1 when (tmp_93_fu_750_p2(0) = '1') else 
        tmp_142_fu_915_p1;
    tmp_144_fu_927_p3 <= 
        tmp_140_fu_908_p1 when (or_cond_i424_i_fu_735_p2(0) = '1') else 
        tmp_143_fu_919_p3;
    tmp_145_fu_1041_p2 <= std_logic_vector(unsigned(tmp_139_fu_1036_p2) - unsigned(tmp_144_reg_2576));
    tmp_146_fu_948_p1 <= p_assign_14_1_reg_2504(3 - 1 downto 0);
    tmp_147_fu_972_p1 <= p_assign_14_2_reg_2522(3 - 1 downto 0);
    tmp_148_fu_996_p1 <= p_assign_14_3_reg_2540(3 - 1 downto 0);
    tmp_149_fu_1020_p1 <= p_assign_14_4_reg_2558(3 - 1 downto 0);
    tmp_150_fu_1077_p4 <= t_V_4_reg_438(10 downto 2);
    tmp_152_fu_1107_p3 <= ImagLoc_x_fu_1093_p2(11 downto 11);
    tmp_153_fu_1197_p1 <= x_fu_1189_p3(3 - 1 downto 0);
    tmp_157_fu_1966_p3 <= p_Val2_1_reg_3063(21 downto 21);
    tmp_158_fu_1978_p3 <= p_Val2_3_fu_1973_p2(7 downto 7);
    tmp_60_i_i_fu_1963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_156_reg_3073),8));
    tmp_662_1_fu_601_p2 <= "1" when (t_V_reg_427 = ap_const_lv11_1) else "0";
    tmp_662_2_fu_607_p2 <= "1" when (t_V_reg_427 = ap_const_lv11_0) else "0";
    tmp_688_1_fu_773_p2 <= "1" when (signed(p_assign_14_1_reg_2504) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_688_2_fu_810_p2 <= "1" when (signed(p_assign_14_2_reg_2522) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_688_3_fu_847_p2 <= "1" when (signed(p_assign_14_3_reg_2540) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_688_4_fu_884_p2 <= "1" when (signed(p_assign_14_4_reg_2558) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_698_1_fu_788_p2 <= "1" when (signed(p_p2_i425_i_1_fu_783_p3) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_698_2_fu_825_p2 <= "1" when (signed(p_p2_i425_i_2_fu_820_p3) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_698_3_fu_862_p2 <= "1" when (signed(p_p2_i425_i_3_fu_857_p3) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_698_4_fu_899_p2 <= "1" when (signed(p_p2_i425_i_4_fu_894_p3) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_701_cast_cast_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_fu_506_p2),13));
    tmp_70_fu_472_p2 <= std_logic_vector(unsigned(ap_const_lv11_3) + unsigned(tmp_81_fu_468_p1));
    tmp_71_fu_498_p3 <= (tmp_81_fu_468_p1 & ap_const_lv1_0);
    tmp_72_fu_506_p2 <= std_logic_vector(unsigned(ap_const_lv12_6) + unsigned(tmp_71_fu_498_p3));
    tmp_73_fu_516_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(tmp_87_fu_478_p1));
    tmp_74_fu_526_p3 <= (tmp_101_fu_522_p1 & ap_const_lv1_0);
    tmp_75_fu_534_p3 <= (tmp_80_fu_458_p1 & ap_const_lv1_0);
    tmp_76_fu_542_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(tmp_75_fu_534_p3));
    tmp_77_fu_552_p2 <= std_logic_vector(signed(ap_const_lv3_6) + signed(tmp_74_fu_526_p3));
    tmp_78_fu_558_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(tmp_97_fu_490_p1));
    tmp_79_fu_579_p2 <= "1" when (unsigned(t_V_reg_427) < unsigned(tmp_81_fu_468_p1)) else "0";
    tmp_80_fu_458_p1 <= p_src_cols_V_read(11 - 1 downto 0);
    tmp_81_fu_468_p1 <= p_src_rows_V_read(11 - 1 downto 0);
    tmp_82_fu_589_p2 <= "1" when (unsigned(t_V_reg_427) > unsigned(ap_const_lv11_2)) else "0";
    tmp_83_fu_595_p2 <= "1" when (t_V_reg_427 = ap_const_lv11_2) else "0";
    tmp_84_fu_613_p2 <= "1" when (unsigned(t_V_reg_427) > unsigned(tmp_81_fu_468_p1)) else "0";
    tmp_85_fu_618_p2 <= std_logic_vector(unsigned(t_V_cast_fu_564_p1) + unsigned(ap_const_lv12_FFF));
    tmp_87_fu_478_p1 <= p_src_rows_V_read(3 - 1 downto 0);
    tmp_88_fu_482_p1 <= p_src_rows_V_read(3 - 1 downto 0);
    tmp_89_fu_1142_p2 <= "1" when (signed(ImagLoc_x_reg_2640) < signed(tmp_90_fu_486_p1)) else "0";
    tmp_89_not_fu_1172_p2 <= (tmp_89_fu_1142_p2 xor ap_const_lv1_1);
    tmp_90_fu_486_p1 <= p_src_cols_V_read(12 - 1 downto 0);
    tmp_91_fu_1155_p2 <= "1" when (signed(p_p2_i_i_reg_2652) < signed(tmp_90_fu_486_p1)) else "0";
    tmp_92_fu_731_p2 <= "1" when (signed(tmp_85_reg_2486) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_93_cast_cast_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_542_p2),13));
    tmp_93_fu_750_p2 <= "1" when (signed(p_p2_i425_i_fu_741_p3) < signed(tmp_99_fu_494_p1)) else "0";
    tmp_94_fu_935_p2 <= std_logic_vector(unsigned(tmp_77_fu_552_p2) - unsigned(tmp_106_fu_793_p1));
    tmp_95_fu_940_p3 <= 
        tmp_106_fu_793_p1 when (tmp_698_1_fu_788_p2(0) = '1') else 
        tmp_94_fu_935_p2;
    tmp_96_fu_951_p3 <= 
        tmp_146_fu_948_p1 when (or_cond_i424_i_1_fu_777_p2(0) = '1') else 
        tmp_95_fu_940_p3;
    tmp_97_fu_490_p1 <= p_src_cols_V_read(3 - 1 downto 0);
    tmp_98_fu_959_p2 <= std_logic_vector(unsigned(tmp_77_fu_552_p2) - unsigned(tmp_111_fu_830_p1));
    tmp_99_fu_494_p1 <= p_src_rows_V_read(12 - 1 downto 0);
    tmp_s_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv11_4) + unsigned(tmp_80_fu_458_p1));
    ult_fu_584_p2 <= "1" when (unsigned(t_V_reg_427) < unsigned(tmp_81_fu_468_p1)) else "0";
    x_fu_1189_p3 <= 
        p_p2_i_i_cast_cast_fu_1152_p1 when (sel_tmp6_fu_1183_p2(0) = '1') else 
        sel_tmp_fu_1164_p3;
end behav;
