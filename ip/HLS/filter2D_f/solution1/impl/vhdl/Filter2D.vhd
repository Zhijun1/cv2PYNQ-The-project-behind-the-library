-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_0_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_0_V_0_empty_n : IN STD_LOGIC;
    p_kernel_val_0_V_0_read : OUT STD_LOGIC;
    p_kernel_val_0_V_1_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_0_V_1_empty_n : IN STD_LOGIC;
    p_kernel_val_0_V_1_read : OUT STD_LOGIC;
    p_kernel_val_0_V_2_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_0_V_2_empty_n : IN STD_LOGIC;
    p_kernel_val_0_V_2_read : OUT STD_LOGIC;
    p_kernel_val_1_V_0_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_1_V_0_empty_n : IN STD_LOGIC;
    p_kernel_val_1_V_0_read : OUT STD_LOGIC;
    p_kernel_val_1_V_1_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_1_V_1_empty_n : IN STD_LOGIC;
    p_kernel_val_1_V_1_read : OUT STD_LOGIC;
    p_kernel_val_1_V_2_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_1_V_2_empty_n : IN STD_LOGIC;
    p_kernel_val_1_V_2_read : OUT STD_LOGIC;
    p_kernel_val_2_V_0_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_2_V_0_empty_n : IN STD_LOGIC;
    p_kernel_val_2_V_0_read : OUT STD_LOGIC;
    p_kernel_val_2_V_1_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_2_V_1_empty_n : IN STD_LOGIC;
    p_kernel_val_2_V_1_read : OUT STD_LOGIC;
    p_kernel_val_2_V_2_dout : IN STD_LOGIC_VECTOR (24 downto 0);
    p_kernel_val_2_V_2_empty_n : IN STD_LOGIC;
    p_kernel_val_2_V_2_read : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_i_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond388_i_i_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1981 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1841 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_reg_1832 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_kernel_val_0_V_0_blk_n : STD_LOGIC;
    signal p_kernel_val_0_V_1_blk_n : STD_LOGIC;
    signal p_kernel_val_0_V_2_blk_n : STD_LOGIC;
    signal p_kernel_val_1_V_0_blk_n : STD_LOGIC;
    signal p_kernel_val_1_V_1_blk_n : STD_LOGIC;
    signal p_kernel_val_1_V_2_blk_n : STD_LOGIC;
    signal p_kernel_val_2_V_0_blk_n : STD_LOGIC;
    signal p_kernel_val_2_V_1_blk_n : STD_LOGIC;
    signal p_kernel_val_2_V_2_blk_n : STD_LOGIC;
    signal t_V_1_reg_500 : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_511 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op204_read_state7 : BOOLEAN;
    signal ap_predicate_op205_read_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter3_reg_511 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_518_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_11_fu_522_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_fu_526_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_fu_534_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_i_fu_540_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_550_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_135_cast_cast_i_fu_572_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_576_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal OP2_V_0_i_fu_594_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_0_i_reg_1763 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_0_1_i_fu_598_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_0_1_i_reg_1768 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_0_2_i_fu_602_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_0_2_i_reg_1773 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_1_i_fu_606_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_1_i_reg_1778 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_1_1_i_fu_610_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_1_1_i_reg_1783 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_1_2_i_fu_614_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_1_2_i_reg_1788 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_i_fu_618_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_i_reg_1793 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_1_i_fu_622_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_1_i_reg_1798 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_2_i_fu_626_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_2_i_reg_1803 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_10_cast_cast_i_fu_644_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_648_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_654_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_669_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1827 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_2_i_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond389_i_i_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_1836 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_i_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_i_reg_1846 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_1_i_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_1_i_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_i_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_i_reg_1854 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_i_fu_718_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_118_i_reg_1861 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_30_reg_1869 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_i_fu_732_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_i_reg_1874 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_i_fu_738_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_i_reg_1879 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_reg_1887 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_i_fu_752_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_1_i_reg_1892 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_i_fu_758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_i_reg_1897 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_35_reg_1905 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_i_fu_772_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_2_i_reg_1910 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_42_fu_913_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_reg_1915 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_3_fu_937_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_reg_1920 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_961_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_reg_1925 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1930 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_43_fu_979_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_reg_1935 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_i_fu_984_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_i_reg_1940 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_i_fu_988_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_i_reg_1945 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_i_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond388_i_i_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond388_i_i_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond388_i_i_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_1001_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ImagLoc_x_fu_1023_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_1959 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_reg_1965 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_i_fu_1051_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_i_reg_1971 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_i_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_or_cond_i_i_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_1119_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1985 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_49_fu_1127_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_49_reg_1990 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_i_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_reg_1995 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_brmerge_i_reg_1995 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_2002 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_1_t_i_fu_1146_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_1_t_i_reg_2008 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_2015 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_2015 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_2021 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_2021 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_2027 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal col_buf_0_val_0_0_fu_1179_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_2032 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_2040 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1197_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_2045 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1215_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_2053 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_1266_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_2061 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_2061 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_2061 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_2061 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_src_kernel_win_0_va_6_reg_2061 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_src_kernel_win_0_va_6_reg_2061 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_1280_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_2067 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_2067 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_2067 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_src_kernel_win_0_va_7_reg_2067 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_1294_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_2073 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_17_reg_2089 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_reg_2094 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_11_reg_2099 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_src_kernel_win_0_va_11_reg_2099 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1576_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_2_0_1_i_reg_2119 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1581_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_2_0_2_i_reg_2124 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1586_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_5_0_1_i_reg_2134 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal grp_fu_1593_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp24_reg_2139 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_1600_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_2_2_i_reg_2154 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_5_1_i_fu_1393_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_5_1_i_reg_2159 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1605_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp27_reg_2164 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal grp_fu_1612_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp25_reg_2169 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal grp_fu_1619_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp26_reg_2174 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_5_2_1_i_fu_1414_p2 : STD_LOGIC_VECTOR (35 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_5_2_1_i_fu_1414_p2 : signal is "no";
    signal p_Val2_5_2_1_i_reg_2184 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1626_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_Val2_3_reg_2189 : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal signbit_reg_2194 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_reg_2201 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_reg_2206 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_2211 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_2217 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1476_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_2222 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_39_demorgan_i_i_i_i_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_i_reg_2227 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_i_fu_1533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_i_reg_2233 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_i_i_fu_1539_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i_i_reg_2239 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter3_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_489 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal tmp_58_i_fu_1139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_308 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_312 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_316 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_320 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_324 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_328 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_332 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_336 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_340 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_344 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_348 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_352 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_530_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_134_i_fu_558_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_135_i_fu_566_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_546_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_582_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_fu_630_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_i_fu_638_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_586_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_554_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_685_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_cast_i_fu_660_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_fu_778_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_i_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_i_fu_801_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i425_i_cast_cast_fu_806_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_31_fu_820_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_1_i_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_1_i_fu_843_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_fu_857_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_2_i_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_2_i_fu_880_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_8_i_fu_815_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_132_i_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_897_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_fu_901_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_i_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_894_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_905_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_fu_853_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_1_i_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_921_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_1_i_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_934_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_926_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_36_fu_890_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_2_i_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_945_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_2_i_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_958_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_950_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_fu_974_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_46_fu_1007_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_1_cast_i_fu_992_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_48_fu_1037_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_1045_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp1_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_cast19_s_fu_1082_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_cast_cast_s_fu_1064_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_fu_1089_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_i_not_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1094_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_i_fu_1136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1168_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1186_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1204_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1258_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1272_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_1286_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_cast_fu_1390_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_5_0_1_cast_s_fu_1387_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp26_cast_fu_1411_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Result_6_i_i_i_fu_1445_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_i_i_i_fu_1466_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_1481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1469_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_i_i_fu_1489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i_i_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1501_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i_s_fu_1547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_i_fu_1561_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1576_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1576_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1581_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1581_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1586_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1586_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1593_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1593_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1600_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1600_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1605_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1605_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1612_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1612_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1619_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1619_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1626_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1626_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1576_ce : STD_LOGIC;
    signal grp_fu_1581_ce : STD_LOGIC;
    signal grp_fu_1586_ce : STD_LOGIC;
    signal grp_fu_1593_ce : STD_LOGIC;
    signal grp_fu_1600_ce : STD_LOGIC;
    signal grp_fu_1605_ce : STD_LOGIC;
    signal grp_fu_1612_ce : STD_LOGIC;
    signal grp_fu_1619_ce : STD_LOGIC;
    signal grp_fu_1626_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1576_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1581_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1586_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1593_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1600_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1605_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1612_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1619_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1626_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_condition_1475 : BOOLEAN;

    component filter2D_f_mux_32g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter2D_f_mul_muhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component filter2D_f_mac_muibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (32 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component filter2D_f_mac_mujbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (34 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component filter2D_f_mac_mukbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component filter2D_f_mac_mulbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (35 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component Filter2D_k_buf_0_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_2002,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => reg_511);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_2015,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_2021,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    filter2D_f_mux_32g8j_U31 : component filter2D_f_mux_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_332,
        din1 => right_border_buf_0_1_fu_336,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_i_reg_2008,
        dout => tmp_10_fu_1168_p5);

    filter2D_f_mux_32g8j_U32 : component filter2D_f_mux_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_344,
        din1 => right_border_buf_0_4_fu_348,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_i_reg_2008,
        dout => tmp_12_fu_1186_p5);

    filter2D_f_mux_32g8j_U33 : component filter2D_f_mux_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_352,
        din1 => right_border_buf_0_2_fu_340,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_i_reg_2008,
        dout => tmp_13_fu_1204_p5);

    filter2D_f_mux_32g8j_U34 : component filter2D_f_mux_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2032,
        din1 => col_buf_0_val_1_0_reg_2045,
        din2 => col_buf_0_val_2_0_reg_2053,
        din3 => tmp_43_reg_1935,
        dout => tmp_14_fu_1258_p5);

    filter2D_f_mux_32g8j_U35 : component filter2D_f_mux_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2032,
        din1 => col_buf_0_val_1_0_reg_2045,
        din2 => col_buf_0_val_2_0_reg_2053,
        din3 => row_assign_8_1_t_i_reg_1940,
        dout => tmp_15_fu_1272_p5);

    filter2D_f_mux_32g8j_U36 : component filter2D_f_mux_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_2032,
        din1 => col_buf_0_val_1_0_reg_2045,
        din2 => col_buf_0_val_2_0_reg_2053,
        din3 => row_assign_8_2_t_i_reg_1945,
        dout => tmp_18_fu_1286_p5);

    filter2D_f_mul_muhbi_U37 : component filter2D_f_mul_muhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        dout_WIDTH => 33)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1576_p0,
        din1 => grp_fu_1576_p1,
        ce => grp_fu_1576_ce,
        dout => grp_fu_1576_p2);

    filter2D_f_mul_muhbi_U38 : component filter2D_f_mul_muhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        dout_WIDTH => 33)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1581_p0,
        din1 => grp_fu_1581_p1,
        ce => grp_fu_1581_ce,
        dout => grp_fu_1581_p2);

    filter2D_f_mac_muibs_U39 : component filter2D_f_mac_muibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        din2_WIDTH => 33,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1586_p0,
        din1 => grp_fu_1586_p1,
        din2 => r_V_2_0_1_i_reg_2119,
        ce => grp_fu_1586_ce,
        dout => grp_fu_1586_p3);

    filter2D_f_mac_muibs_U40 : component filter2D_f_mac_muibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        din2_WIDTH => 33,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1593_p0,
        din1 => grp_fu_1593_p1,
        din2 => r_V_2_0_2_i_reg_2124,
        ce => grp_fu_1593_ce,
        dout => grp_fu_1593_p3);

    filter2D_f_mul_muhbi_U41 : component filter2D_f_mul_muhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        dout_WIDTH => 33)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1600_p0,
        din1 => grp_fu_1600_p1,
        ce => grp_fu_1600_ce,
        dout => grp_fu_1600_p2);

    filter2D_f_mac_muibs_U42 : component filter2D_f_mac_muibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        din2_WIDTH => 33,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1605_p0,
        din1 => grp_fu_1605_p1,
        din2 => r_V_2_2_i_reg_2154,
        ce => grp_fu_1605_ce,
        dout => grp_fu_1605_p3);

    filter2D_f_mac_mujbC_U43 : component filter2D_f_mac_mujbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        din2_WIDTH => 35,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1612_p0,
        din1 => grp_fu_1612_p1,
        din2 => p_Val2_5_1_i_reg_2159,
        ce => grp_fu_1612_ce,
        dout => grp_fu_1612_p3);

    filter2D_f_mac_mukbM_U44 : component filter2D_f_mac_mukbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        din2_WIDTH => 34,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1619_p0,
        din1 => grp_fu_1619_p1,
        din2 => tmp27_reg_2164,
        ce => grp_fu_1619_ce,
        dout => grp_fu_1619_p3);

    filter2D_f_mac_mulbW_U45 : component filter2D_f_mac_mulbW
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 25,
        din1_WIDTH => 8,
        din2_WIDTH => 36,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1626_p0,
        din1 => grp_fu_1626_p1,
        din2 => p_Val2_5_2_1_i_reg_2184,
        ce => grp_fu_1626_ce,
        dout => grp_fu_1626_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond389_i_i_fu_664_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_i_fu_996_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter3_state8)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_1_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_fu_996_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_1_reg_500 <= j_V_fu_1001_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_1_reg_500 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                t_V_reg_489 <= i_V_reg_1827;
            elsif ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_489 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_fu_996_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLoc_x_reg_1959 <= ImagLoc_x_fu_1023_p2;
                or_cond_i_i_reg_1977 <= or_cond_i_i_fu_1059_p2;
                p_p2_i_i_i_reg_1971 <= p_p2_i_i_i_fu_1051_p3;
                tmp_47_reg_1965 <= ImagLoc_x_fu_1023_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                OP2_V_0_1_i_reg_1768 <= OP2_V_0_1_i_fu_598_p1;
                OP2_V_0_2_i_reg_1773 <= OP2_V_0_2_i_fu_602_p1;
                OP2_V_0_i_reg_1763 <= OP2_V_0_i_fu_594_p1;
                OP2_V_1_1_i_reg_1783 <= OP2_V_1_1_i_fu_610_p1;
                OP2_V_1_2_i_reg_1788 <= OP2_V_1_2_i_fu_614_p1;
                OP2_V_1_i_reg_1778 <= OP2_V_1_i_fu_606_p1;
                OP2_V_2_1_i_reg_1798 <= OP2_V_2_1_i_fu_622_p1;
                OP2_V_2_2_i_reg_1803 <= OP2_V_2_2_i_fu_626_p1;
                OP2_V_2_i_reg_1793 <= OP2_V_2_i_fu_618_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter11_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_reg_2211 <= Range1_all_ones_fu_1454_p2;
                Range1_all_zeros_reg_2217 <= Range1_all_zeros_fu_1460_p2;
                p_Val2_1_reg_2201 <= grp_fu_1626_p3(30 downto 23);
                signbit_reg_2194 <= grp_fu_1626_p3(36 downto 36);
                tmp_53_reg_2206 <= grp_fu_1626_p3(22 downto 22);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter9_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter11_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter10_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter12_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter11_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter13_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter12_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter2_brmerge_i_reg_1995 <= brmerge_i_reg_1995;
                ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 <= ap_reg_pp0_iter1_exitcond388_i_i_reg_1950;
                ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981 <= or_cond_i_i_i_reg_1981;
                ap_reg_pp0_iter2_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter1_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter3_exitcond388_i_i_reg_1950 <= ap_reg_pp0_iter2_exitcond388_i_i_reg_1950;
                ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_2015 <= k_buf_0_val_4_addr_reg_2015;
                ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_2021 <= k_buf_0_val_5_addr_reg_2021;
                ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 <= ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981;
                ap_reg_pp0_iter3_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter2_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter3_reg_511 <= reg_511;
                ap_reg_pp0_iter4_exitcond388_i_i_reg_1950 <= ap_reg_pp0_iter3_exitcond388_i_i_reg_1950;
                ap_reg_pp0_iter4_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter3_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter5_exitcond388_i_i_reg_1950 <= ap_reg_pp0_iter4_exitcond388_i_i_reg_1950;
                ap_reg_pp0_iter5_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter4_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_2061 <= src_kernel_win_0_va_6_reg_2061;
                ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_2067 <= src_kernel_win_0_va_7_reg_2067;
                ap_reg_pp0_iter6_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter5_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_2061 <= ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_2061;
                ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_2067 <= ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_2067;
                ap_reg_pp0_iter7_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter6_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter7_src_kernel_win_0_va_11_reg_2099 <= src_kernel_win_0_va_11_reg_2099;
                ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_2061 <= ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_2061;
                ap_reg_pp0_iter7_src_kernel_win_0_va_7_reg_2067 <= ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_2067;
                ap_reg_pp0_iter8_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter7_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter8_src_kernel_win_0_va_6_reg_2061 <= ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_2061;
                ap_reg_pp0_iter9_or_cond_i_i_reg_1977 <= ap_reg_pp0_iter8_or_cond_i_i_reg_1977;
                ap_reg_pp0_iter9_src_kernel_win_0_va_6_reg_2061 <= ap_reg_pp0_iter8_src_kernel_win_0_va_6_reg_2061;
                src_kernel_win_0_va_6_reg_2061 <= src_kernel_win_0_va_6_fu_1266_p3;
                src_kernel_win_0_va_7_reg_2067 <= src_kernel_win_0_va_7_fu_1280_p3;
                src_kernel_win_0_va_8_reg_2073 <= src_kernel_win_0_va_8_fu_1294_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond388_i_i_reg_1950 <= exitcond388_i_i_reg_1950;
                ap_reg_pp0_iter1_or_cond_i_i_reg_1977 <= or_cond_i_i_reg_1977;
                exitcond388_i_i_reg_1950 <= exitcond388_i_i_fu_996_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_i_reg_1995 <= brmerge_i_fu_1131_p2;
                or_cond_i_i_i_reg_1981 <= or_cond_i_i_i_fu_1076_p2;
                tmp_49_reg_1990 <= tmp_49_fu_1127_p1;
                x_reg_1985 <= x_fu_1119_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_assign_1_t_i_reg_2008 <= col_assign_1_t_i_fu_1146_p2;
                k_buf_0_val_3_addr_reg_2002 <= tmp_58_i_fu_1139_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_2015 <= tmp_58_i_fu_1139_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_2021 <= tmp_58_i_fu_1139_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_0_reg_2032 <= col_buf_0_val_0_0_fu_1179_p3;
                col_buf_0_val_1_0_reg_2045 <= col_buf_0_val_1_0_fu_1197_p3;
                col_buf_0_val_2_0_reg_2053 <= col_buf_0_val_2_0_fu_1215_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1827 <= i_V_fu_669_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_i_fu_664_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1841 <= icmp_fu_695_p2;
                p_assign_6_1_i_reg_1879 <= p_assign_6_1_i_fu_738_p2;
                p_assign_6_2_i_reg_1897 <= p_assign_6_2_i_fu_758_p2;
                p_assign_7_1_i_reg_1892 <= p_assign_7_1_i_fu_752_p2;
                p_assign_7_2_i_reg_1910 <= p_assign_7_2_i_fu_772_p2;
                p_assign_7_i_reg_1874 <= p_assign_7_i_fu_732_p2;
                tmp_115_i_reg_1854 <= tmp_115_i_fu_713_p2;
                tmp_118_i_reg_1861 <= tmp_118_i_fu_718_p2;
                tmp_2_i_reg_1832 <= tmp_2_i_fu_675_p2;
                tmp_30_reg_1869 <= tmp_118_i_fu_718_p2(11 downto 11);
                tmp_32_reg_1887 <= p_assign_6_1_i_fu_738_p2(11 downto 11);
                tmp_35_reg_1905 <= p_assign_6_2_i_fu_758_p2(11 downto 11);
                tmp_93_1_i_reg_1850 <= tmp_93_1_i_fu_707_p2;
                tmp_93_i_reg_1846 <= tmp_93_i_fu_701_p2;
                ult_reg_1836 <= ult_fu_680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_load_reg_2027 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_2040 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter12_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                neg_src_not_i_i_i_reg_2233 <= neg_src_not_i_i_i_fu_1533_p2;
                p_39_demorgan_i_i_i_i_reg_2227 <= p_39_demorgan_i_i_i_i_fu_1523_p2;
                p_Val2_2_reg_2222 <= p_Val2_2_fu_1476_p2;
                p_i_i_i_reg_2239 <= p_i_i_i_fu_1539_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter11_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_3_reg_2189 <= grp_fu_1626_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_5_0_1_i_reg_2134 <= grp_fu_1586_p3;
                tmp24_reg_2139 <= grp_fu_1593_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter8_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_5_1_i_reg_2159 <= p_Val2_5_1_i_fu_1393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter10_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_5_2_1_i_reg_2184 <= p_Val2_5_2_1_i_fu_1414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_2_0_1_i_reg_2119 <= grp_fu_1576_p2;
                r_V_2_0_2_i_reg_2124 <= grp_fu_1581_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_2_2_i_reg_2154 <= grp_fu_1600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op205_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op204_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_511 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                rev_reg_1930 <= rev_fu_969_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_336 <= right_border_buf_0_s_fu_332;
                right_border_buf_0_2_fu_340 <= right_border_buf_0_5_fu_352;
                right_border_buf_0_3_fu_344 <= col_buf_0_val_1_0_fu_1197_p3;
                right_border_buf_0_4_fu_348 <= right_border_buf_0_3_fu_344;
                right_border_buf_0_5_fu_352 <= col_buf_0_val_2_0_fu_1215_p3;
                right_border_buf_0_s_fu_332 <= col_buf_0_val_0_0_fu_1179_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_115_i_reg_1854 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                row_assign_8_1_t_i_reg_1940 <= row_assign_8_1_t_i_fu_984_p2;
                row_assign_8_2_t_i_reg_1945 <= row_assign_8_2_t_i_fu_988_p2;
                tmp_43_reg_1935 <= tmp_43_fu_979_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_11_reg_2099 <= src_kernel_win_0_va_2_fu_316;
                src_kernel_win_0_va_9_reg_2094 <= src_kernel_win_0_va_fu_308;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_17_reg_2089 <= src_kernel_win_0_va_4_fu_324;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_312 <= src_kernel_win_0_va_fu_308;
                src_kernel_win_0_va_2_fu_316 <= ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_2067;
                src_kernel_win_0_va_3_fu_320 <= src_kernel_win_0_va_2_fu_316;
                src_kernel_win_0_va_5_fu_328 <= src_kernel_win_0_va_17_reg_2089;
                src_kernel_win_0_va_fu_308 <= ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_2061;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_4_fu_324 <= src_kernel_win_0_va_8_reg_2073;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter9_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp25_reg_2169 <= grp_fu_1612_p3;
                tmp26_reg_2174 <= grp_fu_1619_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter8_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp27_reg_2164 <= grp_fu_1605_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_115_i_reg_1854 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_3_reg_1920 <= tmp_3_fu_937_p3;
                tmp_42_reg_1915 <= tmp_42_fu_913_p3;
                tmp_7_reg_1925 <= tmp_7_fu_961_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter14, ap_CS_fsm_state2, exitcond389_i_i_fu_664_p2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_i_fu_664_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
        ImagLoc_x_cast_cast_s_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_reg_1959),13));

    ImagLoc_x_fu_1023_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_1_cast_i_fu_992_p1));
        OP2_V_0_1_i_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_dout),33));

        OP2_V_0_2_i_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_dout),33));

        OP2_V_0_i_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_0_dout),33));

        OP2_V_1_1_i_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_1_dout),33));

        OP2_V_1_2_i_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_2_dout),33));

        OP2_V_1_i_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_dout),33));

        OP2_V_2_1_i_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_1_dout),33));

        OP2_V_2_2_i_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_2_dout),33));

        OP2_V_2_i_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_dout),33));

    Range1_all_ones_fu_1454_p2 <= "1" when (p_Result_6_i_i_i_fu_1445_p4 = ap_const_lv6_3F) else "0";
    Range1_all_zeros_fu_1460_p2 <= "1" when (p_Result_6_i_i_i_fu_1445_p4 = ap_const_lv6_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(5);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter14, ap_reg_pp0_iter13_or_cond_i_i_reg_1977, ap_predicate_op204_read_state7, ap_predicate_op205_read_state7)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op204_read_state7 = ap_const_boolean_1)))) or ((ap_reg_pp0_iter13_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter14, ap_reg_pp0_iter13_or_cond_i_i_reg_1977, ap_predicate_op204_read_state7, ap_predicate_op205_read_state7)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op204_read_state7 = ap_const_boolean_1)))) or ((ap_reg_pp0_iter13_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter14, ap_reg_pp0_iter13_or_cond_i_i_reg_1977, ap_predicate_op204_read_state7, ap_predicate_op205_read_state7)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op204_read_state7 = ap_const_boolean_1)))) or ((ap_reg_pp0_iter13_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
                ap_block_state1 <= ((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_pp0_stage0_iter14_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter13_or_cond_i_i_reg_1977)
    begin
                ap_block_state19_pp0_stage0_iter14 <= ((ap_reg_pp0_iter13_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op204_read_state7, ap_predicate_op205_read_state7)
    begin
                ap_block_state7_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state7 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op204_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1475_assign_proc : process(ap_block_pp0_stage0, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981, ap_enable_reg_pp0_iter4)
    begin
                ap_condition_1475 <= ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter3_state8_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter3_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, exitcond389_i_i_fu_664_p2)
    begin
        if (((exitcond389_i_i_fu_664_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op204_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_i_reg_1950, or_cond_i_i_i_reg_1981, icmp_reg_1841)
    begin
                ap_predicate_op204_read_state7 <= ((or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1950 = ap_const_lv1_0));
    end process;


    ap_predicate_op205_read_state7_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_i_reg_1950, or_cond_i_i_i_reg_1981, icmp_reg_1841, tmp_2_i_reg_1832)
    begin
                ap_predicate_op205_read_state7 <= ((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1950 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond389_i_i_fu_664_p2)
    begin
        if (((exitcond389_i_i_fu_664_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_fu_1131_p2 <= (tmp_6_i_fu_1072_p2 or rev_reg_1930);
    brmerge_i_i_i_fu_1556_p2 <= (p_39_demorgan_i_not_i_fu_1551_p2 or neg_src_not_i_i_i_reg_2233);
    brmerge_i_i_not_i_i_s_fu_1547_p2 <= (p_39_demorgan_i_i_i_i_reg_2227 and neg_src_not_i_i_i_reg_2233);
    carry_fu_1495_p2 <= (tmp_8_i_i_i_fu_1489_p2 and tmp_54_fu_1469_p3);
    col_assign_1_t_i_fu_1146_p2 <= std_logic_vector(unsigned(tmp_s_fu_654_p2) - unsigned(tmp_49_reg_1990));
        col_assign_cast_i_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1985),32));

    col_buf_0_val_0_0_fu_1179_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_pp0_iter2_brmerge_i_reg_1995(0) = '1') else 
        tmp_10_fu_1168_p5;
    col_buf_0_val_1_0_fu_1197_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_pp0_iter2_brmerge_i_reg_1995(0) = '1') else 
        tmp_12_fu_1186_p5;
    col_buf_0_val_2_0_fu_1215_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter2_brmerge_i_reg_1995(0) = '1') else 
        tmp_13_fu_1204_p5;
    deleted_zeros_fu_1501_p3 <= 
        Range1_all_ones_reg_2211 when (carry_fu_1495_p2(0) = '1') else 
        Range1_all_zeros_reg_2217;
    exitcond388_i_i_fu_996_p2 <= "1" when (t_V_1_reg_500 = tmp_i_fu_534_p2) else "0";
    exitcond389_i_i_fu_664_p2 <= "1" when (t_V_reg_489 = tmp_1_i_fu_540_p2) else "0";

    grp_fu_1576_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1576_ce <= ap_const_logic_1;
        else 
            grp_fu_1576_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1576_p0 <= OP2_V_0_1_i_reg_1768(25 - 1 downto 0);
    grp_fu_1576_p1 <= grp_fu_1576_p10(8 - 1 downto 0);
    grp_fu_1576_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_324),33));

    grp_fu_1581_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1581_ce <= ap_const_logic_1;
        else 
            grp_fu_1581_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1581_p0 <= OP2_V_0_2_i_reg_1773(25 - 1 downto 0);
    grp_fu_1581_p1 <= grp_fu_1581_p10(8 - 1 downto 0);
    grp_fu_1581_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_2073),33));

    grp_fu_1586_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1586_ce <= ap_const_logic_1;
        else 
            grp_fu_1586_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1586_p0 <= OP2_V_0_i_reg_1763(25 - 1 downto 0);
    grp_fu_1586_p1 <= grp_fu_1586_p10(8 - 1 downto 0);
    grp_fu_1586_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_328),33));

    grp_fu_1593_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1593_ce <= ap_const_logic_1;
        else 
            grp_fu_1593_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1593_p0 <= OP2_V_1_i_reg_1778(25 - 1 downto 0);
    grp_fu_1593_p1 <= grp_fu_1593_p10(8 - 1 downto 0);
    grp_fu_1593_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_320),33));

    grp_fu_1600_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1600_ce <= ap_const_logic_1;
        else 
            grp_fu_1600_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1600_p0 <= OP2_V_2_i_reg_1793(25 - 1 downto 0);
    grp_fu_1600_p1 <= grp_fu_1600_p10(8 - 1 downto 0);
    grp_fu_1600_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_312),33));

    grp_fu_1605_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1605_ce <= ap_const_logic_1;
        else 
            grp_fu_1605_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1605_p0 <= OP2_V_2_1_i_reg_1798(25 - 1 downto 0);
    grp_fu_1605_p1 <= grp_fu_1605_p10(8 - 1 downto 0);
    grp_fu_1605_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_9_reg_2094),33));

    grp_fu_1612_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1612_ce <= ap_const_logic_1;
        else 
            grp_fu_1612_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1612_p0 <= OP2_V_1_1_i_reg_1783(25 - 1 downto 0);
    grp_fu_1612_p1 <= grp_fu_1612_p10(8 - 1 downto 0);
    grp_fu_1612_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter7_src_kernel_win_0_va_11_reg_2099),33));

    grp_fu_1619_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1619_ce <= ap_const_logic_1;
        else 
            grp_fu_1619_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1619_p0 <= OP2_V_1_2_i_reg_1788(25 - 1 downto 0);
    grp_fu_1619_p1 <= grp_fu_1619_p10(8 - 1 downto 0);
    grp_fu_1619_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter7_src_kernel_win_0_va_7_reg_2067),33));

    grp_fu_1626_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1626_ce <= ap_const_logic_1;
        else 
            grp_fu_1626_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1626_p0 <= OP2_V_2_2_i_reg_1803(25 - 1 downto 0);
    grp_fu_1626_p1 <= grp_fu_1626_p10(8 - 1 downto 0);
    grp_fu_1626_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter9_src_kernel_win_0_va_6_reg_2061),33));
    i_V_fu_669_p2 <= std_logic_vector(unsigned(t_V_reg_489) + unsigned(ap_const_lv11_1));
    icmp1_fu_1017_p2 <= "0" when (tmp_46_fu_1007_p4 = ap_const_lv10_0) else "1";
    icmp_fu_695_p2 <= "0" when (tmp_28_fu_685_p4 = ap_const_lv10_0) else "1";
    j_V_fu_1001_p2 <= std_logic_vector(unsigned(t_V_1_reg_500) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_58_i_fu_1139_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_block_pp0_stage0_11001, tmp_93_i_reg_1846, ap_reg_pp0_iter2_exitcond388_i_i_reg_1950, ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (tmp_93_i_reg_1846 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_block_pp0_stage0_11001, tmp_93_i_reg_1846, ap_reg_pp0_iter2_exitcond388_i_i_reg_1950, ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter2_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (tmp_93_i_reg_1846 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_58_i_fu_1139_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_block_pp0_stage0_11001, tmp_93_1_i_reg_1850, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (tmp_93_1_i_reg_1850 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_reg_pp0_iter3_reg_511, tmp_93_1_i_reg_1850, k_buf_0_val_3_load_reg_2027, ap_condition_1475)
    begin
        if ((ap_const_boolean_1 = ap_condition_1475)) then
            if (((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_2027;
            elsif (((tmp_93_1_i_reg_1850 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= ap_reg_pp0_iter3_reg_511;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_block_pp0_stage0_11001, tmp_93_1_i_reg_1850, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (tmp_93_1_i_reg_1850 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_58_i_fu_1139_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_block_pp0_stage0_11001, tmp_93_i_reg_1846, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (tmp_93_i_reg_1846 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_reg_pp0_iter3_reg_511, tmp_93_i_reg_1846, k_buf_0_val_4_load_reg_2040, ap_condition_1475)
    begin
        if ((ap_const_boolean_1 = ap_condition_1475)) then
            if (((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_2040;
            elsif (((tmp_93_i_reg_1846 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= ap_reg_pp0_iter3_reg_511;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_reg_1841, tmp_2_i_reg_1832, ap_block_pp0_stage0_11001, tmp_93_i_reg_1846, ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (tmp_93_i_reg_1846 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    neg_src_fu_1518_p2 <= (tmp_i_i_i_fu_1512_p2 and signbit_reg_2194);
    neg_src_not_i_i_i_fu_1533_p2 <= (signbit_not_fu_1528_p2 or p_38_i_i_i_i_fu_1507_p2);
    or_cond_i424_i_1_i_fu_837_p2 <= (tmp_120_1_i_fu_833_p2 and rev2_fu_827_p2);
    or_cond_i424_i_2_i_fu_874_p2 <= (tmp_120_2_i_fu_870_p2 and rev3_fu_864_p2);
    or_cond_i424_i_i_fu_795_p2 <= (tmp_120_i_fu_791_p2 and rev1_fu_785_p2);
    or_cond_i_i_fu_1059_p2 <= (icmp_reg_1841 and icmp1_fu_1017_p2);
    or_cond_i_i_i_fu_1076_p2 <= (tmp_6_i_fu_1072_p2 and rev4_fu_1067_p2);
    p_38_i_i_i_i_fu_1507_p2 <= (carry_fu_1495_p2 and Range1_all_ones_reg_2211);
    p_39_demorgan_i_i_i_i_fu_1523_p2 <= (signbit_reg_2194 or deleted_zeros_fu_1501_p3);
    p_39_demorgan_i_not_i_fu_1551_p2 <= (p_39_demorgan_i_i_i_i_reg_2227 xor ap_const_lv1_1);
    p_Result_6_i_i_i_fu_1445_p4 <= grp_fu_1626_p3(36 downto 31);
    p_Val2_2_fu_1476_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_2201) + unsigned(tmp_3_i_i_i_fu_1466_p1));
        p_Val2_5_0_1_cast_s_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_0_1_i_reg_2134),35));

    p_Val2_5_1_i_fu_1393_p2 <= std_logic_vector(signed(tmp24_cast_fu_1390_p1) + signed(p_Val2_5_0_1_cast_s_fu_1387_p1));
    p_Val2_5_2_1_i_fu_1414_p2 <= std_logic_vector(signed(tmp26_cast_fu_1411_p1) + signed(tmp25_reg_2169));
    p_assign_1_fu_1045_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_1_cast_i_fu_992_p1));
    p_assign_2_fu_1089_p2 <= std_logic_vector(unsigned(tmp_10_cast_cast_i_fu_644_p1) - unsigned(p_p2_i_i_cast_cast19_s_fu_1082_p1));
    p_assign_6_1_i_fu_738_p2 <= std_logic_vector(unsigned(t_V_cast_i_fu_660_p1) + unsigned(ap_const_lv12_FFE));
    p_assign_6_2_i_fu_758_p2 <= std_logic_vector(unsigned(t_V_cast_i_fu_660_p1) + unsigned(ap_const_lv12_FFD));
    p_assign_7_1_i_fu_752_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(t_V_cast_i_fu_660_p1));
    p_assign_7_2_i_fu_772_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) - unsigned(t_V_cast_i_fu_660_p1));
    p_assign_7_i_fu_732_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_cast_i_fu_660_p1));
    p_assign_8_i_fu_815_p2 <= std_logic_vector(unsigned(tmp_135_cast_cast_i_fu_572_p1) - unsigned(p_p2_i425_i_cast_cast_fu_806_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter14, ap_reg_pp0_iter13_or_cond_i_i_reg_1977)
    begin
        if (((ap_reg_pp0_iter13_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_mux_i_i_i_fu_1561_p3 when (brmerge_i_i_i_fu_1556_p2(0) = '1') else 
        p_i_i_i_reg_2239;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter14, ap_reg_pp0_iter13_or_cond_i_i_reg_1977, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter13_or_cond_i_i_reg_1977 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_i_fu_1539_p3 <= 
        ap_const_lv8_0 when (neg_src_fu_1518_p2(0) = '1') else 
        p_Val2_2_fu_1476_p2;

    p_kernel_val_0_V_0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_0_blk_n <= p_kernel_val_0_V_0_empty_n;
        else 
            p_kernel_val_0_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_0_V_0_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_0_read <= ap_const_logic_1;
        else 
            p_kernel_val_0_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_0_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_1_blk_n <= p_kernel_val_0_V_1_empty_n;
        else 
            p_kernel_val_0_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_0_V_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_1_read <= ap_const_logic_1;
        else 
            p_kernel_val_0_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_0_V_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_2_blk_n <= p_kernel_val_0_V_2_empty_n;
        else 
            p_kernel_val_0_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_0_V_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_0_V_2_read <= ap_const_logic_1;
        else 
            p_kernel_val_0_V_2_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_1_V_0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_1_V_0_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_0_blk_n <= p_kernel_val_1_V_0_empty_n;
        else 
            p_kernel_val_1_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_1_V_0_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_0_read <= ap_const_logic_1;
        else 
            p_kernel_val_1_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_1_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_1_V_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_1_blk_n <= p_kernel_val_1_V_1_empty_n;
        else 
            p_kernel_val_1_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_1_V_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_1_read <= ap_const_logic_1;
        else 
            p_kernel_val_1_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_1_V_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_1_V_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_2_blk_n <= p_kernel_val_1_V_2_empty_n;
        else 
            p_kernel_val_1_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_1_V_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_1_V_2_read <= ap_const_logic_1;
        else 
            p_kernel_val_1_V_2_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_2_V_0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_2_V_0_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_0_blk_n <= p_kernel_val_2_V_0_empty_n;
        else 
            p_kernel_val_2_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_2_V_0_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_0_read <= ap_const_logic_1;
        else 
            p_kernel_val_2_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_2_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_2_V_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_1_blk_n <= p_kernel_val_2_V_1_empty_n;
        else 
            p_kernel_val_2_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_2_V_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_1_read <= ap_const_logic_1;
        else 
            p_kernel_val_2_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_kernel_val_2_V_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_2_blk_n <= p_kernel_val_2_V_2_empty_n;
        else 
            p_kernel_val_2_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_kernel_val_2_V_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_kernel_val_0_V_0_empty_n, p_kernel_val_0_V_1_empty_n, p_kernel_val_0_V_2_empty_n, p_kernel_val_1_V_0_empty_n, p_kernel_val_1_V_1_empty_n, p_kernel_val_1_V_2_empty_n, p_kernel_val_2_V_0_empty_n, p_kernel_val_2_V_1_empty_n, p_kernel_val_2_V_2_empty_n)
    begin
        if ((not(((p_kernel_val_2_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_2_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_1_V_0_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_2_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_1_empty_n = ap_const_logic_0) or (p_kernel_val_0_V_0_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_kernel_val_2_V_2_read <= ap_const_logic_1;
        else 
            p_kernel_val_2_V_2_read <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_i_fu_1561_p3 <= 
        p_Val2_2_reg_2222 when (brmerge_i_i_not_i_i_s_fu_1547_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_p2_i425_i_1_i_fu_843_p3 <= 
        p_assign_7_1_i_reg_1892 when (tmp_32_reg_1887(0) = '1') else 
        p_assign_6_1_i_reg_1879;
    p_p2_i425_i_2_i_fu_880_p3 <= 
        p_assign_7_2_i_reg_1910 when (tmp_35_reg_1905(0) = '1') else 
        p_assign_6_2_i_reg_1897;
        p_p2_i425_i_cast_cast_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i425_i_i_fu_801_p3),13));

    p_p2_i425_i_i_fu_801_p3 <= 
        p_assign_7_i_reg_1874 when (tmp_30_reg_1869(0) = '1') else 
        tmp_118_i_reg_1861;
        p_p2_i_i_cast_cast19_s_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_i_reg_1971),13));

    p_p2_i_i_i_fu_1051_p3 <= 
        p_assign_1_fu_1045_p2 when (tmp_48_fu_1037_p3(0) = '1') else 
        ImagLoc_x_fu_1023_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond388_i_i_reg_1950, or_cond_i_i_i_reg_1981, icmp_reg_1841, tmp_2_i_reg_1832)
    begin
        if ((((tmp_2_i_reg_1832 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_i_reg_1981 = ap_const_lv1_1) and (icmp_reg_1841 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_i_reg_1950 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op204_read_state7, ap_predicate_op205_read_state7, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op205_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op204_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev1_fu_785_p2 <= (tmp_29_fu_778_p3 xor ap_const_lv1_1);
    rev2_fu_827_p2 <= (tmp_31_fu_820_p3 xor ap_const_lv1_1);
    rev3_fu_864_p2 <= (tmp_34_fu_857_p3 xor ap_const_lv1_1);
    rev4_fu_1067_p2 <= (tmp_47_reg_1965 xor ap_const_lv1_1);
    rev_fu_969_p2 <= (ult_reg_1836 xor ap_const_lv1_1);
    row_assign_8_1_t_i_fu_984_p2 <= std_logic_vector(unsigned(tmp_fu_576_p2) - unsigned(tmp_3_reg_1920));
    row_assign_8_2_t_i_fu_988_p2 <= std_logic_vector(unsigned(tmp_fu_576_p2) - unsigned(tmp_7_reg_1925));
    sel_tmp7_fu_1108_p2 <= (tmp_6_i_not_fu_1102_p2 or tmp_47_reg_1965);
    sel_tmp8_fu_1113_p2 <= (tmp_8_i_fu_1085_p2 and sel_tmp7_fu_1108_p2);
    sel_tmp_fu_1094_p3 <= 
        ImagLoc_x_cast_cast_s_fu_1064_p1 when (or_cond_i_i_i_fu_1076_p2(0) = '1') else 
        p_assign_2_fu_1089_p2;
    signbit_not_fu_1528_p2 <= (signbit_reg_2194 xor ap_const_lv1_1);
    src_kernel_win_0_va_6_fu_1266_p3 <= 
        tmp_14_fu_1258_p5 when (tmp_115_i_reg_1854(0) = '1') else 
        col_buf_0_val_0_0_reg_2032;
    src_kernel_win_0_va_7_fu_1280_p3 <= 
        tmp_15_fu_1272_p5 when (tmp_115_i_reg_1854(0) = '1') else 
        col_buf_0_val_1_0_reg_2045;
    src_kernel_win_0_va_8_fu_1294_p3 <= 
        tmp_18_fu_1286_p5 when (tmp_115_i_reg_1854(0) = '1') else 
        col_buf_0_val_2_0_reg_2053;
    t_V_1_cast_i_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_500),12));
    t_V_cast_i_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_489),12));
        tmp24_cast_fu_1390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp24_reg_2139),35));

        tmp26_cast_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp26_reg_2174),36));

    tmp_10_cast_cast_i_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_i_fu_638_p2),13));
    tmp_10_i_fu_638_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(tmp_9_i_fu_630_p3));
    tmp_115_i_fu_713_p2 <= "1" when (unsigned(t_V_reg_489) > unsigned(tmp_11_fu_522_p1)) else "0";
    tmp_118_i_fu_718_p2 <= std_logic_vector(unsigned(t_V_cast_i_fu_660_p1) + unsigned(ap_const_lv12_FFF));
    tmp_11_fu_522_p1 <= p_src_rows_V(11 - 1 downto 0);
    tmp_120_1_i_fu_833_p2 <= "1" when (signed(p_assign_6_1_i_reg_1879) < signed(tmp_9_fu_518_p1)) else "0";
    tmp_120_2_i_fu_870_p2 <= "1" when (signed(p_assign_6_2_i_reg_1897) < signed(tmp_9_fu_518_p1)) else "0";
    tmp_120_i_fu_791_p2 <= "1" when (signed(tmp_118_i_reg_1861) < signed(tmp_9_fu_518_p1)) else "0";
    tmp_132_1_i_fu_848_p2 <= "1" when (signed(p_p2_i425_i_1_i_fu_843_p3) < signed(tmp_9_fu_518_p1)) else "0";
    tmp_132_2_i_fu_885_p2 <= "1" when (signed(p_p2_i425_i_2_i_fu_880_p3) < signed(tmp_9_fu_518_p1)) else "0";
    tmp_132_i_fu_810_p2 <= "1" when (signed(p_p2_i425_i_i_fu_801_p3) < signed(tmp_9_fu_518_p1)) else "0";
    tmp_134_i_fu_558_p3 <= (tmp_11_fu_522_p1 & ap_const_lv1_0);
    tmp_135_cast_cast_i_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_135_i_fu_566_p2),13));
    tmp_135_i_fu_566_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) + unsigned(tmp_134_i_fu_558_p3));
    tmp_16_fu_526_p1 <= p_src_cols_V(12 - 1 downto 0);
    tmp_17_fu_530_p1 <= p_src_cols_V(11 - 1 downto 0);
    tmp_1_fu_586_p3 <= (tmp_27_fu_582_p1 & ap_const_lv1_0);
    tmp_1_i_fu_540_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_11_fu_522_p1));
    tmp_22_fu_546_p1 <= p_src_rows_V(2 - 1 downto 0);
    tmp_23_fu_550_p1 <= p_src_rows_V(2 - 1 downto 0);
    tmp_26_fu_554_p1 <= p_src_cols_V(2 - 1 downto 0);
    tmp_27_fu_582_p1 <= p_src_rows_V(1 - 1 downto 0);
    tmp_28_fu_685_p4 <= t_V_reg_489(10 downto 1);
    tmp_29_fu_778_p3 <= tmp_118_i_reg_1861(11 downto 11);
    tmp_2_fu_926_p3 <= 
        tmp_33_fu_853_p1 when (tmp_132_1_i_fu_848_p2(0) = '1') else 
        tmp_8_fu_921_p2;
    tmp_2_i_fu_675_p2 <= "1" when (unsigned(t_V_reg_489) < unsigned(tmp_11_fu_522_p1)) else "0";
    tmp_31_fu_820_p3 <= p_assign_6_1_i_reg_1879(11 downto 11);
    tmp_33_fu_853_p1 <= p_p2_i425_i_1_i_fu_843_p3(2 - 1 downto 0);
    tmp_34_fu_857_p3 <= p_assign_6_2_i_reg_1897(11 downto 11);
    tmp_36_fu_890_p1 <= p_p2_i425_i_2_i_fu_880_p3(2 - 1 downto 0);
    tmp_37_fu_974_p2 <= std_logic_vector(unsigned(tmp_23_fu_550_p1) + unsigned(ap_const_lv2_3));
    tmp_38_fu_894_p1 <= tmp_118_i_reg_1861(2 - 1 downto 0);
    tmp_39_fu_897_p1 <= p_p2_i425_i_i_fu_801_p3(2 - 1 downto 0);
    tmp_3_fu_937_p3 <= 
        tmp_44_fu_934_p1 when (or_cond_i424_i_1_i_fu_837_p2(0) = '1') else 
        tmp_2_fu_926_p3;
    tmp_3_i_i_i_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_reg_2206),8));
    tmp_40_fu_901_p1 <= p_assign_8_i_fu_815_p2(2 - 1 downto 0);
    tmp_41_fu_905_p3 <= 
        tmp_39_fu_897_p1 when (tmp_132_i_fu_810_p2(0) = '1') else 
        tmp_40_fu_901_p1;
    tmp_42_fu_913_p3 <= 
        tmp_38_fu_894_p1 when (or_cond_i424_i_i_fu_795_p2(0) = '1') else 
        tmp_41_fu_905_p3;
    tmp_43_fu_979_p2 <= std_logic_vector(unsigned(tmp_37_fu_974_p2) - unsigned(tmp_42_reg_1915));
    tmp_44_fu_934_p1 <= p_assign_6_1_i_reg_1879(2 - 1 downto 0);
    tmp_45_fu_958_p1 <= p_assign_6_2_i_reg_1897(2 - 1 downto 0);
    tmp_46_fu_1007_p4 <= t_V_1_reg_500(10 downto 1);
    tmp_48_fu_1037_p3 <= ImagLoc_x_fu_1023_p2(11 downto 11);
    tmp_49_fu_1127_p1 <= x_fu_1119_p3(2 - 1 downto 0);
    tmp_4_fu_945_p2 <= std_logic_vector(unsigned(tmp_5_fu_648_p2) - unsigned(tmp_36_fu_890_p1));
    tmp_54_fu_1469_p3 <= p_Val2_3_reg_2189(30 downto 30);
    tmp_55_fu_1481_p3 <= p_Val2_2_fu_1476_p2(7 downto 7);
    tmp_58_i_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_i_fu_1136_p1),64));
    tmp_5_fu_648_p2 <= (tmp_1_fu_586_p3 xor ap_const_lv2_2);
    tmp_6_fu_950_p3 <= 
        tmp_36_fu_890_p1 when (tmp_132_2_i_fu_885_p2(0) = '1') else 
        tmp_4_fu_945_p2;
    tmp_6_i_fu_1072_p2 <= "1" when (signed(ImagLoc_x_reg_1959) < signed(tmp_16_fu_526_p1)) else "0";
    tmp_6_i_not_fu_1102_p2 <= (tmp_6_i_fu_1072_p2 xor ap_const_lv1_1);
    tmp_7_fu_961_p3 <= 
        tmp_45_fu_958_p1 when (or_cond_i424_i_2_i_fu_874_p2(0) = '1') else 
        tmp_6_fu_950_p3;
    tmp_8_fu_921_p2 <= std_logic_vector(unsigned(tmp_5_fu_648_p2) - unsigned(tmp_33_fu_853_p1));
    tmp_8_i_fu_1085_p2 <= "1" when (signed(p_p2_i_i_i_reg_1971) < signed(tmp_16_fu_526_p1)) else "0";
    tmp_8_i_i_i_fu_1489_p2 <= (tmp_55_fu_1481_p3 xor ap_const_lv1_1);
    tmp_93_1_i_fu_707_p2 <= "1" when (t_V_reg_489 = ap_const_lv11_0) else "0";
    tmp_93_i_fu_701_p2 <= "1" when (t_V_reg_489 = ap_const_lv11_1) else "0";
    tmp_9_fu_518_p1 <= p_src_rows_V(12 - 1 downto 0);
    tmp_9_i_fu_630_p3 <= (tmp_17_fu_530_p1 & ap_const_lv1_0);
    tmp_fu_576_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_22_fu_546_p1));
    tmp_i_fu_534_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_17_fu_530_p1));
    tmp_i_i_i_fu_1512_p2 <= (p_38_i_i_i_i_fu_1507_p2 xor ap_const_lv1_1);
    tmp_s_fu_654_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_26_fu_554_p1));
    ult_fu_680_p2 <= "1" when (unsigned(t_V_reg_489) < unsigned(tmp_11_fu_522_p1)) else "0";
    x_fu_1119_p3 <= 
        p_p2_i_i_cast_cast19_s_fu_1082_p1 when (sel_tmp8_fu_1113_p2(0) = '1') else 
        sel_tmp_fu_1094_p3;
end behav;
