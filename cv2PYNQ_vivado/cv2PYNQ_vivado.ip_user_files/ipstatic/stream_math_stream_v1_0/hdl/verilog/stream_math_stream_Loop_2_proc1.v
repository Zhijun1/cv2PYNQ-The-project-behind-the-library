// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module stream_math_stream_Loop_2_proc1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rows_dout,
        rows_empty_n,
        rows_read,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        p_read,
        p_read1,
        g_img_data_stream_0_V_dout,
        g_img_data_stream_0_V_empty_n,
        g_img_data_stream_0_V_read,
        out_stream_TUSER,
        p_read2,
        out_stream_TLAST
);

parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_st6_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_1D = 32'b11101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [10:0] rows_dout;
input   rows_empty_n;
output   rows_read;
output  [31:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
input  [30:0] p_read;
input  [10:0] p_read1;
input  [7:0] g_img_data_stream_0_V_dout;
input   g_img_data_stream_0_V_empty_n;
output   g_img_data_stream_0_V_read;
output  [0:0] out_stream_TUSER;
input  [30:0] p_read2;
output  [0:0] out_stream_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rows_read;
reg out_stream_TVALID;
reg g_img_data_stream_0_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_24;
reg    rows_blk_n;
reg    out_stream_TDATA_blk_n;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_59;
reg    g_img_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_67;
wire   [0:0] tmp_18_i_fu_172_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_79;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_87;
reg    ap_sig_96;
reg   [10:0] rows_read_reg_252;
wire   [10:0] r_fu_157_p2;
reg   [10:0] r_reg_260;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_112;
wire   [0:0] tmp_17_i_fu_163_p2;
reg   [0:0] tmp_17_i_reg_265;
wire   [0:0] exitcond_i_fu_152_p2;
wire   [29:0] c_fu_177_p2;
reg   [29:0] c_reg_273;
reg    ap_sig_123;
reg   [7:0] g_img_data_stream_0_V_read_reg_278;
wire   [0:0] out_stream_user_V_tmp_fu_211_p2;
reg   [0:0] out_stream_user_V_tmp_reg_283;
wire   [0:0] out_stream_last_V_tmp_fu_222_p2;
reg   [0:0] out_stream_last_V_tmp_reg_288;
reg   [7:0] g_img_data_stream_0_V_read_1_reg_293;
reg   [7:0] g_img_data_stream_0_V_read_2_reg_298;
reg   [10:0] r_i_reg_129;
reg   [29:0] p_1_rec_i_reg_141;
reg    ap_sig_ioackin_out_stream_TREADY;
reg    ap_reg_ioackin_out_stream_TREADY;
wire   [30:0] c_cast_i_fu_168_p1;
wire   [10:0] tmp_fu_183_p1;
wire   [18:0] tmp_6_fu_193_p4;
wire   [10:0] tmp_5_fu_187_p2;
wire   [29:0] tmp_23_i_fu_203_p3;
wire   [0:0] tmp_25_i_fu_217_p2;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'b1;
#0 ap_reg_ioackin_out_stream_TREADY = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond_i_fu_152_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_out_stream_TREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~((g_img_data_stream_0_V_empty_n == 1'b0) | (1'b0 == ap_sig_ioackin_out_stream_TREADY)))) begin
            ap_reg_ioackin_out_stream_TREADY <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(g_img_data_stream_0_V_empty_n == 1'b0) & (1'b1 == out_stream_TREADY))) begin
            ap_reg_ioackin_out_stream_TREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~((g_img_data_stream_0_V_empty_n == 1'b0) | (1'b0 == ap_sig_ioackin_out_stream_TREADY)))) begin
        p_1_rec_i_reg_141 <= c_reg_273;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_i_fu_152_p2))) begin
        p_1_rec_i_reg_141 <= ap_const_lv30_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (tmp_18_i_fu_172_p2 == 1'b0) & ~ap_sig_123)) begin
        r_i_reg_129 <= r_reg_260;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_96)) begin
        r_i_reg_129 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_123)) begin
        c_reg_273 <= c_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(g_img_data_stream_0_V_empty_n == 1'b0))) begin
        g_img_data_stream_0_V_read_1_reg_293 <= g_img_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(g_img_data_stream_0_V_empty_n == 1'b0))) begin
        g_img_data_stream_0_V_read_2_reg_298 <= g_img_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(tmp_18_i_fu_172_p2 == 1'b0) & ~ap_sig_123)) begin
        g_img_data_stream_0_V_read_reg_278 <= g_img_data_stream_0_V_dout;
        out_stream_last_V_tmp_reg_288 <= out_stream_last_V_tmp_fu_222_p2;
        out_stream_user_V_tmp_reg_283 <= out_stream_user_V_tmp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        r_reg_260 <= r_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_96)) begin
        rows_read_reg_252 <= rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_i_fu_152_p2))) begin
        tmp_17_i_reg_265 <= tmp_17_i_fu_163_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond_i_fu_152_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond_i_fu_152_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_112) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_67) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_79) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_87) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_59) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_out_stream_TREADY)) begin
        ap_sig_ioackin_out_stream_TREADY = out_stream_TREADY;
    end else begin
        ap_sig_ioackin_out_stream_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(tmp_18_i_fu_172_p2 == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        g_img_data_stream_0_V_blk_n = g_img_data_stream_0_V_empty_n;
    end else begin
        g_img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(tmp_18_i_fu_172_p2 == 1'b0) & ~ap_sig_123) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(g_img_data_stream_0_V_empty_n == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(g_img_data_stream_0_V_empty_n == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~((g_img_data_stream_0_V_empty_n == 1'b0) | (1'b0 == ap_sig_ioackin_out_stream_TREADY))))) begin
        g_img_data_stream_0_V_read = 1'b1;
    end else begin
        g_img_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_stream_TDATA_blk_n = out_stream_TREADY;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(g_img_data_stream_0_V_empty_n == 1'b0) & (1'b0 == ap_reg_ioackin_out_stream_TREADY))) begin
        out_stream_TVALID = 1'b1;
    end else begin
        out_stream_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_96)) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_96) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond_i_fu_152_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (((tmp_18_i_fu_172_p2 == 1'b0) & ~ap_sig_123)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(tmp_18_i_fu_172_p2 == 1'b0) & ~ap_sig_123)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(g_img_data_stream_0_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(g_img_data_stream_0_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if (~((g_img_data_stream_0_V_empty_n == 1'b0) | (1'b0 == ap_sig_ioackin_out_stream_TREADY))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_112 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_123 = (~(tmp_18_i_fu_172_p2 == 1'b0) & (g_img_data_stream_0_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_24 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_59 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_67 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_79 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_87 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_96 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (rows_empty_n == 1'b0));
end

assign c_cast_i_fu_168_p1 = p_1_rec_i_reg_141;

assign c_fu_177_p2 = (p_1_rec_i_reg_141 + ap_const_lv30_1);

assign exitcond_i_fu_152_p2 = ((r_i_reg_129 == rows_read_reg_252) ? 1'b1 : 1'b0);

assign out_stream_TDATA = {{{{g_img_data_stream_0_V_dout}, {g_img_data_stream_0_V_read_2_reg_298}}, {g_img_data_stream_0_V_read_1_reg_293}}, {g_img_data_stream_0_V_read_reg_278}};

assign out_stream_TLAST = out_stream_last_V_tmp_reg_288;

assign out_stream_TUSER = out_stream_user_V_tmp_reg_283;

assign out_stream_last_V_tmp_fu_222_p2 = (tmp_17_i_reg_265 & tmp_25_i_fu_217_p2);

assign out_stream_user_V_tmp_fu_211_p2 = ((tmp_23_i_fu_203_p3 == ap_const_lv30_0) ? 1'b1 : 1'b0);

assign r_fu_157_p2 = (r_i_reg_129 + ap_const_lv11_1);

assign tmp_17_i_fu_163_p2 = ((r_i_reg_129 == p_read1) ? 1'b1 : 1'b0);

assign tmp_18_i_fu_172_p2 = (($signed(c_cast_i_fu_168_p1) < $signed(p_read)) ? 1'b1 : 1'b0);

assign tmp_23_i_fu_203_p3 = {{tmp_6_fu_193_p4}, {tmp_5_fu_187_p2}};

assign tmp_25_i_fu_217_p2 = ((c_cast_i_fu_168_p1 == p_read2) ? 1'b1 : 1'b0);

assign tmp_5_fu_187_p2 = (tmp_fu_183_p1 | r_i_reg_129);

assign tmp_6_fu_193_p4 = {{p_1_rec_i_reg_141[ap_const_lv32_1D : ap_const_lv32_B]}};

assign tmp_fu_183_p1 = p_1_rec_i_reg_141[10:0];

endmodule //stream_math_stream_Loop_2_proc1
